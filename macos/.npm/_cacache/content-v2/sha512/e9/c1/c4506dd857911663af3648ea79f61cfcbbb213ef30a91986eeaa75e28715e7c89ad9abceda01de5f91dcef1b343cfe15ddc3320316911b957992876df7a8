{"_id":"bfj","_rev":"48-db1174ba099c3d0405b59af6217d3a37","name":"bfj","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","dist-tags":{"latest":"8.0.0"},"versions":{"0.0.1":{"name":"bfj","version":"0.0.1","description":"Big-friendly JSON","homepage":"https://github.com/philbooth/node-bfj","bugs":{"url":"https://github.com/philbooth/node-bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","parse","serialise","serialize","read","write","fast"],"repository":{"type":"git","url":"https://github.com/philbooth/node-bfj.git"},"dependencies":{"check-types":"2.2.x"},"devDependencies":{"jshint":"2.5.x","mocha":"2.1.x","chai":"1.10.x","mockery":"1.4.x","spooks":"2.0.x"},"scripts":{"test":"mocha --ui tdd --reporter spec --recursive --colors test","lint":"jshint src"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"}],"gitHead":"1395c27817475c20c86f4c90f4b335eceadab0d2","_id":"bfj@0.0.1","_shasum":"d5079d9492aca221ce152cdb22f83cb860c1fb42","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"dist":{"shasum":"d5079d9492aca221ce152cdb22f83cb860c1fb42","tarball":"https://registry.npmjs.org/bfj/-/bfj-0.0.1.tgz","integrity":"sha512-y6Ifq3/nhxxUrV+MSz5MIf5tKOL+CZAt/HEmNFcS1pQRA1Ht/9JRMKH1mf63KKnJgoAmC1jwEr6vt2ntrPmvVw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCDUltUqhs6zOIFOZZPHHVOXix6aVbHhJq4gC+dVF4zPwIgOvq+z6VqPK4oEgqGv7sI6HWuprUwi6Eakmp1Qc1bE0o="}]},"directories":{}},"0.1.0":{"name":"bfj","version":"0.1.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","serialise","serialize","read","write","fast"],"repository":{"type":"git","url":"https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"3.1.x"},"devDependencies":{"jshint":"2.6.x","mocha":"2.2.x","chai":"2.1.x","mockery":"1.4.x","spooks":"2.0.x"},"scripts":{"test":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test","lint":"jshint src"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"}],"gitHead":"acf60b185e1e6ab96f71508780bdb5cf51899108","_id":"bfj@0.1.0","_shasum":"87f92f0b098f3f1889a0c8222427591c16704fba","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"dist":{"shasum":"87f92f0b098f3f1889a0c8222427591c16704fba","tarball":"https://registry.npmjs.org/bfj/-/bfj-0.1.0.tgz","integrity":"sha512-NUIfnalQ+k5JptKSnPsgpwQ7lBvZ18ymYh0jn/QTA3RTq7mARJApPnqMtPrqzElWN2sWaUaOPT2IvrKL3GPZkA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCR2+4vNvdOQd8t4lQahILWRAxVev/HikEMwEjRbPNASgIhAJRCm1l08d0Xojg3VYYIUFm4VMbxNS7mMi8rAlDYTx+x"}]},"directories":{}},"0.2.0":{"name":"bfj","version":"0.2.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"3.2.x"},"devDependencies":{"jshint":"2.7.x","mocha":"2.2.x","chai":"2.3.x","mockery":"1.4.x","spooks":"2.0.x"},"scripts":{"test":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test","lint":"jshint src"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"}],"gitHead":"ad1bb2ec43c43c7dba53205babe93845cf5ebeea","_id":"bfj@0.2.0","_shasum":"9c330de9085970f9ba279090458641828ff39079","_from":".","_npmVersion":"2.8.3","_nodeVersion":"1.8.1","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"dist":{"shasum":"9c330de9085970f9ba279090458641828ff39079","tarball":"https://registry.npmjs.org/bfj/-/bfj-0.2.0.tgz","integrity":"sha512-x7Iu490SdG2wNDu+9PsaIEQJqxq+y/sNBKoomfsCMvvkKTcQxqEuiJsI1BMwFDksaD3Cs8mbQMT9SvmD+eUWWA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCID19xUwGWKsUWQ9uaRG7z/tGyj9EySn5LY9b+C0hmAn3AiARHdrswvBL7TZtnk9JjCTRHQvfKEdGRKYoo9C2NFIPHA=="}]},"directories":{}},"1.0.0":{"name":"bfj","version":"1.0.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"~3.2"},"devDependencies":{"jshint":"~2.7","mocha":"~2.2","chai":"~2.3","mockery":"~1.4","spooks":"~2.0"},"scripts":{"lint":"jshint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perfbig":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg","perfsmall":"wget -O test/wpt.json https://raw.githubusercontent.com/nature/webpagetest-mapper/master/examples/dump.json && node test/performance wpt"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"}],"gitHead":"d446c0c39eef9f28aa9cb173498c0d7c0fb6f7b2","_id":"bfj@1.0.0","_shasum":"74343b06744cb882a221a8480a79296b0ac95e68","_from":".","_npmVersion":"2.10.1","_nodeVersion":"2.1.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"dist":{"shasum":"74343b06744cb882a221a8480a79296b0ac95e68","tarball":"https://registry.npmjs.org/bfj/-/bfj-1.0.0.tgz","integrity":"sha512-RNFvGerKnHI2t8HAl5shvwxl8oqh46emQwpE+i6l4UczWX5jqx/v994SIcc0KYQ1hi9Gn3MYSO4axNlcnf86jQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDsOFPH35pMAj0xp8IVHbbufvxfChk3sZQC8LNTbUNkuAIhAKe99wR24T7Wyf+YSSRMyq/jml62mezQMYvHjZVv4Lv7"}]},"directories":{}},"1.1.0":{"name":"bfj","version":"1.1.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"~3.2"},"devDependencies":{"jshint":"~2.7","mocha":"~2.2","chai":"~2.3","mockery":"~1.4","spooks":"~2.0"},"scripts":{"lint":"jshint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perfbig":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg","perfsmall":"wget -O test/wpt.json https://raw.githubusercontent.com/nature/webpagetest-mapper/master/examples/dump.json && node test/performance wpt"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"}],"gitHead":"f620d50cf4e98b5f84e2542edabd178e52ba3582","_id":"bfj@1.1.0","_shasum":"6acd9619489bd5913a46b9346e5dcbe02f52d15e","_from":".","_npmVersion":"2.10.1","_nodeVersion":"2.1.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"dist":{"shasum":"6acd9619489bd5913a46b9346e5dcbe02f52d15e","tarball":"https://registry.npmjs.org/bfj/-/bfj-1.1.0.tgz","integrity":"sha512-03paGO7FhQDb0fLjRN6iy93+Z7aZyvuEhOZ97hVdUc23qaQpmylOmESk5S7FQrsMmaDeBFgu5/IHgXUUkbXQ2A==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCfhY017RWqvfRlk6ywIiWgVRupKmLnOwx5wwoTncfydAIhAN63V1g0BTuBXI4wXJl1eXaQZ1/ZVgd2NhA+nlv8pnXK"}]},"directories":{}},"1.2.0":{"name":"bfj","version":"1.2.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"~3.2"},"devDependencies":{"jshint":"~2.7","mocha":"~2.2","chai":"~2.3","mockery":"~1.4","spooks":"~2.0"},"scripts":{"lint":"jshint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perfbig":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg","perfsmall":"wget -O test/wpt.json https://raw.githubusercontent.com/nature/webpagetest-mapper/master/examples/dump.json && node test/performance wpt"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"}],"gitHead":"0063e2e025d6216c344acce9b544908cd9b76a2f","_id":"bfj@1.2.0","_shasum":"d7666bb53794fe8961c7f1825832e38d1816ffab","_from":".","_npmVersion":"2.11.2","_nodeVersion":"0.12.4","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"dist":{"shasum":"d7666bb53794fe8961c7f1825832e38d1816ffab","tarball":"https://registry.npmjs.org/bfj/-/bfj-1.2.0.tgz","integrity":"sha512-qGNtUzVfHlwORt0wG9Nyv3tSdDS6JcQV9qSJg6s6tfGS4V8RN9G1F8dFTPFZvC0wSqVHZUhcU0AP+frtrLzXIQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDQnQ/FnXsmPDL1Pzv9it1mndXkwpgecL0vnr/6mIvKWAIhAPAkDbwUXMUOqCkOpPCCrQ3ZqvuNXTNSYZCk25gaSvra"}]},"directories":{}},"1.2.1":{"name":"bfj","version":"1.2.1","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"~3.2"},"devDependencies":{"jshint":"~2.7","mocha":"~2.2","chai":"~2.3","mockery":"~1.4","spooks":"~2.0"},"scripts":{"lint":"jshint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perfbig":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg","perfsmall":"wget -O test/wpt.json https://raw.githubusercontent.com/nature/webpagetest-mapper/master/examples/dump.json && node test/performance wpt"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"}],"gitHead":"6a4e91bf8c9fd1e48f26350a352ad1a2729dfffb","_id":"bfj@1.2.1","_shasum":"5391c017d42747bcc6bbb80672a5db76bc89abf8","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.1","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"dist":{"shasum":"5391c017d42747bcc6bbb80672a5db76bc89abf8","tarball":"https://registry.npmjs.org/bfj/-/bfj-1.2.1.tgz","integrity":"sha512-0O1gp4rJKX0zmh/da5WhcBt38ro6zQSMTbyoTGRoPZSB6nPK1Z5Vg8OhJ+l2/5PiiphPYyKkLWRYQJrYuCd+5A==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDkCKEstzCcPsakxrkcJmCdAaXolD6OVU2IW8JJ7ywgkgIgCGDOg1bYYfnLYzr57GaEOD+3c5V7OOnysVppKUfOwug="}]},"directories":{}},"1.2.2":{"name":"bfj","version":"1.2.2","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"~3.2"},"devDependencies":{"jshint":"~2.7","mocha":"~2.2","chai":"~2.3","mockery":"~1.4","spooks":"~2.0"},"scripts":{"lint":"jshint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perfbig":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg","perfsmall":"wget -O test/wpt.json https://raw.githubusercontent.com/nature/webpagetest-mapper/master/examples/dump.json && node test/performance wpt"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"}],"gitHead":"d3847440cd72114d38145de428313ae622d59a09","_id":"bfj@1.2.2","_shasum":"38994ac67fff8d56c467268feaf5abff1e97b16a","_from":".","_npmVersion":"2.4.1","_nodeVersion":"0.10.40","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"38994ac67fff8d56c467268feaf5abff1e97b16a","tarball":"https://registry.npmjs.org/bfj/-/bfj-1.2.2.tgz","integrity":"sha512-QBsHY6dqO3/PybIew2JiFvu0aROInUeHJMJkCPxDEjaXlnNfnI9sE2nOBGbhnNYpHF4vmwc9EAXzR74S5D/eCQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCiXFe5u9juyb9SesRbw2NeDAIkRAd4gZ3XzNnW1tW5JwIgXrTAKXAXFQHJcn9A++i9HaUI8ORh8LqY8QAcvPEJJcs="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"directories":{}},"2.0.0":{"name":"bfj","version":"2.0.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"6.0.x"},"devDependencies":{"eslint":"2.7.x","esprima":"2.7.x","mocha":"2.4.x","chai":"3.5.x","mockery":"1.4.x","spooks":"2.0.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perfbig":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg","perfsmall":"wget -O test/wpt.json https://raw.githubusercontent.com/springernature/webpagetest-mapper/master/examples/dump.json && node test/performance wpt"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"}],"gitHead":"fc2c4018f1324675012ddba947056453990f7785","_id":"bfj@2.0.0","_shasum":"e1d7f749201e4a5b5b003def4e4ea2df977baf39","_from":".","_npmVersion":"2.4.1","_nodeVersion":"4.4.2","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"e1d7f749201e4a5b5b003def4e4ea2df977baf39","tarball":"https://registry.npmjs.org/bfj/-/bfj-2.0.0.tgz","integrity":"sha512-teyuASiW4+XjZXj6ERTe6Ktlt9UPbV6q4fIKE/s1OkAmbFmlErDQCFbWGfgyas5AAbpc4f+dgkCGOMwq5Bj9ww==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIERBMrO/XInR2UixaUtpo3StN5IjPX1cPLLDWXC2WsErAiAmkxMsba0LJXqGFoNPCtshj9m+p+S2bBgXHmrM/JhW8Q=="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/bfj-2.0.0.tgz_1460291608893_0.6028850427828729"},"directories":{}},"2.1.0":{"name":"bfj","version":"2.1.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"6.0.x"},"devDependencies":{"eslint":"2.7.x","esprima":"2.7.x","mocha":"2.4.x","chai":"3.5.x","mockery":"1.4.x","spooks":"2.0.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perfbig":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg","perfsmall":"wget -O test/wpt.json https://raw.githubusercontent.com/springernature/webpagetest-mapper/master/examples/dump.json && node test/performance wpt"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"}],"gitHead":"d7e2ce1e57e7a2b6a07201736c21d86e98756e79","_id":"bfj@2.1.0","_shasum":"52798d5bab08815807220e243e897c16c93108e0","_from":".","_npmVersion":"2.4.1","_nodeVersion":"4.4.3","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"52798d5bab08815807220e243e897c16c93108e0","tarball":"https://registry.npmjs.org/bfj/-/bfj-2.1.0.tgz","integrity":"sha512-3ZNcytwaWqNP0F3N86UxqnVrlnqcy73hGC1KdWw8wY7DPOKdcnxJ8y9y2vQKoPMFccd62TK0LbgL92JRMSlU4w==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCAD/R15AY61aBc4XvvW9SLPOyyJk49DuzTIhTAucrz1QIhAO/WjyvoEgFN7OAUTorfuYYIRpYM9vJBIoq1ntWdCNrP"}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bfj-2.1.0.tgz_1462557620849_0.09111722675152123"},"directories":{}},"2.1.1":{"name":"bfj","version":"2.1.1","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"7.0.1"},"devDependencies":{"eslint":"3.13.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perfbig":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg","perfsmall":"wget -O test/wpt.json https://raw.githubusercontent.com/springernature/webpagetest-mapper/master/examples/dump.json && node test/performance wpt"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"}],"gitHead":"b681dc4fe5889dcda67d17e47499c63292475fc0","_id":"bfj@2.1.1","_shasum":"2c882178c23a9ec4d57b5261f9d87ed20eec0e27","_from":".","_npmVersion":"3.10.9","_nodeVersion":"7.1.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"2c882178c23a9ec4d57b5261f9d87ed20eec0e27","tarball":"https://registry.npmjs.org/bfj/-/bfj-2.1.1.tgz","integrity":"sha512-mb5HnM5TyaUJlbj2Ck57cibqtdtvwluCOBWxVklSmax3viegruYUBtJIbN0xqc9g/Ol0v3hIg27rl9jdeyBOog==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD1L08DGZqvE25tBFM1h1HTEYCsWNEz0UMrqwukbYHhCwIhAOX9GwIF2QoRnA6wuVyDHeCrnJZwhwTCsjgjOgG8v+lL"}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/bfj-2.1.1.tgz_1484494611881_0.23879245482385159"},"directories":{}},"2.1.2":{"name":"bfj","version":"2.1.2","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"7.0.1"},"devDependencies":{"eslint":"3.13.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perfbig":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg","perfsmall":"wget -O test/wpt.json https://raw.githubusercontent.com/springernature/webpagetest-mapper/master/examples/dump.json && node test/performance wpt"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"}],"gitHead":"1c86e02d78ef35ff078cea10b6773e8f29447d78","_id":"bfj@2.1.2","_shasum":"211841022ceb73019da7d7242511e8d1f44fac6c","_from":".","_npmVersion":"2.15.11","_nodeVersion":"7.4.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"211841022ceb73019da7d7242511e8d1f44fac6c","tarball":"https://registry.npmjs.org/bfj/-/bfj-2.1.2.tgz","integrity":"sha512-aq2wPamN805prqEhjds3HK9+Qbk9gELXNZX2nqwvXWtTwsF98uEoaGrxUsJ8Is3n4m8y2J5D2RPBZ7FHXPCJ6Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDsD2iJ7iyZw43JnJgstDEHp6JPPzJUVFxxGSZ97ZsdJwIgNv635Mfl8wuRMnZMnYgpakvRTgUJ/R7J9FabMNtqrxo="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bfj-2.1.2.tgz_1484495171964_0.6378584890626371"},"directories":{}},"3.0.0":{"name":"bfj","version":"3.0.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"7.1.5"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"}],"gitHead":"8ecba1f40cd95b0166ba263f6d5d368572687ecc","_id":"bfj@3.0.0","_shasum":"b0c216e6bcc9bc25f0a362f7a48f6ccc65e0d7c9","_from":".","_npmVersion":"2.15.11","_nodeVersion":"4.8.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"b0c216e6bcc9bc25f0a362f7a48f6ccc65e0d7c9","tarball":"https://registry.npmjs.org/bfj/-/bfj-3.0.0.tgz","integrity":"sha512-DWoIPKsgtlAvLWdQ4FNk8Xs3rXNvG6CibzANrtvlHp1sbRnXeHDEwJOBiRcEJ45kUV6YvL4KQvQ9P8AdU7ZTCg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAcFOA++K+LS0BOzUx2/6ybFQWCoggjCEOrqnDGVtaA2AiEAgi6QXwcB3fBw7rSyV9dK7pPUDYZv5zHMwTBQ82DLWrE="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/bfj-3.0.0.tgz_1492429977277_0.08088409272022545"},"directories":{}},"3.1.0":{"name":"bfj","version":"3.1.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"7.1.5","hoopy":"^0.1.1"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"}],"gitHead":"d97836671cef4f8886b974c5d5bc74343f0f79c3","_id":"bfj@3.1.0","_shasum":"95c32bf03e046e9d958ba4ea69a3eb5aad60fc98","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.2","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"95c32bf03e046e9d958ba4ea69a3eb5aad60fc98","tarball":"https://registry.npmjs.org/bfj/-/bfj-3.1.0.tgz","integrity":"sha512-biqYzYAZGpAkcEy8au6RSA6D6rOVV6mVaXuld0PLgWBuKsC9zNuWbUxizn7rJSsiQAtAQw/H0YIcxDEbODidXA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCowO7RgDmQxTNjpWwRVJsz4QzlGYcvRGefBvxtOOCTuAIgFSzs/aUaQA1T1hKQ+FBiTMtu116WpA4UVBvyIw37vxY="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/bfj-3.1.0.tgz_1494229204109_0.9598670138511807"},"directories":{}},"3.1.1":{"name":"bfj","version":"3.1.1","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"7.1.5","hoopy":"^0.1.1"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"}],"gitHead":"7ff87c44c356f9d0e8e7be77f3d8871602c4ddda","_id":"bfj@3.1.1","_shasum":"bd3d0b3cb14297040f68c2c53b5318a31e6ebb7b","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.2","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"bd3d0b3cb14297040f68c2c53b5318a31e6ebb7b","tarball":"https://registry.npmjs.org/bfj/-/bfj-3.1.1.tgz","integrity":"sha512-+GP/bLrsAEsJcDgFXOePuJ5Q2kIVm2f7GK0n9vCRJDJQxiaOxtdFg4Of8Sw5yN5hhoGiuTGCPy9iSlaS+Fs8qQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDajKNw63cn+3L+BP67aNRKdpy+QwOLiVV34hOLgdt69AiAseb0JOBGf0rOGelepubYE1aMPhvb8dK6ghzMWYXJcBw=="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/bfj-3.1.1.tgz_1494229626582_0.45023703342303634"},"directories":{}},"3.1.2":{"name":"bfj","version":"3.1.2","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"7.1.5","hoopy":"^0.1.1"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"}],"gitHead":"7c64b5e860ab41052dfe45c7b991e697c52526f4","_id":"bfj@3.1.2","_shasum":"b3a3ece6efd88689d8e3f270aa9330a735aaf560","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.2","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"b3a3ece6efd88689d8e3f270aa9330a735aaf560","tarball":"https://registry.npmjs.org/bfj/-/bfj-3.1.2.tgz","integrity":"sha512-F/OTIslBsy+S8DUZH2I3jLZoC25J7Do3MzmQNoKLHWvImBjurtQ3nA2ido4e+0FE8zWE7/ZKnlUojNrWlDiIIw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDYNBNQCQ12oC3S5CIcNvowuHPO/fHmzMof1m5pshP0YwIgMFx1Ue75Nz7St/GlbqPgdPPJF/N8IO/H9N4piynqcoc="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bfj-3.1.2.tgz_1494230326614_0.66427106061019"},"directories":{}},"3.1.3":{"name":"bfj","version":"3.1.3","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"7.1.5","hoopy":"^0.1.1"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"}],"gitHead":"e3a1d1a5c5957ce5d4c16ac99c09e4b5f6e00b90","_id":"bfj@3.1.3","_shasum":"6b8245730db5447416c366b078e28fb7753237cd","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.2","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"6b8245730db5447416c366b078e28fb7753237cd","tarball":"https://registry.npmjs.org/bfj/-/bfj-3.1.3.tgz","integrity":"sha512-zPQKf39nHd4z5LGfJPvvV40G2bnDH+ufFZa0DYEHA/RMcFC0EEED3Lgnr6FK2bjuQoNXFVQVm7sNpFa7k3AxiQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDMyeoehPyB02qjPm9fi0YoyodM0SDFWp+IIe+Q+KTldAIgT69mWNgmmRE2K5qWau69lieY/c9MUtr8csMiNLghimQ="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/bfj-3.1.3.tgz_1494312465468_0.5550012381281704"},"directories":{}},"3.1.4":{"name":"bfj","version":"3.1.4","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"7.1.5","hoopy":"^0.1.1"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"1325669d1f5663489dbf000a5b4c8dff286d1681","_id":"bfj@3.1.4","_shasum":"10c3c5c2bdf3c9e872d27df0656849485e133cf6","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.2","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"10c3c5c2bdf3c9e872d27df0656849485e133cf6","tarball":"https://registry.npmjs.org/bfj/-/bfj-3.1.4.tgz","integrity":"sha512-KP99difj0D+6XEQH49D8DPvHE/k/7l+qxc234kLdt5YhckE54szRveq54GVn4VyjQyS15PKpADcPYWVHzo0hDQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFxDJWqWIEZNTE0/7KJgMecOBODW56snKYqtcnS3RdvwAiB3Fcx2PRI3qQAVtdz+qjIByC/OjxzhTNVH9lKZ16pXoQ=="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-3.1.4.tgz_1495262349238_0.12304943869821727"},"directories":{}},"4.0.0":{"name":"bfj","version":"4.0.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"dependencies":{"check-types":"7.1.5","hoopy":"^0.1.1"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"afe79334a7bcc227c45220de6f461c480ddb4fdd","_id":"bfj@4.0.0","_shasum":"286a4faae3108637337acf7729651b354088737a","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.2","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"286a4faae3108637337acf7729651b354088737a","tarball":"https://registry.npmjs.org/bfj/-/bfj-4.0.0.tgz","integrity":"sha512-kAQuMvDOxbx3atur2Ac60cgxIvbPAPp23C9RnLBIipushoJOBvSH1s4jHN6DCVMZIcERXtc1hwxmxFwobCYiIA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGxkgCakZZFncESOUlinDRTRaMukdz9Z/k91GQRFfxdeAiEAihUc0vsvanDJYM7+t0uRGSOOFPhQbNmqby1/EuIYCM0="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-4.0.0.tgz_1495357879158_0.9390558521263301"},"directories":{}},"4.0.1":{"name":"bfj","version":"4.0.1","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"check-types":"7.1.5","hoopy":"^0.1.1"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"c661358c890213d87b8264265d9c05558a5f0d2a","_id":"bfj@4.0.1","_shasum":"58f4eb3f81a65b52772e264bdd6c30aef6e13b92","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.2","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"58f4eb3f81a65b52772e264bdd6c30aef6e13b92","tarball":"https://registry.npmjs.org/bfj/-/bfj-4.0.1.tgz","integrity":"sha512-72+1oo8E0+R//rMlb7AEFQE1kLpcxh4kSojDhN4Tf/Pigt8hmLaixVOZ7F1MquF7rmOrbb9xR83LxHrRboIHKw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICbC8loSAMAEK+h9zR9MteUIPnD2T3BspNUTFEXXnx6tAiEA3D7n5/yByiGWwK12x6lzTfzqrzJUxz81XbqzWkEzOMM="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-4.0.1.tgz_1496909310325_0.9940687464550138"},"directories":{}},"4.1.0":{"name":"bfj","version":"4.1.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"check-types":"7.1.5","hoopy":"^0.1.1"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"eafc79df95ef514ff58ef469a7820b865be6ef7c","_id":"bfj@4.1.0","_shasum":"ee92ec3b75635633eb8a838ec337854aa91a028b","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"ee92ec3b75635633eb8a838ec337854aa91a028b","tarball":"https://registry.npmjs.org/bfj/-/bfj-4.1.0.tgz","integrity":"sha512-OUJr6kcBPCgpbOfzfkJrrjZZylo83VTssP+W80CPBSQg0VVbLMUCcp9KMMuYT20+ytF9r/FOGiDUZ9jfVlQ9uQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICrSWW66hmvteSR20tzOU5501uYjQMR6cw5Jpmk1970EAiEA47tc0CNI6mPceKffxu/UEcdynuNb3Gg3W8oHsTeA0Go="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-4.1.0.tgz_1498923895515_0.31954631116241217"},"directories":{}},"4.1.1":{"name":"bfj","version":"4.1.1","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"check-types":"7.1.5","hoopy":"^0.1.1"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"54156d5afc3bd89cf28f831d40d84ab0ddc058e4","_id":"bfj@4.1.1","_shasum":"47c89a00f89c28955b1c33ff7745187172b01931","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.1","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"47c89a00f89c28955b1c33ff7745187172b01931","tarball":"https://registry.npmjs.org/bfj/-/bfj-4.1.1.tgz","integrity":"sha512-kr08sl8UEfecAT3gOeymkDuBpQQQrr1ax39f8VJy7cM6MIMIWGhwmyS6dKTdk/6L3tPz5zPs3rIU0lawdySUZg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDHzwth6OJuCSiTHYc2kkaEZZgb7STDjCxL5vfBY2me+wIhALz+TXaLmhkyZuOw7huVWhPkSsH8XPyeMn445/aELeFn"}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-4.1.1.tgz_1501320197792_0.949957482283935"},"directories":{}},"4.2.0":{"name":"bfj","version":"4.2.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"check-types":"^7.3.0","hoopy":"^0.1.1","trier":"^0.3.6"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"00965415fd2080fea26d38073191e3925260024f","_id":"bfj@4.2.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-austX3kJQDofXnV0byxb/vQquvtpX0viAHHRGHR3Ar2aCe9BLlZhU4uUWbc1vkq/videTpEK3H11beSPCOHJZQ==","shasum":"cf25071571cc1ea3257685808c4c3e7b21e320d9","tarball":"https://registry.npmjs.org/bfj/-/bfj-4.2.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCwx5q5huwNm/l1PETMHcnUFWZ+6to3gXdgdCTrgUYOHgIgJ5rRtzph9DFRruarY30TfAXH71RllK5kRWJjIiDEtb4="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-4.2.0.tgz_1503242484652_0.6864028030540794"},"directories":{}},"4.2.1":{"name":"bfj","version":"4.2.1","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"check-types":"^7.3.0","hoopy":"^0.1.1","trier":"^0.3.6"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"b5a6702f9e57347f02b94be7f53b0c6022f1242d","_id":"bfj@4.2.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-2hv/+gddhlczCMMNYaj6fgUkmdxiSGK+2M1KfkoBWoHDDvVP5U/lI3iZRmXu5jjBTrLWNmrczArwFIEr3EXSUg==","shasum":"230fb05629055632f0bbc2e3fe5145d94519c422","tarball":"https://registry.npmjs.org/bfj/-/bfj-4.2.1.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFyzE36mGQUUGsRr8coHk5kmUeUGobBnd0EP7SriEa2qAiEAztCKaKjumtNYgN93rSYeNTkR6EoNBZzbYWwVNCOtW/4="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-4.2.1.tgz_1503749285061_0.9299546256661415"},"directories":{}},"4.2.2":{"name":"bfj","version":"4.2.2","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"check-types":"^7.3.0","hoopy":"^0.1.1","trier":"^0.3.6"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"b3f48e466a4e2c723eb81bdb7996867edd63b28e","_id":"bfj@4.2.2","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-lfkkRsRTmVrmo3JhucsUuOPm3nazw/RWtU3SSzb7HhD3qfDMP8i6i+xAJnmm/StFMwsseu5TyB491pW+UH+50g==","shasum":"0fecb78b4162fc12812e7590540e6f5e6c41a390","tarball":"https://registry.npmjs.org/bfj/-/bfj-4.2.2.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHq6vef/ve6reBnUXa/YDFz5qddu9I0YoZPzCox50v5yAiEAsmBlQTpWUMsSB5xkcXtv1neFJN8ho2+ZnD+8vfISceg="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-4.2.2.tgz_1503816541648_0.7706696134991944"},"directories":{}},"4.2.3":{"name":"bfj","version":"4.2.3","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"check-types":"^7.3.0","hoopy":"^0.1.1","trier":"^0.3.6"},"devDependencies":{"eslint":"3.19.x","mocha":"3.2.x","chai":"3.5.x","mockery":"2.0.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"2eb5e4b19a2ef8300372d355e812fefe1301e2f1","_id":"bfj@4.2.3","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-HykOV9PFENO2u6Ng+L810bXtGAwQiwXW99yRtVjRx+RRKA2TV5fAyX1CZlBEbeGvCr3BBSdy1EpV6cFPyNvSEw==","shasum":"82d9bd708bf5edf4a6df13d19531eb65104137de","tarball":"https://registry.npmjs.org/bfj/-/bfj-4.2.3.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCFOzIHyuKMk7sYZA/Of92SXYEp8OnqpfRcTs4WQ53uggIgRhqy081NZ4MjHnK7o3FJvKdVEQ0lcNynu5l0bpCNdww="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-4.2.3.tgz_1503820084016_0.3707435866817832"},"directories":{}},"4.2.4":{"name":"bfj","version":"4.2.4","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"check-types":"^7.3.0","hoopy":"^0.1.2","tryer":"^1.0.0"},"devDependencies":{"eslint":"4.6.x","mocha":"3.5.x","chai":"4.1.x","mockery":"2.1.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"633b3ee833158572d8a029111b61e2a01c1e7184","_id":"bfj@4.2.4","_shasum":"85f7b23683c2afdc15860384a2d1c3fac80ed33a","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.2","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"85f7b23683c2afdc15860384a2d1c3fac80ed33a","tarball":"https://registry.npmjs.org/bfj/-/bfj-4.2.4.tgz","integrity":"sha512-+c08z3TYqv4dy9b0MAchQsxYlzX9D2asHWW4VhO4ZFTnK7v9ps6iNhEQLqJyEZS6x9G0pgOCk/L7B9E4kp8glQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDa/LikXS3wEfNUy90GRF2L+jPaP8nfY1f5v/wWsfHZYAIgZMEltXUGT5T2V3BqhoL2xD6ooX02e+mH57ZvtJFa7Kg="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-4.2.4.tgz_1504967964948_0.36785698868334293"},"directories":{}},"5.0.0":{"name":"bfj","version":"5.0.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"bluebird":"^3.5.1","check-types":"^7.3.0","hoopy":"^0.1.2","tryer":"^1.0.0"},"devDependencies":{"eslint":"4.6.x","mocha":"3.5.x","chai":"4.1.x","proxyquire":"1.8.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"863e9b9fbe4af27d3512b477ef05cee260215d81","_id":"bfj@5.0.0","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-xZEaMs1R6mD35TLckh266c/JONgX3B8Pt7kxFwiphsOcSWFeleLO1xjOaxKRgwW41L2HGyx+sBY5la4hubef3A==","shasum":"8240dab711058d7474844a8478c65278cb74d603","tarball":"https://registry.npmjs.org/bfj/-/bfj-5.0.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDh8vy3cB6WR6dcu4wvZjOvD0++VBUXMkBU5MDFYt+FQAiEAkvlaZ4xGoE9r3MyKK6TvtVjzT4CyMFIYK3bgXuIoWkc="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-5.0.0.tgz_1512404553165_0.646088657900691"},"directories":{}},"5.1.0":{"name":"bfj","version":"5.1.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"bluebird":"^3.5.1","check-types":"^7.3.0","hoopy":"^0.1.2","tryer":"^1.0.0"},"devDependencies":{"eslint":"4.6.x","mocha":"3.5.x","chai":"4.1.x","proxyquire":"1.8.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"11ddc717f0d65132d0e1bb94aec1398ddfee3942","_id":"bfj@5.1.0","_shasum":"829d0119c90723f302817eb49dcb7df8592c266a","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.12.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"829d0119c90723f302817eb49dcb7df8592c266a","tarball":"https://registry.npmjs.org/bfj/-/bfj-5.1.0.tgz","integrity":"sha512-m/bkmFgga6iRTPK3vL2H5R3RZJMdBMDp0k8+Pe9XRIi0iRCAIGE2qwdZYLBmM/yHfIe1HNwKM8T5MVFn+MH1Cg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICz3D0RmfC9Z0QRW9ErEEcYnDgrrQpWVX089Xcv0m8E9AiEA+63V4v7+cN4GodzQe8m9NWyRWEO32zeSgUWtzYtc/tA="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-5.1.0.tgz_1512566561457_0.39643526496365666"},"directories":{}},"5.1.1":{"name":"bfj","version":"5.1.1","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"bluebird":"^3.5.1","check-types":"^7.3.0","hoopy":"^0.1.2","tryer":"^1.0.0"},"devDependencies":{"eslint":"4.6.x","mocha":"3.5.x","chai":"4.1.x","proxyquire":"1.8.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"f922ceb6a979e7cffd6beda57b97612915eeed63","_id":"bfj@5.1.1","_shasum":"2be9e0cf878570cd490156eca12614f0bfca2d64","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.12.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"shasum":"2be9e0cf878570cd490156eca12614f0bfca2d64","tarball":"https://registry.npmjs.org/bfj/-/bfj-5.1.1.tgz","integrity":"sha512-Iq+QnDM6PgUJ2o+INPkMP1yhaerJwf1Qp/mS/WtnqxPnHYzz73s+qQ3S6hZJkJqta7wxSakl87KB3tN5iGxjNw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBnaD/Mi+u2/wJOFw7edseIkMmKfMVth7Z9CTmD6JSQSAiBDqhBPLFV6EI4OFNI0I4ga0IATa2p0frlqp+jiIMB5dA=="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-5.1.1.tgz_1512644977048_0.9006982876453549"},"directories":{}},"5.2.0":{"name":"bfj","version":"5.2.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"bluebird":"^3.5.1","check-types":"^7.3.0","hoopy":"^0.1.2","tryer":"^1.0.0"},"devDependencies":{"eslint":"4.6.x","mocha":"3.5.x","chai":"4.1.x","proxyquire":"1.8.x","spooks":"2.0.x","please-release-me":"1.0.x","request":"2.81.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"349065f1a4b4ee13c188b5929915ba68f4bd4690","_id":"bfj@5.2.0","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-oH9q1tQFQbNsqUiab+JLQkCKmyhKoXpnL/3DRwY3flKaTuJS6KSnfSZ70jA1NECNNOeHYdHMgFcZPlP/ITt6zw==","shasum":"0c93e05bae83efa0cdf90e62e702e7821b6061b0","tarball":"https://registry.npmjs.org/bfj/-/bfj-5.2.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIH8AYLgk9WEh8QYkMA32u/zyT+H480XjnkODD6tJExULAiAhF5T/op/6N8SMOtqR7GekprDFiziN5JZhXSs1eFmhSA=="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj-5.2.0.tgz_1515154864998_0.9155210321769118"},"directories":{}},"5.2.1":{"name":"bfj","version":"5.2.1","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"bluebird":"^3.5.1","check-types":"^7.3.0","hoopy":"^0.1.2","tryer":"^1.0.0"},"devDependencies":{"eslint":"4.17.x","mocha":"5.0.x","chai":"4.1.x","proxyquire":"1.8.x","spooks":"2.0.x","please-release-me":"2.0.x","request":"2.83.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"1f3ebdee1710e530a06f4702c4603d4a30b7ace5","_id":"bfj@5.2.1","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-wNmADiDWyfT+jaMBHwGDI8digKsGYk7U5ul3MgUwqrDICxSpSktZwEqPmYl6acubRzxWPV/Ws6m3cv8sdDTPxw==","shasum":"447fe07bc0021e768e9cbb44685dd7a858b991cc","tarball":"https://registry.npmjs.org/bfj/-/bfj-5.2.1.tgz","fileCount":34,"unpackedSize":283050,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICTicD+FvVAQTs/KccH7A69Kq0h+c8V0g1I/2jHNIK/HAiEAhfZgN5LW0D1IC0ZkVSLs3NDrJKE+savjyqOssQuMYWE="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_5.2.1_1518249138870_0.7095291801060442"},"_hasShrinkwrap":false},"5.3.0":{"name":"bfj","version":"5.3.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"bluebird":"^3.5.1","check-types":"^7.3.0","hoopy":"^0.1.2","tryer":"^1.0.0"},"devDependencies":{"eslint":"4.19.x","mocha":"5.0.x","chai":"4.1.x","proxyquire":"1.8.x","spooks":"2.0.x","please-release-me":"2.0.x","request":"2.85.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"6132f5a380751e8b9e9856166ed9941d1b15e035","_id":"bfj@5.3.0","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-msddWsYshEsUx1UGn6cUBb5TiI9J1aZs152xE/tzav7v5woGLoCQLyYDE4THdHMnXJogtdsaa4e/kwUUfHnDVw==","shasum":"d61f6b17f12a4d3dbe4c305a953c1405de60430c","tarball":"https://registry.npmjs.org/bfj/-/bfj-5.3.0.tgz","fileCount":34,"unpackedSize":304847,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHmQS2d+J2ztmqoEVqo7LC/MOo/znRrLR+Ic/8H1xP1KAiBPa5rwEg1LcKCELYT9HNJuYF/jr62SQD0yecivZxiyLA=="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_5.3.0_1521390614116_0.4778946488421101"},"_hasShrinkwrap":false},"5.3.1":{"name":"bfj","version":"5.3.1","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"bluebird":"^3.5.1","check-types":"^7.3.0","hoopy":"^0.1.2","tryer":"^1.0.0"},"devDependencies":{"eslint":"4.19.x","mocha":"5.0.x","chai":"4.1.x","proxyquire":"1.8.x","spooks":"2.0.x","please-release-me":"2.0.x","request":"2.85.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"5c1808e11abc35f4cf42dd92d75725528b495bea","_id":"bfj@5.3.1","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-o2LY9aB+5m3c5zL6rke/Wz7pZmrwDq6vCYf/bl0H4qaEDG0ErVq3jSCvuxlbKp88qhy4vnQDqmkL/quI2Ryxvw==","shasum":"4af90fb3d0513cab1f7e623f5636ae3d21931529","tarball":"https://registry.npmjs.org/bfj/-/bfj-5.3.1.tgz","fileCount":34,"unpackedSize":305040,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDKEFuADwtO1Dq08IIyC7ZLX2UF/wbL5iEdwPAYUaPTXwIgVIjAnxOzVY9gGB+2XCxgcy9FA+1SOvYSPKFmi6QW3z8="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_5.3.1_1521395313230_0.17657349127499788"},"_hasShrinkwrap":false},"6.0.0":{"name":"bfj","version":"6.0.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"bluebird":"^3.5.1","check-types":"^7.3.0","hoopy":"^0.1.2","tryer":"^1.0.0"},"devDependencies":{"eslint":"4.19.x","mocha":"5.0.x","chai":"4.1.x","proxyquire":"1.8.x","spooks":"2.0.x","please-release-me":"2.0.x","request":"2.85.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"0f304c45eff6fceabc45620d10e19489100883f9","_id":"bfj@6.0.0","_npmVersion":"5.6.0","_nodeVersion":"8.11.1","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-Xn77GstXa2+FXGLukzJI9+o9LyxTsDAeRCbVFihczFYUEeRQWfIvW7SikAsusaXw8KfPB4I7/nuFQz3AHscHkA==","shasum":"96a4a5d5feeeea567d48cfcf032b19610dc35c55","tarball":"https://registry.npmjs.org/bfj/-/bfj-6.0.0.tgz","fileCount":39,"unpackedSize":359216,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC8yUTKC/pG4LH8YqhDlP2vbaW3Jx1aYsTxa6wBRzSZZwIgKdPHhK4ZWhFB2QyGcoQtpM7ToW7DsgvooFLUlDffPik="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_6.0.0_1522415537472_0.21517785347413843"},"_hasShrinkwrap":false},"6.1.0":{"name":"bfj","version":"6.1.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://github.com/philbooth/bfj","bugs":{"url":"https://github.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://github.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://github.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"bluebird":"^3.5.1","check-types":"^7.3.0","hoopy":"^0.1.2","tryer":"^1.0.0"},"devDependencies":{"eslint":"4.19.x","mocha":"5.0.x","chai":"4.1.x","proxyquire":"1.8.x","spooks":"2.0.x","please-release-me":"2.0.x","request":"2.85.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://github.com/philbooth"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"61087c194d5675c75569a2e08617a98609b16ead","_id":"bfj@6.1.0","_npmVersion":"5.6.0","_nodeVersion":"8.11.1","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-hota9UbHf6L7f/QesZdyoQApoyq7V/A59AAO2TE/K3/nscNmNLW7YBcO9tzBjde2pEz3T0A8wrUc1cZSWym4Bg==","shasum":"042813f24d38a050d4de92005c3f89fe240aba56","tarball":"https://registry.npmjs.org/bfj/-/bfj-6.1.0.tgz","fileCount":39,"unpackedSize":365626,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQClZqx0VZ5oIoNUW/WRKdXtuwJ6todd6qdP7RkPdekPzAIhALlU0pVSMcghUyGNnArpDDceLAbSMii+0elXmh/EyArl"}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_6.1.0_1522686331508_0.841845707341975"},"_hasShrinkwrap":false},"6.1.1":{"name":"bfj","version":"6.1.1","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://gitlab.com/philbooth/bfj","bugs":{"url":"https://gitlab.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://gitlab.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://gitlab.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"bluebird":"^3.5.1","check-types":"^7.3.0","hoopy":"^0.1.2","tryer":"^1.0.0"},"devDependencies":{"chai":"4.1.x","eslint":"4.19.x","mocha":"5.0.x","please-release-me":"^2.0.2","proxyquire":"1.8.x","request":"2.85.x","spooks":"2.0.x"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://philbooth.me/"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"c7324c6e7165208631a8955a6e31e3c335a07ec1","_id":"bfj@6.1.1","_npmVersion":"6.1.0","_nodeVersion":"8.11.1","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-+GUNvzHR4nRyGybQc2WpNJL4MJazMuvf92ueIyA0bIkPRwhhQu3IfZQ2PSoVPpCBJfmoSdOxu5rnotfFLlvYRQ==","shasum":"05a3b7784fbd72cfa3c22e56002ef99336516c48","tarball":"https://registry.npmjs.org/bfj/-/bfj-6.1.1.tgz","fileCount":39,"unpackedSize":372141,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGuXrCRA9TVsSAnZWagAAoRQQAJW13B+m7dkTGGpKBKHD\n73mcVdtJu6zJEDmNui7Cpn95LIW/xrzyK9uiNmCjKEuX3M+STmtwAaoMImZz\nP7hnKPHuRHugiDz9QWN1v6C1wqMHIlpFcBxN3Ug7QRtzqpdYRG5O39n0fkfd\nnUT556QTA35dyPyU8fdYAT4YJd/SzvVM/DDG7mlo1NWvJWS/c6i2fQfFftiw\nyDuZDGRfgRnTJW5L6knipjnCAfhKsnqzTipRaNVatoB/FME/409tvV7/4P0m\nWmWCttj/NJaITy/7VJq4oNHWeoiTzdK2G4uF7+566E1pePZir0s29xy4e2LF\nyePv0iSfp1TMg8aP3ndfXyWtN21ZOwkZYH5e1EGbpSLMBtWcBYHSdSW2vXTb\nHqiyIThzf2jprTp4/sNKEEfceHNThKaXTBTcSHOBpPjYSNwkbQQnxxnBWKue\nwN2qBxBddVljfnABMHm+vZRrkycUmyN52beFbGvSN5yueV05B5z1icRWSzrI\nCqRoS7JPZ/eBqwTDgRoM7QoyGza1Hvt8Nj1n8ce59FcJtwTT/yVquhL++RrM\nT+bjTeMSNQsr/A3bm/rkPqQp1ShKzXkufV8LgAI0V7niletFOqFsR+0wXF/f\nW8p5sdkPkhK7c9BRx9h5Nd1nxAdjSxct6S1H6psZ6fEeDttiDM+6hUPQcur5\ne7/5\r\n=xBu8\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCW7KEwJxjs+Iy/52sx1yIgg0Or1Ubzr2vli+jfm73HNgIgR7OSlUOGAvyXtHQvhG8cJoxoxwC2XWz0r/Mcq8/Fs5c="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_6.1.1_1528489450069_0.2489838935081774"},"_hasShrinkwrap":false},"6.1.2":{"name":"bfj","version":"6.1.2","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://gitlab.com/philbooth/bfj","bugs":{"url":"https://gitlab.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://gitlab.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://gitlab.com/philbooth/bfj.git"},"engines":{"node":">= 6.0.0"},"dependencies":{"bluebird":"^3.5.5","check-types":"^8.0.3","hoopy":"^0.1.4","tryer":"^1.0.1"},"devDependencies":{"chai":"^4.2.0","eslint":"^6.0.1","mocha":"^6.1.4","please-release-me":"^2.1.2","proxyquire":"^2.1.0","request":"^2.88.0","spooks":"^2.0.0"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://philbooth.me/"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"b68c0a7702506f216c7154f1e49bd20a28f78050","_id":"bfj@6.1.2","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-BmBJa4Lip6BPRINSZ0BPEIfB1wUY/9rwbwvIHQA1KjX9om29B6id0wnWXq7m3bn5JrUVjeOTnVuhPT1FiHwPGw==","shasum":"325c861a822bcb358a41c78a33b8e6e2086dde7f","tarball":"https://registry.npmjs.org/bfj/-/bfj-6.1.2.tgz","fileCount":39,"unpackedSize":373783,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdGfGXCRA9TVsSAnZWagAAcNkQAJZ0Tepqqrqcq+4rXfdP\nEpj9YHtGjosirv5QVGDnL+CPx4RjsFt4nwGFsuJFkSknzQ/CZajv5oV+pEsi\nUOzLarJMZCyTx7gtkwyuyiDo9P+fR92S5zezYi+pOFvTJDq/Sz3BCyqxzis2\nR+DDa0bZboSkQ4a79Np8Sz23wFxfH+w+JPqKk741DCcs3Vj8YHjEtSMKjNWI\ndLg0we1uYMGROtYWXMaViu2VNmQt3Dc2dhBG4bsneMRkogVzLo+F9uLUi/VC\nzX9ikA+uLB+o1KF8LMlk7pTufdLywxMHgXg08Rkzshvrbv98FOCVgrQRhQrh\nMAVlzQOYIQeiuOKC7di8ao/NGFk8KHmHAnN3Sjf02gVieqb2zQGk/SF6Xnws\nr3CjCYdU1/4iN6fApIUVf+qru4WtUD/F0NXDjliPqNMMxEqJcVsFtdmZpKLJ\ngkQF3dPqDSXZiFeMC749EERKz18riG1YsNHPmBPrf4iSVvLWVaC/WA++ew5j\nSXbE+1j0vED8jh2tOyKuFjn8wIzfA892Fd0tzlEBEl4siIJHkvi7eAYFrZRC\nhve1Dwt5GtCg9HbvgkcQaM+bEFJDfeiLGcVAxALJlT0Yy2QxrbUH9KjYCjKx\ni6IuVhkBtsbJP7pleyHhfbXACMhhejMHz65IWGo/wSFMfMwBJjA3k1v7py30\nS4Fm\r\n=lutW\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCU+Cnvcutjd4XG1unG4jG3x1shye4j8SkbBaQ6/JGukAIgBUvby3gbTLjafa5fI436cMIticM6DSdEZwbwTwSVua4="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_6.1.2_1561981334952_0.25978558236142146"},"_hasShrinkwrap":false},"7.0.0":{"name":"bfj","version":"7.0.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://gitlab.com/philbooth/bfj","bugs":{"url":"https://gitlab.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://gitlab.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://gitlab.com/philbooth/bfj.git"},"engines":{"node":">= 8.0.0"},"dependencies":{"bluebird":"^3.5.5","check-types":"^8.0.3","hoopy":"^0.1.4","tryer":"^1.0.1"},"devDependencies":{"chai":"^4.2.0","eslint":"^6.0.1","mocha":"^6.1.4","please-release-me":"^2.1.2","proxyquire":"^2.1.0","request":"^2.88.0","spooks":"^2.0.0"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://philbooth.me/"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"7babcef4ff69827f9b7a223bb362ac9033a502de","_id":"bfj@7.0.0","_npmVersion":"6.4.1","_nodeVersion":"8.16.0","_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"dist":{"integrity":"sha512-Oqnqegu1MksqyUx7I6cDB4Mj4zcSXOwOtyywm00YDG5SqPQrnLcl1KEDAWSO05RhsSO7hTuxvsOHj93QzknWpA==","shasum":"8cd88f775e754170e8342ffb13480bc9c6f847c4","tarball":"https://registry.npmjs.org/bfj/-/bfj-7.0.0.tgz","fileCount":39,"unpackedSize":379934,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdIjVlCRA9TVsSAnZWagAAk6YP/3qBtwwgOx2O92YGiNdt\nGTUaaZ40tMAxXlIzkwi+Vdekcfh0nD0zpHv2ZU5QTYe+t5O+FSw0OF9zR4DT\nRCP3oW4/R2PYqx9xb3q+iZO9d+TwUrWT4kJGWJOBNI+ALL0XLByfw48YfFaa\nRWH2vcXeOvqpIFN0Y/uvz3LsEtP2cplV3tnK8ZcjnfbSpHeL2kRDodXF41ln\nLVVyfCQepZtvVLkmBg/j/Bd8UVvXuYHrZAOUdFYshavetegQZigk0TyrJdaP\n101s4C1Wb2LDi1Gh0kbnS/481Sb5svG8hvVdx8jqsDCGhu3m/jFdVfrfAaAe\nAsWNaVoQizLHjTVl5PAAvwIIn2RcUo9bgVkbTv7iK01ScRZ7vqok+QJiH4No\nl+gTmcrwigD4tzvbk+jFwstUvma4oeTNhQLgHg7rYvGdKeZCU3+NZQwjhKEM\nPpljTcB3wtw5uQxxFVEisd0KIop6Q316hL4aCUjPGf8FdjJPNKKYYIczTTgy\ng+mVKD38RkYcKnZj1KEECFCfVxxeoHtdIWgC7kPOdbvSiXLV1lOHvP9GRueK\niE3rQXvyhQ8p4yAQJij2AcZ8ZOjqWT2TQtxJVQk/UGcIqGCLI0CAv6PIt3vL\nJGaktUuppJR6Ds9fB0NU1y96nWgOWiGjFqjEqfUhqLq8mKnC7pcs1ZdTOIFd\nTyNC\r\n=h1Cy\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDld+hF/hqzAgpQfRTxAToPeX4c1rXNzF8/2p4mD/zcVwIgL06AeUwQ//zW/p1OJhKfrX/Q1SKMY6wRz/CLnlLxstA="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_7.0.0_1562522980519_0.0813612228611591"},"_hasShrinkwrap":false},"7.0.1":{"name":"bfj","version":"7.0.1","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://gitlab.com/philbooth/bfj","bugs":{"url":"https://gitlab.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://gitlab.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://gitlab.com/philbooth/bfj.git"},"engines":{"node":">= 8.0.0"},"dependencies":{"bluebird":"^3.5.5","check-types":"^8.0.3","hoopy":"^0.1.4","tryer":"^1.0.1"},"devDependencies":{"chai":"^4.2.0","eslint":"^6.0.1","mocha":"^6.1.4","please-release-me":"^2.1.2","proxyquire":"^2.1.0","request":"^2.88.0","spooks":"^2.0.0"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://philbooth.me/"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"0707721a40ad42cb00227b5e27e89b7a3521b2fb","_id":"bfj@7.0.1","_nodeVersion":"10.16.0","_npmVersion":"6.10.1","dist":{"integrity":"sha512-Zsy7GRuwXTxxTUUMAJ2mnKKkzuwMx0/byIxZHAUiw5QlVzrlX274f4P4V0e2BAhYwgqH5qVi2bVKPfwtUayw5Q==","shasum":"da7d3da7adb59124809675c984727a5a673feef9","tarball":"https://registry.npmjs.org/bfj/-/bfj-7.0.1.tgz","fileCount":39,"unpackedSize":380086,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdJ4F9CRA9TVsSAnZWagAAG3wP/jChcQHTV+4dkZ1xBKQk\nZCn0lBcHmrI9YgfZksdbNpxnKRLmAmKPHl2HWfG7lwljDEInWSLpDwC86hSK\nmAYW+Hxu82cKfwObsC1044EEUJL7gdkOqfIpP2W2LBHfW/8fkr6j3mqa4mzH\nIne+442xkz7Q0pVGRf3gnkQe7uPU9WMh9g0j1hMxW19FcI4RjOmuWprRcT2v\nYufUEc5KVtuEvby1Br1tCwxciLoOIvJ1ACeXo9uj2HffdCtgpRUHIZSqiY3P\nSmhvb/0Kp92v7Q4v+2Yk+4jqohfjzSg+aitubwfsu4i0dkfKbr5Y6Et5djaz\nT8ZNj2omBRkJn7dAsAmb4r74SuOYmurwD9T6s/i5kZmMIuuMSos/kXXRjQfV\nivfymR/rNrIv1LXcBsRja3mNWuoe+kYlIbQY0n79MlCWTJ//gg2Ysz4cnzxK\nviSzN95IECkJVsC+D9Qa8IKz9C/B1U+4qGlcTbI0yfe/ISOy/dSXsHRGZOIT\n/vnHvQUN0ywv0O1WAHMWyovv+nXgqzA9NEsjkSM7EqHOWWuTMgLBXB4UeEqC\nGrzJqrlmEN/c7Vk6YI6xC7spYC5O0Mp9mrXiwO/MFPr/Z1yj/kGSYudJdCFo\nb8d8zMQWn1b9XPtF8C3eZpZ6/2hVACI+YVAW+i/B6txyiqwf5/M1wPBhUi/B\nQpvn\r\n=ZQaq\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBczucpzrysdyRyHvdOYJCmTuk+ow4M9fFcfKPfc8zGgAiBVR15uDTi8rKLgMc8ZfdTs8uNuQjhYHnQiRGdFadEKrA=="}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_7.0.1_1562870140344_0.6466648536108739"},"_hasShrinkwrap":false},"7.0.2":{"name":"bfj","version":"7.0.2","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://gitlab.com/philbooth/bfj","bugs":{"url":"https://gitlab.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://gitlab.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://gitlab.com/philbooth/bfj.git"},"engines":{"node":">= 8.0.0"},"dependencies":{"bluebird":"^3.5.5","check-types":"^11.1.1","hoopy":"^0.1.4","tryer":"^1.0.1"},"devDependencies":{"chai":"^4.2.0","eslint":"^6.0.1","mocha":"^6.1.4","please-release-me":"^2.1.2","proxyquire":"^2.1.0","request":"^2.88.0","spooks":"^2.0.0"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://philbooth.me/"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"4a27164b59ee4296ac38a82fe08b13ce0fe49ff3","_id":"bfj@7.0.2","_nodeVersion":"8.16.0","_npmVersion":"6.10.3","dist":{"integrity":"sha512-+e/UqUzwmzJamNF50tBV6tZPTORow7gQ96iFow+8b562OdMpEK0BcJEq2OSPEDmAbSMBQ7PKZ87ubFkgxpYWgw==","shasum":"1988ce76f3add9ac2913fd8ba47aad9e651bfbb2","tarball":"https://registry.npmjs.org/bfj/-/bfj-7.0.2.tgz","fileCount":39,"unpackedSize":380143,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeANJACRA9TVsSAnZWagAAqKgQAIJt/SLiNdJ1PZEsIx/7\nLdCI3G2AlOBysnSsrofH73zHIL8ygRvqGBj3eWk0COhaTUi7rrqL1fpgAabB\nvQf8tHE/WdxqT33kfqHtHSNe0l1okSUfJoLbJPgJs4cl4w6d81kMnanWRoA5\nEnkv0sNoDDNvEeJ2d3si5C4oP9Udx1dNRgo+UUODNrOSKwt6sgPCFaXe38qu\n/rX5HsSQwRO+KZ+UXabk4qEWaaFjZgeR0j3OnbmLfMPnlEawUAbDNtP04k8M\nnpIryVXSWQdu0GFbCw4iRaaq3Gz31XUhDSQ1Q1Ij9G1nXJHK/221f52ve2pk\n4G0EpxLH3zCti9s2uixMXS4IlEb5BxUZtu/XQfVQ/BnODd96bdZ6wzD2zvAL\nxujJ7NRRvaXc654CRwwvjkKC8Ayf0dEtB8onEl8v8oyrSxCABhbwv0CWL4XE\ncuAIpP/t4Q/u4WDahUdyIzUT+IsR2GIFGmBVoMAokoVYExRmbT7zI1w1cNAT\nVxCLb8TMHP0XdMmXCwejSZhiFAVLXbEEU8aI7Ap6MQDSqnG5NxQX8+9OBb5h\nlcM9dXI+B2bWU8349z95gSqCrAKMfS4Aoy+p9G7GHjRGViFVv/NR52FvLddu\nJ/nbgqGnUUm3Qz3pqRm2jKJk5RYlFSudgGOhyCfXUiTsTP6RSxvYUQWRqj+H\nadWf\r\n=nhJm\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCmKC9RU4sKypnBjLfmo9XjnOIzj9ZvaC4htPmx/cZYTQIhAKByCgjJqWAZLRLFGmtlKePLgrrP/67dIH/T/j+FAR4M"}]},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_7.0.2_1577112128108_0.4260505940731514"},"_hasShrinkwrap":false},"7.1.0":{"name":"bfj","version":"7.1.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://gitlab.com/philbooth/bfj","bugs":{"url":"https://gitlab.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://gitlab.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://gitlab.com/philbooth/bfj.git"},"engines":{"node":">= 8.0.0"},"dependencies":{"bluebird":"^3.7.2","check-types":"^11.2.3","hoopy":"^0.1.4","jsonpath":"^1.1.1","tryer":"^1.0.1"},"devDependencies":{"axios":"^1.5.0","chai":"^4.3.8","eslint":"^8.48.0","mocha":"^10.2.0","please-release-me":"^2.1.4","proxyquire":"^2.1.3","spooks":"^2.0.0"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://philbooth.me/"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"519a26defe83d78e105832b59353b19cdf8a9218","_id":"bfj@7.1.0","_nodeVersion":"20.6.0","_npmVersion":"8.19.2","dist":{"integrity":"sha512-I6MMLkn+anzNdCUp9hMRyui1HaNEUCco50lxbvNS4+EyXg8lN3nJ48PjPWtbH8UVS9CuMoaKE9U2V3l29DaRQw==","shasum":"c5177d522103f9040e1b12980fe8c38cf41d3f8b","tarball":"https://registry.npmjs.org/bfj/-/bfj-7.1.0.tgz","fileCount":39,"unpackedSize":384359,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDmW+CNXWh/2I/3CPrIEfIn/Y51diG9aV7AcJLmgkLRCQIhAIz4nssJDTM4HwR4KNMi5uncde5DmcWmXRkqzrXeit1R"}]},"_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"directories":{},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_7.1.0_1694084767126_0.20332802015332696"},"_hasShrinkwrap":false},"8.0.0":{"name":"bfj","version":"8.0.0","description":"Big-friendly JSON. Asynchronous streaming functions for large JSON data sets.","homepage":"https://gitlab.com/philbooth/bfj","bugs":{"url":"https://gitlab.com/philbooth/bfj/issues"},"license":"MIT","author":{"name":"Phil Booth","url":"https://gitlab.com/philbooth"},"main":"./src","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://gitlab.com/philbooth/bfj.git"},"engines":{"node":">= 18.0.0"},"dependencies":{"bluebird":"^3.7.2","check-types":"^11.2.3","hoopy":"^0.1.4","jsonpath":"^1.1.1","tryer":"^1.0.1"},"devDependencies":{"axios":"^1.5.0","chai":"^4.3.8","eslint":"^8.48.0","mocha":"^10.2.0","please-release-me":"^2.1.4","proxyquire":"^2.1.3","spooks":"^2.0.0"},"scripts":{"lint":"eslint src","test":"npm run unit && npm run integration","unit":"mocha --ui tdd --reporter spec --recursive --colors --slow 120 test/unit","integration":"mocha --ui tdd --reporter spec --colors test/integration","perf":"wget -O test/mtg.json http://mtgjson.com/json/AllSets-x.json && node test/performance mtg"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://philbooth.me/"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"gitHead":"8f63f1811408450573f443445681026646e13834","_id":"bfj@8.0.0","_nodeVersion":"20.6.0","_npmVersion":"8.19.2","dist":{"integrity":"sha512-6KJe4gFrZ4lhmvWcUIj37yFAs36mi2FZXuTkw6udZ/QsX/znFypW4SatqcLA5K5T4BAWgJZD73UFEJJQxuJjoA==","shasum":"d15931bd5ef1ef5c874a59e6ef00653de8416568","tarball":"https://registry.npmjs.org/bfj/-/bfj-8.0.0.tgz","fileCount":39,"unpackedSize":384592,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDS+/3Hb/MOKH5txb8Afou38FppMtcyQ9Ic7wn40OpdtwIhAJ6Oz8NYS8vc60t48FmhJ1nNfDAeZF040LDwP3cESftD"}]},"_npmUser":{"name":"philbooth","email":"pmbooth@gmail.com"},"directories":{},"maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bfj_8.0.0_1694085326530_0.7701261033785844"},"_hasShrinkwrap":false}},"readme":"# BFJ\n\n[![Build status](https://gitlab.com/philbooth/bfj/badges/master/pipeline.svg)](https://gitlab.com/philbooth/bfj/pipelines)\n[![Package status](https://img.shields.io/npm/v/bfj.svg)](https://www.npmjs.com/package/bfj)\n[![Downloads](https://img.shields.io/npm/dw/bfj.svg)](https://www.npmjs.com/package/bfj)\n[![License](https://img.shields.io/npm/l/bfj.svg)](https://opensource.org/licenses/MIT)\n\nBig-Friendly JSON. Asynchronous streaming functions for large JSON data sets.\n\n* [Why would I want those?](#why-would-i-want-those)\n* [Is it fast?](#is-it-fast)\n* [What functions does it implement?](#what-functions-does-it-implement)\n* [How do I install it?](#how-do-i-install-it)\n* [How do I read a JSON file?](#how-do-i-read-a-json-file)\n* [How do I parse a stream of JSON?](#how-do-i-parse-a-stream-of-json)\n* [How do I selectively parse individual items from a JSON stream?](#how-do-i-selectively-parse-individual-items-from-a-json-stream)\n* [How do I write a JSON file?](#how-do-i-write-a-json-file)\n* [How do I create a stream of JSON?](#how-do-i-create-a-stream-of-json)\n* [How do I create a JSON string?](#how-do-i-create-a-json-string)\n* [What other methods are there?](#what-other-methods-are-there)\n  * [bfj.walk (stream, options)](#bfjwalk-stream-options)\n  * [bfj.eventify (data, options)](#bfjeventify-data-options)\n* [What options can I specify?](#what-options-can-i-specify)\n  * [Options for parsing functions](#options-for-parsing-functions)\n  * [Options for serialisation functions](#options-for-serialisation-functions)\n* [Is it possible to pause parsing or serialisation from calling code?](#is-it-possible-to-pause-parsing-or-serialisation-from-calling-code)\n* [Can it handle newline-delimited JSON (NDJSON)?](#can-it-handle-newline-delimited-json-ndjson)\n* [Why does it default to bluebird promises?](#why-does-it-default-to-bluebird-promises)\n* [Can I specify a different promise implementation?](#can-i-specify-a-different-promise-implementation)\n* [Is there a change log?](#is-there-a-change-log)\n* [How do I set up the dev environment?](#how-do-i-set-up-the-dev-environment)\n* [What versions of Node.js does it support?](#what-versions-of-nodejs-does-it-support)\n* [What license is it released under?](#what-license-is-it-released-under)\n\n## Why would I want those?\n\nIf you need\nto parse huge JSON strings\nor stringify huge JavaScript data sets,\nit monopolises the event loop\nand can lead to out-of-memory exceptions.\nBFJ implements asynchronous functions\nand uses pre-allocated fixed-length arrays\nto try and alleviate those issues.\n\n## Is it fast?\n\nNo.\n\nBFJ yields frequently\nto avoid monopolising the event loop,\ninterrupting its own execution\nto let other event handlers run.\nThe frequency of those yields\ncan be controlled with the [`yieldRate` option](#what-options-can-i-specify),\nbut fundamentally it is not designed for speed.\n\nFurthermore,\nwhen serialising data to a stream,\nBFJ uses a fixed-length buffer\nto avoid exhausting available memory.\nWhenever that buffer is full,\nserialisation is paused\nuntil the receiving stream processes some more data,\nregardless of the value of `yieldRate`.\nYou can control the size of the buffer\nusing the [`bufferLength` option](#options-for-serialisation-functions)\nbut really,\nif you need quick results,\nBFJ is not for you.\n\n## What functions does it implement?\n\nNine functions\nare exported.\n\nFive are\nconcerned with\nparsing, or\nturning JSON strings\ninto JavaScript data:\n\n* [`read`](#how-do-i-read-a-json-file)\n  asynchronously parses\n  a JSON file from disk.\n\n* [`parse` and `unpipe`](#how-do-i-parse-a-stream-of-json)\n  are for asynchronously parsing\n  streams of JSON.\n\n* [`match`](#how-do-i-selectively-parse-individual-items-from-a-json-stream)\n  selectively parses individual items\n  from a JSON stream.\n\n* [`walk`](#bfjwalk-stream-options)\n  asynchronously walks\n  a stream,\n  emitting events\n  as it encounters\n  JSON tokens.\n  Analagous to a\n  [SAX parser][sax].\n\nThe other four functions\nhandle the reverse transformations,\nserialising\nJavaScript data\nto JSON:\n\n* [`write`](#how-do-i-write-a-json-file)\n  asynchronously serialises data\n  to a JSON file on disk.\n\n* [`streamify`](#how-do-i-create-a-stream-of-json)\n  asynchronously serialises data\n  to a stream of JSON.\n\n* [`stringify`](#how-do-i-create-a-json-string)\n  asynchronously serialises data\n  to a JSON string.\n\n* [`eventify`](#bfjeventify-data-options)\n  asynchronously traverses\n  a data structure\n  depth-first,\n  emitting events\n  as it encounters items.\n  By default\n  it coerces\n  promises, buffers and iterables\n  to JSON-friendly values.\n\n## How do I install it?\n\nIf you're using npm:\n\n```\nnpm i bfj --save\n```\n\nOr if you just want\nthe git repo:\n\n```\ngit clone git@gitlab.com:philbooth/bfj.git\n```\n\n## How do I read a JSON file?\n\n```js\nconst bfj = require('bfj');\n\nbfj.read(path, options)\n  .then(data => {\n    // :)\n  })\n  .catch(error => {\n    // :(\n  });\n```\n\n`read` returns a [bluebird promise][promise] and\nasynchronously parses\na JSON file\nfrom disk.\n\nIt takes two arguments;\nthe path to the JSON file\nand an [options](#options-for-parsing-functions) object.\n\nIf there are\nno syntax errors,\nthe returned promise is resolved\nwith the parsed data.\nIf syntax errors occur,\nthe promise is rejected\nwith the first error.\n\n## How do I parse a stream of JSON?\n\n```js\nconst bfj = require('bfj');\n\n// By passing a readable stream to bfj.parse():\nbfj.parse(fs.createReadStream(path), options)\n  .then(data => {\n    // :)\n  })\n  .catch(error => {\n    // :(\n  });\n\n// ...or by passing the result from bfj.unpipe() to stream.pipe():\nrequest({ url }).pipe(bfj.unpipe((error, data) => {\n  if (error) {\n    // :(\n  } else {\n    // :)\n  }\n}))\n```\n\n* `parse` returns a [bluebird promise][promise]\n  and asynchronously parses\n  a stream of JSON data.\n\n  It takes two arguments;\n  a [readable stream][readable]\n  from which\n  the JSON\n  will be parsed\n  and an [options](#options-for-parsing-functions) object.\n\n  If there are\n  no syntax errors,\n  the returned promise is resolved\n  with the parsed data.\n  If syntax errors occur,\n  the promise is rejected\n  with the first error.\n\n* `unpipe` returns a [writable stream][writable]\n  that can be passed to [`stream.pipe`][pipe],\n  then parses JSON data\n  read from the stream.\n\n  It takes two arguments;\n  a callback function\n  that will be called\n  after parsing is complete\n  and an [options](#options-for-parsing-functions) object.\n\n  If there are no errors,\n  the callback is invoked\n  with the result as the second argument.\n  If errors occur,\n  the first error is passed\n  the callback\n  as the first argument.\n\n## How do I selectively parse individual items from a JSON stream?\n\n```js\nconst bfj = require('bfj');\n\n// Call match with your stream and a selector predicate/regex/JSONPath/string\nconst dataStream = bfj.match(jsonStream, selector, options);\n\n// Get data out of the returned stream with event handlers\ndataStream.on('data', item => { /* ... */ });\ndataStream.on('end', () => { /* ... */);\ndataStream.on('error', () => { /* ... */);\ndataStream.on('dataError', () => { /* ... */);\n\n// ...or you can pipe it to another stream\ndataStream.pipe(someOtherStream);\n```\n\n`match` returns a readable, object-mode stream\nand asynchronously parses individual matching items\nfrom an input JSON stream.\n\nIt takes three arguments:\na [readable stream][readable]\nfrom which the JSON will be parsed;\na selector argument for determining matches,\nwhich may be a string, a regular expression, a JSONPath expression, or a predicate function;\nand an [options](#options-for-parsing-functions) object.\n\nIf the selector is a string,\nit will be compared to property keys\nto determine whether\neach item in the data is a match.\nIf it is a regular expression,\nthe comparison will be made\nby calling the [RegExp `test` method][regexp-test]\nwith the property key.\nIf it is a JSONPath expression,\nit must start with `$.` to identify the root node\nand only use `child` scope expressions for subsequent nodes.\nPredicate functions will be called with three arguments:\n`key`, `value` and `depth`.\nIf the result of the predicate is a truthy value\nthen the item will be deemed a match.\n\nIn addition to the regular options\naccepted by other parsing functions,\nyou can also specify `minDepth`\nto only apply the selector\nto certain depths.\nThis can improve performance\nand memory usage,\nif you know that\nyou're not interested in\nparsing top-level items.\n\nIf there are any syntax errors in the JSON,\na `dataError` event will be emitted.\nIf any other errors occur,\nan `error` event will be emitted.\n\n## How do I write a JSON file?\n\n```js\nconst bfj = require('bfj');\n\nbfj.write(path, data, options)\n  .then(() => {\n    // :)\n  })\n  .catch(error => {\n    // :(\n  });\n```\n\n`write` returns a [bluebird promise][promise]\nand asynchronously serialises a data structure\nto a JSON file on disk.\nThe promise is resolved\nwhen the file has been written,\nor rejected with the error\nif writing failed.\n\nIt takes three arguments;\nthe path to the JSON file,\nthe data structure to serialise\nand an [options](#options-for-serialisation-functions) object.\n\n## How do I create a stream of JSON?\n\n```js\nconst bfj = require('bfj');\n\nconst stream = bfj.streamify(data, options);\n\n// Get data out of the stream with event handlers\nstream.on('data', chunk => { /* ... */ });\nstream.on('end', () => { /* ... */);\nstream.on('error', () => { /* ... */);\nstream.on('dataError', () => { /* ... */);\n\n// ...or you can pipe it to another stream\nstream.pipe(someOtherStream);\n```\n\n`streamify` returns a [readable stream][readable]\nand asynchronously serialises\na data structure to JSON,\npushing the result\nto the returned stream.\n\nIt takes two arguments;\nthe data structure to serialise\nand an [options](#options-for-serialisation-functions) object.\n\nIf there a circular reference is encountered in the data\nand `options.circular` is not set to `'ignore'`,\na `dataError` event will be emitted.\nIf any other errors occur,\nan `error` event will be emitted.\n\n## How do I create a JSON string?\n\n```js\nconst bfj = require('bfj');\n\nbfj.stringify(data, options)\n  .then(json => {\n    // :)\n  })\n  .catch(error => {\n    // :(\n  });\n```\n\n`stringify` returns a [bluebird promise][promise] and\nasynchronously serialises a data structure\nto a JSON string.\nThe promise is resolved\nto the JSON string\nwhen serialisation is complete.\n\nIt takes two arguments;\nthe data structure to serialise\nand an [options](#options-for-serialisation-functions) object.\n\n## What other methods are there?\n\n### bfj.walk (stream, options)\n\n```js\nconst bfj = require('bfj');\n\nconst emitter = bfj.walk(fs.createReadStream(path), options);\n\nemitter.on(bfj.events.array, () => { /* ... */ });\nemitter.on(bfj.events.object, () => { /* ... */ });\nemitter.on(bfj.events.property, name => { /* ... */ });\nemitter.on(bfj.events.string, value => { /* ... */ });\nemitter.on(bfj.events.number, value => { /* ... */ });\nemitter.on(bfj.events.literal, value => { /* ... */ });\nemitter.on(bfj.events.endArray, () => { /* ... */ });\nemitter.on(bfj.events.endObject, () => { /* ... */ });\nemitter.on(bfj.events.error, error => { /* ... */ });\nemitter.on(bfj.events.dataError, error => { /* ... */ });\nemitter.on(bfj.events.end, () => { /* ... */ });\n```\n\n`walk` returns an [event emitter][eventemitter]\nand asynchronously walks\na stream of JSON data,\nemitting events\nas it encounters\ntokens.\n\nIt takes two arguments;\na [readable stream][readable]\nfrom which\nthe JSON\nwill be read\nand an [options](#options-for-parsing-functions) object.\n\nThe emitted events\nare defined\nas public properties\nof an object,\n`bfj.events`:\n\n* `bfj.events.array`\n  indicates that\n  an array context\n  has been entered\n  by encountering\n  the `[` character.\n\n* `bfj.events.endArray`\n  indicates that\n  an array context\n  has been left\n  by encountering\n  the `]` character.\n\n* `bfj.events.object`\n  indicates that\n  an object context\n  has been entered\n  by encountering\n  the `{` character.\n\n* `bfj.events.endObject`\n  indicates that\n  an object context\n  has been left\n  by encountering\n  the `}` character.\n\n* `bfj.events.property`\n  indicates that\n  a property\n  has been encountered\n  in an object.\n  The listener\n  will be passed\n  the name of the property\n  as its argument\n  and the next event\n  to be emitted\n  will represent\n  the property's value.\n\n* `bfj.events.string`\n  indicates that\n  a string\n  has been encountered.\n  The listener\n  will be passed\n  the value\n  as its argument.\n\n* `bfj.events.number`\n  indicates that\n  a number\n  has been encountered.\n  The listener\n  will be passed\n  the value\n  as its argument.\n\n* `bfj.events.literal`\n  indicates that\n  a JSON literal\n  (either `true`, `false` or `null`)\n  has been encountered.\n  The listener\n  will be passed\n  the value\n  as its argument.\n\n* `bfj.events.error`\n  indicates that\n  an error was caught\n  from one of the event handlers\n  in user code.\n  The listener\n  will be passed\n  the `Error` instance\n  as its argument.\n\n* `bfj.events.dataError`\n  indicates that\n  a syntax error was encountered\n  in the incoming JSON stream.\n  The listener\n  will be passed\n  an `Error` instance\n  decorated with `actual`, `expected`, `lineNumber` and `columnNumber` properties\n  as its argument.\n\n* `bfj.events.end`\n  indicates that\n  the end of the input\n  has been reached\n  and the stream is closed.\n\n* `bfj.events.endLine`\n  indicates that a root-level newline character\n  has been encountered in an [NDJSON](#can-it-handle-newline-delimited-json-ndjson) stream.\n  Only emitted if the `ndjson` [option](#options-for-parsing-functions) is set.\n\nIf you are using `bfj.walk`\nto sequentially parse items in an array,\nyou might also be interested in\nthe [bfj-collections] module.\n\n### bfj.eventify (data, options)\n\n```js\nconst bfj = require('bfj');\n\nconst emitter = bfj.eventify(data, options);\n\nemitter.on(bfj.events.array, () => { /* ... */ });\nemitter.on(bfj.events.object, () => { /* ... */ });\nemitter.on(bfj.events.property, name => { /* ... */ });\nemitter.on(bfj.events.string, value => { /* ... */ });\nemitter.on(bfj.events.number, value => { /* ... */ });\nemitter.on(bfj.events.literal, value => { /* ... */ });\nemitter.on(bfj.events.endArray, () => { /* ... */ });\nemitter.on(bfj.events.endObject, () => { /* ... */ });\nemitter.on(bfj.events.error, error => { /* ... */ });\nemitter.on(bfj.events.dataError, error => { /* ... */ });\nemitter.on(bfj.events.end, () => { /* ... */ });\n```\n\n`eventify` returns an [event emitter][eventemitter]\nand asynchronously traverses\na data structure depth-first,\nemitting events as it\nencounters items.\nBy default it coerces\npromises, buffers and iterables\nto JSON-friendly values.\n\nIt takes two arguments;\nthe data structure to traverse\nand an [options](#options-for-serialisation-functions) object.\n\nThe emitted events\nare defined\nas public properties\nof an object,\n`bfj.events`:\n\n* `bfj.events.array`\n  indicates that\n  an array\n  has been encountered.\n\n* `bfj.events.endArray`\n  indicates that\n  the end of an array\n  has been encountered.\n\n* `bfj.events.object`\n  indicates that\n  an object\n  has been encountered.\n\n* `bfj.events.endObject`\n  indicates that\n  the end of an object\n  has been encountered.\n\n* `bfj.events.property`\n  indicates that\n  a property\n  has been encountered\n  in an object.\n  The listener\n  will be passed\n  the name of the property\n  as its argument\n  and the next event\n  to be emitted\n  will represent\n  the property's value.\n\n* `bfj.events.string`\n  indicates that\n  a string\n  has been encountered.\n  The listener\n  will be passed\n  the value\n  as its argument.\n\n* `bfj.events.number`\n  indicates that\n  a number\n  has been encountered.\n  The listener\n  will be passed\n  the value\n  as its argument.\n\n* `bfj.events.literal`\n  indicates that\n  a JSON literal\n  (either `true`, `false` or `null`)\n  has been encountered.\n  The listener\n  will be passed\n  the value\n  as its argument.\n\n* `bfj.events.error`\n  indicates that\n  an error was caught\n  from one of the event handlers\n  in user code.\n  The listener\n  will be passed\n  the `Error` instance\n  as its argument.\n\n* `bfj.events.dataError`\n  indicates that\n  a circular reference was encountered in the data\n  and the `circular` option was not set to `'ignore'`.\n  The listener\n  will be passed\n  an `Error` instance\n  as its argument.\n\n* `bfj.events.end`\n  indicates that\n  the end of the data\n  has been reached and\n  no further events\n  will be emitted.\n\n## What options can I specify?\n\n### Options for parsing functions\n\n* `options.reviver`:\n  Transformation function,\n  invoked depth-first\n  against the parsed\n  data structure.\n  This option\n  is analagous to the\n  [reviver parameter for JSON.parse][reviver].\n\n* `options.yieldRate`:\n  The number of data items to process\n  before yielding to the event loop.\n  Smaller values yield to the event loop more frequently,\n  meaning less time will be consumed by bfj per tick\n  but the overall parsing time will be slower.\n  Larger values yield to the event loop less often,\n  meaning slower tick times but faster overall parsing time.\n  The default value is `16384`.\n\n* `options.Promise`:\n  Promise constructor that will be used\n  for promises returned by all methods.\n  If you set this option,\n  please be aware that some promise implementations\n  (including native promises)\n  may cause your process to die\n  with out-of-memory exceptions.\n  Defaults to [bluebird's implementation][promise],\n  which does not have that problem.\n\n* `options.ndjson`:\n  If set to `true`,\n  newline characters at the root level\n  will be treated as delimiters between\n  discrete chunks of JSON.\n  See [NDJSON](#can-it-handle-newline-delimited-json-ndjson) for more information.\n\n* `options.numbers`:\n  For `bfj.match` only,\n  set this to `true`\n  if you wish to match against numbers\n  with a string or regular expression\n  `selector` argument.\n\n* `options.bufferLength`:\n  For `bfj.match` only,\n  the length of the match buffer.\n  Smaller values use less memory\n  but may result in a slower parse time.\n  The default value is `1024`.\n\n* `options.highWaterMark`:\n  For `bfj.match` only,\n  set this if you would like to\n  pass a value for the `highWaterMark` option\n  to the readable stream constructor.\n\n### Options for serialisation functions\n\n* `options.space`:\n  Indentation string\n  or the number of spaces\n  to indent\n  each nested level by.\n  This option\n  is analagous to the\n  [space parameter for JSON.stringify][space].\n\n* `options.promises`:\n  By default,\n  promises are coerced\n  to their resolved value.\n  Set this property\n  to `'ignore'`\n  for improved performance\n  if you don't need\n  to coerce promises.\n\n* `options.buffers`:\n  By default,\n  buffers are coerced\n  using their `toString` method.\n  Set this property\n  to `'ignore'`\n  for improved performance\n  if you don't need\n  to coerce buffers.\n\n* `options.maps`:\n  By default,\n  maps are coerced\n  to plain objects.\n  Set this property\n  to `'ignore'`\n  for improved performance\n  if you don't need\n  to coerce maps.\n\n* `options.iterables`:\n  By default,\n  other iterables\n  (i.e. not arrays, strings or maps)\n  are coerced\n  to arrays.\n  Set this property\n  to `'ignore'`\n  for improved performance\n  if you don't need\n  to coerce iterables.\n\n* `options.circular`:\n  By default,\n  circular references\n  will cause the write\n  to fail.\n  Set this property\n  to `'ignore'`\n  if you'd prefer\n  to silently skip past\n  circular references\n  in the data.\n\n* `options.bufferLength`:\n  The length of the write buffer.\n  Smaller values use less memory\n  but may result in a slower serialisation time.\n  The default value is `1024`.\n\n* `options.highWaterMark`:\n  Set this if you would like to\n  pass a value for the `highWaterMark` option\n  to the readable stream constructor.\n\n* `options.yieldRate`:\n  The number of data items to process\n  before yielding to the event loop.\n  Smaller values yield to the event loop more frequently,\n  meaning less time will be consumed by bfj per tick\n  but the overall serialisation time will be slower.\n  Larger values yield to the event loop less often,\n  meaning slower tick times but faster overall serialisation time.\n  The default value is `16384`.\n\n* `options.Promise`:\n  Promise constructor that will be used\n  for promises returned by all methods.\n  If you set this option,\n  please be aware that some promise implementations\n  (including native promises)\n  may cause your process to die\n  with out-of-memory exceptions.\n  Defaults to [bluebird's implementation][promise],\n  which does not have that problem.\n\n## Is it possible to pause parsing or serialisation from calling code?\n\nYes it is!\nBoth [`walk`](#bfjwalk-stream-options)\nand [`eventify`](#bfjeventify-data-options)\ndecorate their returned event emitters\nwith a `pause` method\nthat will prevent any further events being emitted.\nThe `pause` method itself\nreturns a `resume` function\nthat you can call to indicate\nthat processing should continue.\n\nFor example:\n\n```js\nconst bfj = require('bfj');\nconst emitter = bfj.walk(fs.createReadStream(path), options);\n\n// Later, when you want to pause parsing:\n\nconst resume = emitter.pause();\n\n// Then when you want to resume:\n\nresume();\n```\n\n## Can it handle [newline-delimited JSON (NDJSON)](http://ndjson.org/)?\n\nYes.\nIf you pass the `ndjson` [option](#options-for-parsing-functions)\nto `bfj.walk`, `bfj.match` or `bfj.parse`,\nnewline characters at the root level\nwill act as delimiters between\ndiscrete JSON values:\n\n* `bfj.walk` will emit a `bfj.events.endLine` event\n  each time it encounters a newline character.\n\n* `bfj.match` will just ignore the newlines\n  while it continues looking for matching items.\n\n* `bfj.parse` will resolve with the first value\n  and pause the underlying stream.\n  If it's called again with the same stream,\n  it will resume processing\n  and resolve with the second value.\n  To parse the entire stream,\n  calls should be made sequentially one-at-a-time\n  until the returned promise\n  resolves to `undefined`\n  (`undefined` is not a valid JSON token).\n\n`bfj.unpipe` and `bfj.read` will not parse NDJSON.\n\n## Why does it default to bluebird promises?\n\nUntil version `4.2.4`,\nnative promises were used.\nBut they were found\nto cause out-of-memory errors\nwhen serialising large amounts of data to JSON,\ndue to [well-documented problems\nwith the native promise implementation](https://alexn.org/blog/2017/10/11/javascript-promise-leaks-memory.html).\nSo in version `5.0.0`,\nbluebird promises were used instead.\nIn version `5.1.0`,\nan option was added\nthat enables callers to specify\nthe promise constructor to use.\nUse it at your own risk.\n\n## Can I specify a different promise implementation?\n\nYes.\nJust pass the `Promise` option\nto any method.\nIf you get out-of-memory errors\nwhen using that option,\nconsider changing your promise implementation.\n\n## Is there a change log?\n\n[Yes][history].\n\n## How do I set up the dev environment?\n\nThe development environment\nrelies on [Node.js][node],\n[ESLint],\n[Mocha],\n[Chai],\n[Proxyquire] and\n[Spooks].\nAssuming that\nyou already have\nnode and NPM\nset up,\nyou just need\nto run\n`npm install`\nto install\nall of the dependencies\nas listed in `package.json`.\n\nYou can\nlint the code\nwith the command\n`npm run lint`.\n\nYou can\nrun the tests\nwith the command\n`npm test`.\n\n## What versions of Node.js does it support?\n\nAs of [version `8.0.0`](HISTORY.md#700),\nonly Node.js versions 18 or greater\nare supported.\n\nBetween versions [`3.0.0`](HISTORY.md#300)\nand [`6.1.2`](HISTORY.md#612),\nonly Node.js versions 6 or greater\nwere supported.\n\nUntil [version `2.1.2`](HISTORY.md#212),\nonly Node.js versions 4 or greater\nwere supported.\n\n## What license is it released under?\n\n[MIT][license].\n\n[ci-image]: https://secure.travis-ci.org/philbooth/bfj.png?branch=master\n[ci-status]: http://travis-ci.org/#!/philbooth/bfj\n[sax]: http://en.wikipedia.org/wiki/Simple_API_for_XML\n[promise]: http://bluebirdjs.com/docs/api-reference.html\n[bfj-collections]: https://github.com/hash-bang/bfj-collections\n[eventemitter]: https://nodejs.org/api/events.html#events_class_eventemitter\n[readable]: https://nodejs.org/api/stream.html#stream_readable_streams\n[writable]: https://nodejs.org/api/stream.html#stream_writable_streams\n[pipe]: https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n[regexp-test]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\n[reviver]: https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Using_the_reviver_parameter\n[space]: https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The_space_argument\n[history]: HISTORY.md\n[node]: https://nodejs.org/en/\n[eslint]: http://eslint.org/\n[mocha]: https://mochajs.org/\n[chai]: http://chaijs.com/\n[proxyquire]: https://github.com/thlorenz/proxyquire\n[spooks]: https://gitlab.com/philbooth/spooks.js\n[license]: COPYING\n","maintainers":[{"name":"philbooth","email":"pmbooth@gmail.com"}],"time":{"modified":"2023-09-07T11:15:26.929Z","created":"2015-03-11T20:43:10.916Z","0.0.1":"2015-03-11T20:43:10.916Z","0.1.0":"2015-04-03T16:02:02.139Z","0.2.0":"2015-05-04T21:37:02.808Z","1.0.0":"2015-05-27T17:13:31.783Z","1.1.0":"2015-06-01T11:59:38.604Z","1.2.0":"2015-07-26T12:17:46.190Z","1.2.1":"2015-10-20T18:05:51.307Z","1.2.2":"2016-01-05T11:37:15.507Z","2.0.0":"2016-04-10T12:33:29.996Z","2.1.0":"2016-05-06T18:00:23.296Z","2.1.1":"2017-01-15T15:36:52.602Z","2.1.2":"2017-01-15T15:46:14.435Z","3.0.0":"2017-04-17T11:52:57.912Z","3.1.0":"2017-05-08T07:40:05.327Z","3.1.1":"2017-05-08T07:47:08.595Z","3.1.2":"2017-05-08T07:58:48.780Z","3.1.3":"2017-05-09T06:47:46.230Z","3.1.4":"2017-05-20T06:39:12.227Z","4.0.0":"2017-05-21T09:11:20.318Z","4.0.1":"2017-06-08T08:08:31.506Z","4.1.0":"2017-07-01T15:44:55.669Z","4.1.1":"2017-07-29T09:23:18.972Z","4.2.0":"2017-08-20T15:21:25.687Z","4.2.1":"2017-08-26T12:08:06.273Z","4.2.2":"2017-08-27T06:49:03.607Z","4.2.3":"2017-08-27T07:48:05.253Z","4.2.4":"2017-09-09T14:39:26.184Z","5.0.0":"2017-12-04T16:22:33.279Z","5.1.0":"2017-12-06T13:22:42.509Z","5.1.1":"2017-12-07T11:09:38.012Z","5.2.0":"2018-01-05T12:21:06.110Z","5.2.1":"2018-02-10T07:52:19.666Z","5.3.0":"2018-03-18T16:30:14.245Z","5.3.1":"2018-03-18T17:48:33.327Z","6.0.0":"2018-03-30T13:12:17.591Z","6.1.0":"2018-04-02T16:25:31.621Z","6.1.1":"2018-06-08T20:24:10.348Z","6.1.2":"2019-07-01T11:42:15.096Z","7.0.0":"2019-07-07T18:09:40.646Z","7.0.1":"2019-07-11T18:35:40.481Z","7.0.2":"2019-12-23T14:42:08.380Z","7.1.0":"2023-09-07T11:06:07.339Z","8.0.0":"2023-09-07T11:15:26.765Z"},"homepage":"https://gitlab.com/philbooth/bfj","keywords":["json","streamify","stringify","walk","parse","parser","serialise","serialize","read","write","async","asynchronous"],"repository":{"type":"git","url":"git+https://gitlab.com/philbooth/bfj.git"},"contributors":[{"name":"Phil Booth","email":"pmbooth@gmail.com","url":"https://philbooth.me/"},{"name":"Rowan Manning","url":"https://github.com/rowanmanning"},{"name":"Benedikt Rötsch","url":"https://github.com/axe312ger"}],"author":{"name":"Phil Booth","url":"https://gitlab.com/philbooth"},"bugs":{"url":"https://gitlab.com/philbooth/bfj/issues"},"license":"MIT","readmeFilename":"README.md","users":{"tmurngon":true}}
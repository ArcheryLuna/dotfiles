{
    "SourceFileNode": {
        "statementList": [
            {
                "InlineHtml": {
                    "scriptSectionEndTag": null,
                    "text": null,
                    "scriptSectionStartTag": {
                        "kind": "ScriptSectionStartTag",
                        "textLength": 6
                    }
                }
            },
            {
                "ExpressionStatement": {
                    "expression": {
                        "CallExpression": {
                            "callableExpression": {
                                "QualifiedName": {
                                    "globalSpecifier": null,
                                    "relativeSpecifier": null,
                                    "nameParts": [
                                        {
                                            "kind": "Name",
                                            "textLength": 10
                                        }
                                    ]
                                }
                            },
                            "openParen": {
                                "kind": "OpenParenToken",
                                "textLength": 1
                            },
                            "argumentExpressionList": {
                                "ArgumentExpressionList": {
                                    "children": [
                                        {
                                            "ArgumentExpression": {
                                                "name": null,
                                                "colonToken": null,
                                                "dotDotDotToken": null,
                                                "expression": {
                                                    "UnaryOpExpression": {
                                                        "operator": {
                                                            "kind": "MinusToken",
                                                            "textLength": 1
                                                        },
                                                        "operand": {
                                                            "BinaryExpression": {
                                                                "leftOperand": {
                                                                    "Variable": {
                                                                        "dollar": null,
                                                                        "name": {
                                                                            "kind": "VariableName",
                                                                            "textLength": 2
                                                                        }
                                                                    }
                                                                },
                                                                "operator": {
                                                                    "kind": "LessThanLessThanEqualsToken",
                                                                    "textLength": 3
                                                                },
                                                                "rightOperand": {
                                                                    "NumericLiteral": {
                                                                        "children": {
                                                                            "kind": "IntegerLiteralToken",
                                                                            "textLength": 1
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "closeParen": {
                                "kind": "CloseParenToken",
                                "textLength": 1
                            }
                        }
                    },
                    "semicolon": {
                        "kind": "SemicolonToken",
                        "textLength": 1
                    }
                }
            }
        ],
        "endOfFileToken": {
            "kind": "EndOfFileToken",
            "textLength": 0
        }
    }
}
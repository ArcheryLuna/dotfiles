<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.CodeAnalysis.LanguageServer.Protocol</name>
    </assembly>
    <members>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Extensions.GetUriForRenamedDocument(Microsoft.CodeAnalysis.TextDocument)">
            <summary>
            Generate the Uri of a document by replace the name in file path using the document's name.
            Used to generate the correct Uri when rename a document, because calling <seealso cref="M:Microsoft.CodeAnalysis.Document.WithName(System.String)"/> doesn't update the file path.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Extensions.GetTextDocuments(Microsoft.CodeAnalysis.Solution,System.Uri)">
            <summary>
            Get all regular and additional <see cref="T:Microsoft.CodeAnalysis.TextDocument"/>s for the given <paramref name="documentUri"/>.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions.RoslynTagToCompletionItemKinds">
            <summary>
            Mapping from tags to lsp completion item kinds.  The value lists the potential lsp kinds from
            least-preferred to most preferred.  More preferred kinds will be chosen if the client states they support
            it.  This mapping allows values including extensions to the kinds defined by VS (but not in the core LSP
            spec).
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions.CreateAbsoluteUri(System.String)">
            <summary>
            Converts an absolute local file path or an absolute URL string to <see cref="T:System.Uri"/>.
            </summary>
            <exception cref="T:System.UriFormatException">
            The <paramref name="absolutePath"/> can't be represented as <see cref="T:System.Uri"/>.
            For example, UNC paths with invalid characters in server name.
            </exception>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.ProtocolConversions.ChangedDocumentsToTextDocumentEditsAsync``1(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentId},System.Func{Microsoft.CodeAnalysis.DocumentId,``0},System.Func{Microsoft.CodeAnalysis.DocumentId,``0},Microsoft.CodeAnalysis.IDocumentTextDifferencingService,System.Threading.CancellationToken)">
            <summary>
            Compute all the <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentEdit"/> for the input list of changed documents.
            Additionally maps the locations of the changed documents if necessary.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.HostWorkspace.LanguageServerProjectSystemOptionsStorage.BinaryLogPath">
            <summary>
            A folder to log binlogs to when running design-time builds.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.HostWorkspace.LanguageServerProjectSystemOptionsStorage.EnableAutomaticRestore">
            <summary>
            Whether or not automatic nuget restore is enabled.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.BufferedProgress`1">
            <summary>
            Helper type to allow command handlers to report data either in a streaming fashion (if a client supports that),
            or as an array of results.  This type is thread-safe in the same manner that <see cref="T:System.IProgress`1"/> is
            expected to be.  Namely, multiple client can be calling <see cref="M:System.IProgress`1.Report(`0)"/> on it at the same
            time.  This is safe, though the order that the items are reported in when called concurrently is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.BufferedProgress`1._underlyingProgress">
            <summary>
            The progress stream to report results to.  May be <see langword="null"/> for clients that do not support streaming.
            If <see langword="null"/> then <see cref="F:Microsoft.CodeAnalysis.LanguageServer.Handler.BufferedProgress`1._buffer"/> will be non null and will contain all the produced values.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.BufferedProgress`1._buffer">
            <summary>
            A buffer that results are held in if the client does not support streaming.  Values of this can be retrieved
            using <see cref="M:Microsoft.CodeAnalysis.LanguageServer.Handler.BufferedProgress`1.GetValues"/>.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.BufferedProgress`1.Report(`0)">
            <summary>
            Report a value either in a streaming or buffered fashion depending on what the client supports.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.BufferedProgress`1.GetValues">
            <summary>
            Gets the set of buffered values.  Will return null if the client supports streaming.  Must be called after
            all calls to <see cref="M:Microsoft.CodeAnalysis.LanguageServer.Handler.BufferedProgress`1.Report(`0)"/> have been made.  Not safe to call concurrently with any call to <see
            cref="M:Microsoft.CodeAnalysis.LanguageServer.Handler.BufferedProgress`1.Report(`0)"/>.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionHelpers.GetVSCodeActionsAsync(Roslyn.LanguageServer.Protocol.CodeActionParams,Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.CodeActions.CodeActionOptionsProvider,Microsoft.CodeAnalysis.CodeFixes.ICodeFixService,Microsoft.CodeAnalysis.CodeRefactorings.ICodeRefactoringService,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get, order, and filter code actions, and then transform them into VSCodeActions or CodeActions based on <paramref name="hasVsLspCapability"/>.
            </summary>
            <remarks>
            Used by CodeActionsHandler.
            </remarks>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionHelpers.GenerateCodeActions(Roslyn.LanguageServer.Protocol.CodeActionParams,Microsoft.CodeAnalysis.UnifiedSuggestions.IUnifiedSuggestedAction,Roslyn.LanguageServer.Protocol.CodeActionKind)">
            <summary>
            Generate the matching code actions for <paramref name="suggestedAction"/>. If it contains nested code actions, flatten them into an array.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionHelpers.GetCodeActionsAsync(Microsoft.CodeAnalysis.Document,Roslyn.LanguageServer.Protocol.Range,Microsoft.CodeAnalysis.CodeActions.CodeActionOptionsProvider,Microsoft.CodeAnalysis.CodeFixes.ICodeFixService,Microsoft.CodeAnalysis.CodeRefactorings.ICodeRefactoringService,System.String,System.Threading.CancellationToken)">
            <summary>
            Get, order, and filter code actions.
            </summary>
            <remarks>
            Used by CodeActionResolveHandler and RunCodeActionHandler.
            </remarks>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionHelpers.GetNestedActionsFromActionSet(Microsoft.CodeAnalysis.UnifiedSuggestions.IUnifiedSuggestedAction,System.String)">
            <summary>
            Generates a code action with its nested actions properly set.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionResolveData">
            <summary>
            This class provides the intermediate data passed between CodeActionsHandler, CodeActionResolveHandler,
            and RunCodeActionsHandler. The class provides enough information for each handler to identify the code
            action that it is dealing with. The information is passed along via the Data property in LSP.VSCodeAction. 
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActions.CodeActionResolveData.UniqueIdentifier">
            <summary>
            The unique identifier of a code action. No two code actions should have the same unique identifier.
            </summary>
            <remarks>
            The unique identifier is currently set as:
            name of top level code action + '|' + name of nested code action + '|' + name of nested nested code action + etc.
            e.g. 'Suppress or Configure issues|Suppress IDEXXXX|in Source'
            </remarks>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActionResolveHandler">
            <summary>
            Resolves a code action by filling out its Edit property. The handler is triggered only when a user hovers over a
            code action. This system allows the basic code action data to be computed quickly, and the complex data, to be
            computed only when necessary (i.e. when hovering/previewing a code action).
            <para>
            This system only supports text edits to documents.  In the future, supporting complex edits (including changes to
            project files) would be desirable.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeActionsHandler">
            <summary>
            Handles the initial request for code actions. Leaves the Edit and Command properties of the returned
            VSCodeActions blank, as these properties should be populated by the CodeActionsResolveHandler only when the user
            requests them.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensResolveData">
            <summary>
            Datatype storing the information needed to resolve a particular code lens item.
            </summary>
            <param name="SyntaxVersion">the syntax version of the text document.</param>
            <param name="ListIndex">the index of the specific code lens item in the original list.</param>
            <param name="TextDocument">the text document associated with the code lens to resolve.</param>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensResolveData.#ctor(System.String,System.Int32,Roslyn.LanguageServer.Protocol.TextDocumentIdentifier)">
            <summary>
            Datatype storing the information needed to resolve a particular code lens item.
            </summary>
            <param name="SyntaxVersion">the syntax version of the text document.</param>
            <param name="ListIndex">the index of the specific code lens item in the original list.</param>
            <param name="TextDocument">the text document associated with the code lens to resolve.</param>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensResolveData.SyntaxVersion">
            <summary>the syntax version of the text document.</summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensResolveData.ListIndex">
            <summary>the index of the specific code lens item in the original list.</summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensResolveData.TextDocument">
            <summary>the text document associated with the code lens to resolve.</summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.CodeLens.CodeLensResolveHandler.ClientReferencesCommand">
            <summary>
            Command name implemented by the client and invoked when the references code lens is selected.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.CompletionListCache">
            <summary>
            Caches completion lists in between calls to CompletionHandler and
            CompletionResolveHandler. Used to avoid unnecessary recomputation.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.CompletionResolveData">
            <summary>
            Provides the intermediate data passed from CompletionHandler to CompletionResolveHandler.
            Passed along via <see cref="P:Roslyn.LanguageServer.Protocol.CompletionItem.Data"/>.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.CompletionResolveData.ResultId">
            <summary>
            ID associated with the item's completion list.
            </summary>
            <remarks>
            Used to retrieve the correct completion list from <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.CompletionListCache"/>.
            </remarks>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Completion.DefaultLspCompletionResultCreationService.CompleteComplexEditCommand">
            <summary>
            Command name implemented by the client and invoked when an item with complex edit is committed.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.CompletionHandler">
            <summary>
            Handle a completion request.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.CompletionResolveHandler">
            <summary>
            Handle a completion resolve request to add description.
            </summary>
            <remarks>
            This isn't a <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.ILspServiceDocumentRequestHandler`2" /> because it could return null.
            </remarks>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Configuration.DidChangeConfigurationNotificationHandler._configurationItems">
            <summary>
            All the <see cref="P:Roslyn.LanguageServer.Protocol.ConfigurationItem.Section"/> needs to be refreshed from the client. 
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Configuration.DidChangeConfigurationNotificationHandler._optionsAndLanguageNamesToRefresh">
            <summary>
            The matching option and its language name needs to be refreshed. The order matches <see cref="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Configuration.DidChangeConfigurationNotificationHandler._configurationItems"/> sent to the client.
            LanguageName would be null if the option is <see cref="T:Microsoft.CodeAnalysis.Options.ISingleValuedOption"/>.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Configuration.DidChangeConfigurationNotificationHandler.GenerateGlobalConfigurationItems">
            <summary>
            Generate the configuration items send to the client.
            For each option, generate its full name. If the option is <see cref="T:Microsoft.CodeAnalysis.Options.ISingleValuedOption"/> it's is what we sent to the client.
            If it is <see cref="T:Microsoft.CodeAnalysis.Options.IPerLanguageValuedOption"/>, then generate two configurationItems with prefix visual_basic and csharp.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Configuration.DidChangeConfigurationNotificationHandler.GenerateFullNameForOption(Microsoft.CodeAnalysis.Options.IOption2)">
            <summary>
            Generate the full name of <param name="option"/>.
            It would be in the format like {optionGroupName}.{OptionName}
            </summary>
            <remarks>
            Example:Full name of <see cref="F:Microsoft.CodeAnalysis.ImplementType.ImplementTypeOptionsStorage.InsertionBehavior"/> would be:
            implement_type.dotnet_insertion_behavior
            </remarks>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3">
            <summary>
            Root type for both document and workspace diagnostic pull requests.
            </summary>
            <typeparam name="TDiagnosticsParams">The LSP input param type</typeparam>
            <typeparam name="TReport">The LSP type that is reported via IProgress</typeparam>
            <typeparam name="TReturn">The LSP type that is returned on completion of the request.</typeparam>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3.WorkspaceDiagnosticIdentifier">
            <summary>
            Special value we use to designate workspace diagnostics vs document diagnostics.  Document diagnostics
            should always <see cref="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticReport.Supersedes"/> a workspace diagnostic as the former are 'live'
            while the latter are cached and may be stale.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3._categoryToVersionedCache">
            <summary>
            Cache where we store the data produced by prior requests so that they can be returned if nothing of significance 
            changed. The <see cref="T:Microsoft.CodeAnalysis.VersionStamp"/> is produced by <see cref="M:Microsoft.CodeAnalysis.Project.GetDependentVersionAsync(System.Threading.CancellationToken)"/> while the 
            <see cref="T:Microsoft.CodeAnalysis.Checksum"/> is produced by <see cref="M:Microsoft.CodeAnalysis.Project.GetDependentChecksumAsync(System.Threading.CancellationToken)"/>.  The former is faster
            and works well for us in the normal case.  The latter still allows us to reuse diagnostics when changes happen that
            update the version stamp but not the content (for example, forking LSP text).
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3.GetPreviousResults(`0)">
            <summary>
            Retrieve the previous results we reported.  Used so we can avoid resending data for unchanged files. Also
            used so we can report which documents were removed and can have all their diagnostics cleared.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3.GetOrderedDiagnosticSourcesAsync(`0,Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext,System.Threading.CancellationToken)">
            <summary>
            Returns all the documents that should be processed in the desired order to process them in.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3.CreateReport(Roslyn.LanguageServer.Protocol.TextDocumentIdentifier,Roslyn.LanguageServer.Protocol.Diagnostic[],System.String)">
            <summary>
            Creates the appropriate LSP type to report a new set of diagnostics and resultId.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3.CreateUnchangedReport(Roslyn.LanguageServer.Protocol.TextDocumentIdentifier,System.String)">
            <summary>
            Creates the appropriate LSP type to report unchanged diagnostics.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3.CreateRemovedReport(Roslyn.LanguageServer.Protocol.TextDocumentIdentifier)">
            <summary>
            Creates the appropriate LSP type to report a removed file.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3.ConvertTags(Microsoft.CodeAnalysis.Diagnostics.DiagnosticData,System.Boolean)">
            <summary>
            Generate the right diagnostic tags for a particular diagnostic.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3.WaitForChangesAsync(Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext,System.Threading.CancellationToken)">
            <summary>
            Used by public workspace pull diagnostics to allow it to keep the connection open until
            changes occur to avoid the client spamming the server with requests.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3.ConvertTags(Microsoft.CodeAnalysis.Diagnostics.DiagnosticData,System.Boolean,System.Boolean)">
            <summary>
            If you make change in this method, please also update the corresponding file in
            src\VisualStudio\Xaml\Impl\Implementation\LanguageServer\Handler\Diagnostics\AbstractPullDiagnosticHandler.cs
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractWorkspacePullDiagnosticsHandler`3._lspChanged">
            <summary>
            Flag that represents whether the LSP view of the world has changed.
            It is totally fine for this to somewhat over-report changes
            as it is an optimization used to delay closing workspace diagnostic requests
            until something has changed.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractProjectDiagnosticSource.FullSolutionAnalysisDiagnosticSource.IsLiveSource">
            <summary>
            This is a normal project source that represents live/fresh diagnostics that should supersede everything else.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractProjectDiagnosticSource.CodeAnalysisDiagnosticSource.IsLiveSource">
            <summary>
            This source provides the results of the *last* explicitly kicked off "run code analysis" command from the
            user.  As such, it is definitely not "live" data, and it should be overridden by any subsequent fresh data
            that has been produced.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractWorkspaceDocumentDiagnosticSource.FullSolutionAnalysisDiagnosticSource.IsLiveSource">
            <summary>
            This is a normal document source that represents live/fresh diagnostics that should supersede everything else.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractWorkspaceDocumentDiagnosticSource.CodeAnalysisDiagnosticSource.IsLiveSource">
            <summary>
            This source provides the results of the *last* explicitly kicked off "run code analysis" command from the
            user.  As such, it is definitely not "live" data, and it should be overridden by any subsequent fresh data
            that has been produced.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.DocumentDiagnosticSource.IsLiveSource">
            <summary>
            This is a normal document source that represents live/fresh diagnostics that should supersede everything else.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.IDiagnosticSource">
            <summary>
            Wrapper around a source for diagnostics (e.g. a <see cref="T:Microsoft.CodeAnalysis.Project"/> or <see cref="T:Microsoft.CodeAnalysis.Document"/>)
            so that we can share per file diagnostic reporting code in <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.AbstractPullDiagnosticHandler`3"/>
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.IDiagnosticSource.IsLiveSource">
            <summary>
            True if this source produces diagnostics that are considered 'live' or not.  Live errors represent up to date
            information that should supersede other sources.  Non 'live' errors (aka "build errors") are recognized to
            potentially represent stale results from a point in the past when the computation occurred.  The only time
            Roslyn produces non-live errors through an explicit user gesture to "run code analysis". Because these represent
            errors from the past, we do want them to be superseded by a more recent live run, or a more recent build from
            another source.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.DiagnosticsRefreshQueue.Refresher._globalStateVersion">
            <summary>
            Incremented every time a refresh is requested.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.ProjectOrDocumentId">
            <summary>
            Wrapper around project and document ids for convenience in caching diagnostic results and
            use in the <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.IDiagnosticSource"/>
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.ProjectOrDocumentId._documentId">
            <summary>
            Non-null if this represents a documentId.  Used for equality comparisons.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.ProjectOrDocumentId._projectId">
            <summary>
            Non-null if this represents a projectId.  Used for equality comparisons.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.Public.PublicDocumentPullDiagnosticsHandler.GetDiagnosticCategory(Roslyn.LanguageServer.Protocol.DocumentDiagnosticParams)">
            <summary>
            Public API doesn't support categories (yet).
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.Public.PublicWorkspacePullDiagnosticsHandler.GetDiagnosticCategory(Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticParams)">
            <summary>
            Public API doesn't support categories (yet).
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.PullDiagnosticCategories.Task">
            <summary>
            Task list items.  Can be for Document or Workspace pull requests.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.PullDiagnosticCategories.WorkspaceDocumentsAndProject">
            <summary>
            Diagnostics for workspace documents and project.  We don't support fine-grained diagnostics requests for these (yet).
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.FoldingRangesHandler.GetFoldingRangesAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Structure.BlockStructureOptions,System.Threading.CancellationToken)">
            <summary>
            Used here and by lsif generator.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.HoverHandler">
            <summary>
            TODO - This must be moved to the MS.CA.LanguageServer.Protocol project once it
            no longer references VS icon or classified text run types.
            See https://github.com/dotnet/roslyn/issues/55142
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.IDocumentChangeTracker">
            <summary>
            Associates LSP document URIs with the roslyn source text containing the LSP document text.
            Called via <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidOpenHandler"/>, <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidChangeHandler"/> and <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidCloseHandler"/>
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.ILspServiceRequestHandler`2">
            <summary>
            Handler for a workspace request with parameters <typeparamref name="TRequest"/> and result <typeparamref name="TResponse"/>.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.ILspServiceRequestHandler`1">
            <summary>
            Handler for a workspace parameter-less request with result <typeparamref name="TResponse"/>.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.ILspServiceDocumentRequestHandler`2">
            <summary>
            Handler for document request with parameters <typeparamref name="TRequest"/> and result <typeparamref name="TResponse"/>.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintCache.InlayHintCacheEntry">
            <summary>
            Cached data need to resolve a specific inlay hint item.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintCache.InlayHintCacheEntry.#ctor(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.InlineHints.InlineHint},Microsoft.CodeAnalysis.VersionStamp)">
            <summary>
            Cached data need to resolve a specific inlay hint item.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintHandler.Trim(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.TaggedText})">
            <summary>
            Goes through the tagged text of the hint and trims off leading and trailing spaces. 
            If there is leading or trailing space, then we want to add padding to the left and right accordingly.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintResolveData">
            <summary>
            Datatype storing the information needed to resolve a particular inlay hint item.
            </summary>
            <param name="ResultId">the resultId associated with the inlay hint created on original request.</param>
            <param name="ListIndex">the index of the specific inlay hint item in the original list.</param>
            /// <param name="TextDocument">the text document associated with the inlay hint to resolve.</param>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintResolveData.#ctor(System.Int64,System.Int32,Roslyn.LanguageServer.Protocol.TextDocumentIdentifier)">
            <summary>
            Datatype storing the information needed to resolve a particular inlay hint item.
            </summary>
            <param name="ResultId">the resultId associated with the inlay hint created on original request.</param>
            <param name="ListIndex">the index of the specific inlay hint item in the original list.</param>
            /// <param name="TextDocument">the text document associated with the inlay hint to resolve.</param>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintResolveData.ResultId">
            <summary>the resultId associated with the inlay hint created on original request.</summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintResolveData.ListIndex">
            <summary>the index of the specific inlay hint item in the original list.</summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.InlayHint.InlayHintResolveData.TextDocument">
            /// <summary>the text document associated with the inlay hint to resolve.</summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.InlineCompletionsHandler">
            <summary>
            Supports built in legacy snippets for razor scenarios.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.InlineCompletionsHandler.BuiltInSnippets">
            <summary>
            The set of built in snippets from, typically found in
            C:\Program Files\Microsoft Visual Studio\2022\VS_INSTANCE\VC#\Snippets\1033\Visual C#
            These are currently the only snippets supported.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.InlineCompletionsHandler.GetFormattedLspSnippetAsync(Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser.ParsedXmlSnippet,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Formatting.SyntaxFormattingOptions,Microsoft.CodeAnalysis.Simplification.SimplifierOptions,System.Threading.CancellationToken)">
            <summary>
            Formats the snippet by applying the snippet to the document with the default values / function results for snippet declarations.
            Then converts back into an LSP snippet by replacing the declarations with the appropriate LSP tab stops.
            
            Note that the operations in this method are sensitive to the context in the document and so must be calculated on each request.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.InlineCompletionsHandler.GetReplacedSnippetTextAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser.ParsedXmlSnippet,Microsoft.CodeAnalysis.Simplification.SimplifierOptions,System.Threading.CancellationToken)">
            <summary>
            Create the snippet with the full default text and functions applied.  Output the spans associated with
            each field and the final caret location in that text so that we can find those locations later.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser">
            <summary>
            Server instance agnostic snippet parser and cache.
            This can be re-used across LSP servers as we're just storing an
            internal representation of an XML snippet.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser.CodeSnippet">
            <summary>
            Shamelessly copied from the editor
            https://devdiv.visualstudio.com/DevDiv/_git/VS-Platform?path=/src/Editor/VisualStudio/Impl/Snippet/CodeSnippet.cs
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser.CodeSnippet.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Ctor.
            </summary>
            <param name="codeSnippetElement">XElement representing the CodeSnippet node.</param>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser.CodeSnippet.ReadSnippets(System.Xml.Linq.XDocument)">
            <summary>
            Visible for testing.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser.ExpansionTemplate">
            <summary>
            Shamelessly adapted from https://devdiv.visualstudio.com/DevDiv/_git/VS-Platform?path=/src/Editor/VisualStudio/Impl/Snippet/ExpansionTemplate.cs
            with changes to parsing to store the snippet as a set of parts instead of a single string.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser._parsedSnippetsCache">
            <summary>
            Cache to hold onto the parsed XML for a particular snippet.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser.SnippetCursorPart">
            <summary>
            To indicate cursor location we put in a multi-line comment so that we can
            find it after formatting.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.InlineCompletions.XmlSnippetParser.SnippetCursorPart.#ctor">
            <summary>
            To indicate cursor location we put in a multi-line comment so that we can
            find it after formatting.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.LspErrorCodes">
            <summary>
            See https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#errorCodes
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.LspErrorCodes.ContentModified">
            <summary>
            Signals that the server detected the contents of the document were modified
            outside of normal conditions.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`1">
            <summary>
            Simplified version of <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`2"/> that only uses a 
            single cheap key to check results against.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`2">
            <summary>
            Specialized cache used by the 'pull' LSP handlers.  Supports storing data to know when to tell a client
            that existing results can be reused, or if new results need to be computed.  Multiple keys can be used,
            with different computation costs to determine if the previous cached data is still valid.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`2._semaphore">
            <summary>
            Lock to protect <see cref="F:Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`2._idToLastReportedResult"/> and <see cref="F:Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`2._nextDocumentResultId"/>.
            This enables this type to be used by request handlers that process requests concurrently.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`2._idToLastReportedResult">
            <summary>
            Mapping of a diagnostic source to the data used to make the last pull report which contains:
            <list type="bullet">
              <item>The resultId reported to the client.</item>
              <item>The TCheapVersion of the data that was used to calculate results.
                  <para>
                  Note that this version can change even when nothing has actually changed (for example, forking the 
                  LSP text, reloading the same project). So we additionally store:</para></item>
              <item>A TExpensiveVersion (normally a checksum) checksum that will still allow us to reuse data even when
              unimportant changes happen that trigger the cheap version change detection.</item>
            </list>
            This is used to determine if we need to re-calculate results.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`2._nextDocumentResultId">
            <summary>
            The next available id to label results with.  Note that results are tagged on a per-document bases.  That
            way we can update results with the client with per-doc granularity.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.VersionedPullCache`2.GetNewResultIdAsync(System.Collections.Generic.Dictionary{Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.ProjectOrDocumentId,Microsoft.CodeAnalysis.LanguageServer.Handler.PreviousPullResult},Microsoft.CodeAnalysis.LanguageServer.Handler.Diagnostics.ProjectOrDocumentId,Microsoft.CodeAnalysis.Project,System.Func{System.Threading.Tasks.Task{`0}},System.Func{System.Threading.Tasks.Task{`1}},System.Threading.CancellationToken)">
            <summary>
            If results have changed since the last request this calculates and returns a new
            non-null resultId to use for subsequent computation and caches it.
            </summary>
            <param name="idToClientLastResult">a map of roslyn document or project id to the previous result the client sent us for that doc.</param>
            <param name="projectOrDocumentId">the id of the project or document that we are checking to see if it has changed.</param>
            <returns>Null when results are unchanged, otherwise returns a non-null new resultId.</returns>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.FindUsagesLSPContext._semaphore">
            <summary>
            Methods in FindUsagesLSPContext can be called by multiple threads concurrently. We need this semaphore to
            ensure that we aren't making concurrent modifications to data such as _id and _definitionToId.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.FindUsagesLSPContext._definitionsWithoutReference">
            <summary>
            Keeps track of definitions that cannot be reported without references and which we have
            not yet found a reference for.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.FindUsagesLSPContext._referenceLocations">
            <summary>
            Set of the locations we've found references at.  We may end up with multiple references
            being reported for the same location.  For example, this can happen in multi-targeting 
            scenarios when there are symbols in files linked into multiple projects.  Those symbols
            may have references that themselves are in linked locations, leading to multiple references
            found at different virtual locations that the user considers at the same physical location.
            For now we filter out these duplicates to not clutter the UI.  If LSP supports the ability
            to override an already reported VSReferenceItem, we could also reissue the item with the
            additional information about all the projects it is found in.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.FindUsagesLSPContext._workQueue">
            <summary>
            We report the results in chunks. A batch, if it contains results, is reported every 0.5s.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext">
            <summary>
            Context for requests handled by <see cref="T:Microsoft.CommonLanguageServerProtocol.Framework.IMethodHandler"/>
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext._documentChangeTracker">
            <summary>
            This will be the <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.NonMutatingDocumentChangeTracker"/> for non-mutating requests because they're not allowed to change documents
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext._clientCapabilities">
            <summary>
            The client capabilities for the request.
            </summary>
            <remarks>
            Should only be null on the "initialize" request.
            </remarks>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext._trackedDocuments">
            <summary>
            Contains the LSP text for all opened LSP documents from when this request was processed in the queue.
            </summary>
            <remarks>
            This is a snapshot of the source text that reflects the LSP text based on the order of this request in the queue.
            It contains text that is consistent with all prior LSP text sync notifications, but LSP text sync requests
            which are ordered after this one in the queue are not reflected here.
            </remarks>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext._lspSolution">
            <summary>
            Provides backing storage for the LSP workspace used by this RequestContext instance, allowing it to be cleared
            on demand from all copies that may exist of this value type.
            </summary>
            <remarks>
            This field is only initialized for handlers that request solution context.
            </remarks>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.Workspace">
            <summary>
            The workspace this request is for, if applicable.  This will be present if <see cref="P:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.Document"/> is
            present.  It will be <see langword="null"/> if <c>requiresLSPSolution</c> is false.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.Solution">
            <summary>
            The solution state that the request should operate on, if the handler requires an LSP solution, or <see langword="null"/> otherwise
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.Document">
            <summary>
            The document that the request is for, if applicable. This comes from the <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier"/> returned from the handler itself via a call to 
            <see cref="M:Microsoft.CommonLanguageServerProtocol.Framework.ITextDocumentIdentifierHandler`2.GetTextDocumentIdentifier(`0)"/>.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.TextDocument">
            <summary>
            The text document that the request is for, if applicable. This comes from the <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier"/> returned from the handler itself via a call to 
            <see cref="M:Microsoft.CommonLanguageServerProtocol.Framework.ITextDocumentIdentifierHandler`2.GetTextDocumentIdentifier(`0)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.ServerKind">
            <summary>
            The LSP server handling the request.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.Method">
            <summary>
            The method this request is targeting.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.SupportedLanguages">
            <summary>
            The languages supported by the server making the request.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext._logger">
            <summary>
            Tracing object that can be used to log information about the status of requests.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.StartTrackingAsync(System.Uri,Microsoft.CodeAnalysis.Text.SourceText,System.String,System.Threading.CancellationToken)">
            <summary>
            Allows a mutating request to open a document and start it being tracked.
            Mutating requests are serialized by the execution queue in order to prevent concurrent access.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.UpdateTrackedDocument(System.Uri,Microsoft.CodeAnalysis.Text.SourceText)">
            <summary>
            Allows a mutating request to update the contents of a tracked document.
            Mutating requests are serialized by the execution queue in order to prevent concurrent access.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.StopTrackingAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Allows a mutating request to close a document and stop it being tracked.
            Mutating requests are serialized by the execution queue in order to prevent concurrent access.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext.TraceInformation(System.String)">
            <summary>
            Logs an informational message.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestTelemetryLogger">
            <summary>
            Logs metadata on LSP requests (duration, success / failure metrics)
            for this particular LSP server instance.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestTelemetryLogger._requestCounters">
            <summary>
            Store request counters in a concurrent dictionary as non-mutating LSP requests can
            run alongside other non-mutating requests.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestTelemetryLogger.Dispose">
            <summary>
            Only output aggregate telemetry to the vs logger when the server instance is disposed
            to avoid spamming the telemetry output with thousands of events
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveCache`1">
             <summary>
             A common LSP pattern is an initial request to the server that returns some set of partially filled out items.
             Then the client issues a xyz/resolve request to fully resolve a specific item when actually needed.
             
             On the server side we often need to cache non-serializable data that can't be included in the typical
             'data' field on the actual item.  This type is a general cache that helps keep track of data between requests.
            
             This cache is generally only written to as part of the initial request to store data for later resolution.
             It is only read from as part of a resolve request for some data sent in the initial request to restore state.
             </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveCache`1._maxCacheSize">
            <summary>
            Maximum number of cache entries allowed in cache. Must be >= 1.
            Typically a resolve request will only ask about the most recent cache entry so
            it is not important to cache a lot of entries.  If there are document changes
            the client is responsible for not asking to resolve invalid items.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveCache`1._accessLock">
            <summary>
            Multiple cache requests or updates may be received concurrently.
            We need this lock to ensure that we aren't making concurrent
            modifications to <see cref="F:Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveCache`1._nextResultId"/> or <see cref="F:Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveCache`1._resultIdToCachedItem"/>
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveCache`1._nextResultId">
            <summary>
            The next resultId available to use.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveCache`1._resultIdToCachedItem">
            <summary>
            Keeps track of the resultIds in the cache and their associated cache entry.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveCache`1.UpdateCache(`0)">
            <summary>
            Adds a completion list to the cache. If the cache reaches its maximum size, the oldest completion
            list in the cache is removed.
            </summary>
            <returns>
            The generated resultId associated with the passed in completion list.
            </returns>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveCache`1.GetCachedEntry(System.Int64)">
            <summary>
            Attempts to return the completion list in the cache associated with the given resultId.
            Returns null if no match is found.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.CustomLspSemanticTokenNames">
            <summary>
            Maps <see cref="T:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames"/> to LSP compatible semantic token names.
            Since these token names are effectively a public contract that users can directly interact with,
            we need these names to be nicely formatted and compatible with LSP client rules.
            All classification names must be explicitly mapped to an LSP semantic token type or
            a custom token type name defined here.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensHelpers.ComputeSemanticTokensDataAsync(Roslyn.LanguageServer.Protocol.ClientCapabilities,Microsoft.CodeAnalysis.Document,Roslyn.LanguageServer.Protocol.Range[],Microsoft.CodeAnalysis.Classification.ClassificationOptions,System.Threading.CancellationToken)">
            <summary>
            Returns the semantic tokens data for a given document with an optional ranges.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRefreshQueue">
            <summary>
            Batches requests to refresh the semantic tokens to optomize user experience.
            </summary>
            <remarks>This implements <see cref="T:Microsoft.CodeAnalysis.LanguageServer.IOnInitialized"/> to avoid race conditions
            related to creating the queue on the first request.</remarks>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRefreshQueue._gate">
            <summary>
            Lock over the mutable state that follows.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRefreshQueue._projectIdToEventSource">
            <summary>
            Mapping from project id to the workqueue for producing the corresponding compilation for it on the OOP server.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRefreshQueue._projectIdToLastComputedChecksum">
            <summary>
            Mapping from project id to the project-cone-checksum for it we were at when the project for it had its
            compilation produced on the oop server.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensRefreshQueue._semanticTokenRefreshQueue">
            <summary>
            Debouncing queue so that we don't attempt to issue a semantic tokens refresh notification too often.
            
            Null when the client does not support sending refresh notifications.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensSchema.s_vsDirectTypeMap">
            <summary>
            Core VS classifications, only map a few things to LSP.  The rest we keep as our own standard classification
            type names so those continue to work in VS.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensSchema.s_pureLspDirectTypeMap">
            <summary>
            The 'pure' set of classification types maps exact Roslyn matches to the well defined values actually in LSP.
            For example "class name" to "class".  Importantly though, if there is no exact match, we do not map things
            along.  This allows the user to theme things however they want.  
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensSchema.s_vsTokenSchema">
            <summary>
            A schema for mapping classification type names to VS LSP token names.  This maps a few classification type names
            directly to LSP semantic token types, but otherwise generally returns the classification type name as a custom token type.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensSchema.s_pureLspTokenSchema">
            <summary>
            A schema for mapping classification type names to 'pure' LSP token names.  This includes classification type names
            that are directly mapped to LSP semantic token types as well as mappings from roslyn classification type names to
            LSP compatible custom token type names.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensSchema.TokenTypeMap">
            <summary>
            Mapping from roslyn <see cref="T:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames"/> to the LSP token name.  This is either a standard
            <see cref="T:Roslyn.LanguageServer.Protocol.SemanticTokenTypes"/> or a custom token name.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensSchema.TokenTypeToIndex">
            <summary>
            Mapping from the semantic token type name to the index in <see cref="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensSchema.AllTokenTypes"/>.  Required since we report
            tokens back to LSP as a series of ints, and LSP needs a way to decipher them.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensSchema.AllTokenTypes">
            <summary>
            Equivalent to see <see cref="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.AllTypes"/> combined with the remaining custom token names from <see cref="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.SemanticTokensSchema.TokenTypeMap"/> 
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.SemanticTokens.TokenModifiers">
            <summary>
            The LSP modifiers from <see cref="T:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers"/>
            Roslyn currently supports. Enum is used to signify the modifier(s) that apply to a given token.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.SignatureHelpHandler.GetSignatureText(Microsoft.CodeAnalysis.SignatureHelp.SignatureHelpItem)">
            <summary>
            The <see cref="T:Microsoft.CodeAnalysis.SignatureHelp.SignatureHelpItem"/> contains a prefix, parameters separated by a
            separator and a suffix. Parameters themselves have a prefix, display and suffix.
            Concatenate them all to get the text.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.AbstractSpellCheckHandler`2">
            <summary>
            Root type for both document and workspace spell checking requests.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.AbstractSpellCheckHandler`2._versionedCache">
            <summary>
            Cache where we store the data produced by prior requests so that they can be returned if nothing of
            significance changed. The version key is produced by combining the checksums for project options <see
            cref="M:Microsoft.CodeAnalysis.ProjectState.GetParseOptionsChecksum"/> and <see cref="P:Microsoft.CodeAnalysis.Serialization.DocumentStateChecksums.Text"/>
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.AbstractSpellCheckHandler`2.GetPreviousResults(`0)">
            <summary>
            Retrieve the previous results we reported.  Used so we can avoid resending data for unchanged files. Also
            used so we can report which documents were removed and can have all their spell checking results cleared.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.AbstractSpellCheckHandler`2.GetOrderedDocuments(Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext,System.Threading.CancellationToken)">
            <summary>
            Returns all the documents that should be processed in the desired order to process them in.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.SpellCheck.AbstractSpellCheckHandler`2.CreateReport(Roslyn.LanguageServer.Protocol.TextDocumentIdentifier,System.Int32[],System.String)">
            <summary>
            Creates the <see cref="T:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeReport"/> instance we'll report back to clients to let them know our
            progress.  Subclasses can fill in data specific to their needs as appropriate.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentSymbolsHandler">
            <summary>
            TODO - This must be moved to the MS.CA.LanguageServer.Protocol project once
            we no longer reference VS icon types.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentSymbolsHandler.GetSymbolInformation(Microsoft.CodeAnalysis.NavigationBar.RoslynNavigationBarItem,Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.SourceText,System.String)">
            <summary>
            Get a symbol information from a specified nav bar item.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentSymbolsHandler.GetDocumentSymbol(Microsoft.CodeAnalysis.NavigationBar.RoslynNavigationBarItem,Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)">
            <summary>
            Get a document symbol from a specified nav bar item.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentSymbolsHandler.GetDocumentSymbolName(System.String)">
            <summary>
            DocumentSymbol name cannot be null or empty. Check if the name is invalid,
            and if so return a substitute string.
            </summary>
            <param name="proposedName">Name proposed for DocumentSymbol</param>
            <returns>Valid name for DocumentSymbol</returns>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.RoslynDocumentSymbol">
            <summary>
            Derived version of <see cref="T:Roslyn.LanguageServer.Protocol.DocumentSymbol" /> used so we can pass additional information we do not want lost for our
            internal consumers.  For example, the richer <see cref="P:Microsoft.CodeAnalysis.LanguageServer.Handler.RoslynDocumentSymbol.Glyph"/> which is a superset of <see
            cref="P:Roslyn.LanguageServer.Protocol.DocumentSymbol.Kind"/>.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.RoslynDocumentSymbolParams">
            <summary>
            A parameter object that indicates whether the LSP client should use hierarchical symbols. Inherits from
            DocumentSymbolParams.
            </summary>
            <remarks>
            The LSP client does not support hierarchical document symbols and we can't contribute to client capabilities as
            the extension. This type is required in order to obtain a response of type DocumentSymbol[] for a document
            symbol request.
            </remarks>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.WorkspaceSymbolsHandler">
            <summary>
            TODO - This must be moved to the MS.CA.LanguageServer.Protocol project once
            we no longer reference VS icon types.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.Handler.ExportCSharpVisualBasicLspServiceFactoryAttribute">
            <summary>
            Defines an easy to use subclass for <see cref="T:Microsoft.CodeAnalysis.LanguageServer.ExportLspServiceFactoryAttribute"/> with the roslyn languages contract name.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.IClientLanguageServerManager">
            <summary>
            Manages sending requests or notifications to the client or server.
            Note - be extremely intentional about using a request or notification.  Use exactly what the LSP spec defines the method as.
            For example methods defined as requests even with no parameters or return value must be sent as requests regardless.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.LanguageServerProtocolResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.LanguageServerProtocolResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.LanguageServerProtocolResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.LanguageServerProtocolResources.DocumentUriSerializationError">
            <summary>
              Looks up a localized string similar to Unable to deserialize Uri. Unexpected value encountered: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.LanguageServerProtocolResources.MarkupContentSerializationError">
            <summary>
              Looks up a localized string similar to Unable to deserialize MarkupContent. Unexpected value encountered: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.LanguageServerProtocolResources.NestedSumType">
            <summary>
              Looks up a localized string similar to A SumType cannot have another SumType as type parameter..
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.LanguageServerProtocolResources.NoSumTypeMatch">
            <summary>
              Looks up a localized string similar to None of the SumType type parameters could be deserialized.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.LanguageServerProtocolResources.StringEnumMissingConstructor">
            <summary>
              Looks up a localized string similar to Type {0} is missing a contructor that takes a single string as parameter..
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.LanguageServerProtocolResources.StringEnumSerializationError">
            <summary>
              Looks up a localized string similar to Unable to deserialize string-based enum. Unexpected data encountered: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.LanguageServerProtocolResources.TextDocumentSyncSerializationError">
            <summary>
              Looks up a localized string similar to Unable to deserialize TextDocumentSyncOptions.  Unexpected value encountered: {0}.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.LspOptionsStorage.MaxCompletionListSize">
            <summary>
            This sets the max list size we will return in response to a completion request.
            If there are more than this many items, we will set the isIncomplete flag on the returned completion list.
            If set to negative value, we will always return the full list.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.LspOptionsStorage.LspUsingDevkitFeatures">
            <summary>
            This flag is turned on when the C# devkit is installed.
            This can cause certain LSP features to behave differently, for example we avoid returning test code lenses when devkit is running.
            </summary>
            <remarks>
            This flag is not user visible.
            </remarks>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.LspOptionsStorage.LspEnableReferencesCodeLens">
            <summary>
            Flag indicating whether or not references should be returned in LSP codelens.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.LspOptionsStorage.LspEnableTestsCodeLens">
            <summary>
            Flag indicating whether or not test and debug code lens items should be returned.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.ExportLspServiceFactoryAttribute">
            <summary>
            Exports an <see cref="T:Microsoft.CodeAnalysis.LanguageServer.ILspServiceFactory"/> that is used by LSP server instances
            to create new instances of the <see cref="T:Microsoft.CodeAnalysis.LanguageServer.ILspService"/> each time an LSP server is started.
            
            The services created by the <see cref="T:Microsoft.CodeAnalysis.LanguageServer.ILspServiceFactory"/> are disposed of by <see cref="T:Microsoft.CodeAnalysis.LanguageServer.LspServices"/>
            when the LSP server instance shuts down.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.ExportLspServiceFactoryAttribute.Type">
            <summary>
            The type of the service being exported.  Used during retrieval to find the matching service.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.ExportLspServiceFactoryAttribute.ServerKind">
            <summary>
            The LSP server for which this service applies to.  If null, this service applies to any server
            with the matching contract name.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.ExportLspServiceFactoryAttribute.IsStateless">
            <summary>
            Services MEF exported as <see cref="T:Microsoft.CodeAnalysis.LanguageServer.ILspServiceFactory"/> are statefull as <see cref="T:Microsoft.CodeAnalysis.LanguageServer.LspServices"/>
            creates a new instance for each server instance.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.ExportStatelessLspServiceAttribute">
            <summary>
            Defines an attribute to export an instance of <see cref="T:Microsoft.CodeAnalysis.LanguageServer.ILspService"/> that is re-used across
            all server instances in the same mef container.  Services using this export attribute should not
            store any kind of server specific state in them.
            
            MEF will dispose of these services when the container is disposed of.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.ExportStatelessLspServiceAttribute.Type">
            <summary>
            The type of the service being exported.  Used during retrieval to find the matching service.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.ExportStatelessLspServiceAttribute.ServerKind">
            <summary>
            The LSP server for which this service applies to.  If null, this service applies to any server
            with the matching contract name.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.LanguageServer.ExportStatelessLspServiceAttribute.IsStateless">
            <summary>
            Services MEF exported as <see cref="T:Microsoft.CodeAnalysis.LanguageServer.ILspService"/> must by definition be stateless as they are
            shared amongst all LSP server instances through restarts.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.ILspServiceFactory.CreateILspService(Microsoft.CodeAnalysis.LanguageServer.LspServices,Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds)">
            <summary>
            Some LSP services need to know the client capabilities on construction or
            need to know about other <see cref="T:Microsoft.CodeAnalysis.LanguageServer.ILspService"/> instances to be constructed.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.LspServices._baseServices">
            <summary>
            A set of base services that apply to all roslyn lsp services.
            Unfortunately MEF doesn't provide a good way to export something for multiple contracts with metadata
            so these are manually created in <see cref="T:Microsoft.CodeAnalysis.LanguageServer.RoslynLanguageServer"/>.
            TODO - cleanup once https://github.com/dotnet/roslyn/issues/63555 is resolved.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.LspServices._gate">
            <summary>
            Gates access to <see cref="F:Microsoft.CodeAnalysis.LanguageServer.LspServices._servicesToDispose"/>.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.RoslynRequestExecutionQueue._cultureInfo">
            <summary>
            Serial access is guaranteed by the queue.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.RoslynRequestExecutionQueue.GetCultureForRequest">
            <summary>
            Serial access is guaranteed by the queue.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds.RazorCohostServer">
            <summary>
            Razor LSP server for Razor document requests (.razor and .cshtml files)
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds.RazorLspServer">
            <summary>
            Roslyn LSP server for razor c# requests.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds.LiveShareLspServer">
            <summary>
            Roslyn LSP server for liveshare guests.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds.AlwaysActiveVSLspServer">
            <summary>
            Roslyn LSP server always activated in VS.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds.CSharpVisualBasicLspServer">
            <summary>
            Roslyn LSP server for non-VS use cases.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds.XamlLspServer">
            <summary>
            XAML LSP servers.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds.RoslynTypeScriptLspServer">
            <summary>
            LSP server for TypeScript
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds.Any">
            <summary>
            Flag representing any LSP server - used by <see cref="T:Microsoft.CodeAnalysis.LanguageServer.ExportLspServiceFactoryAttribute"/>
            to specify that something applies to any LSP server.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.ILspWorkspace">
            <summary>
            Interface to indicate that a workspace wants to customize what happens in the lsp server when lsp contents for a
            file are updated by an lsp client. In VS, for example, we have a non-mutating workspace.  The VS workspace itself is
            updated automatically with the real contents of buffers, and by tracking the running-doc-table.  Changes that come
            in through LSP do not impact this actual workspace.  Instead, the <see cref="T:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager"/> creates an
            overlay, where it uses the <see cref="T:Microsoft.CodeAnalysis.Solution"/> snapshot from the VS workspace, but then forks it in any cases
            where it's view of the world may differ from LSP (which can happen as LSP is async, and so may represent a state of
            the world that is slightly different from what the VS workspace thinks it is.
            <para/>
            For hosts though where there is no external source of truth (for example, a server that might host roslyn directly,
            where all info comes from LSP), this enables LSP to 'push through' file changes directly to the to the workspace's
            model. That way, the workspace's solution is always in sync with what LSP thinks it is (at least for open
            documents).
            <para/>
            It is fine for external changes to happen to the contents of documents within the workspace (see <see
            cref="M:Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.Document)"/>).  However, they will be overwritten by the <see
            cref="T:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager"/> for any changed documents it knows about (through <see
            cref="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDidChange"/>).
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.ILspWorkspace.UpdateTextIfPresentAsync(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)">
            <summary>
            If <paramref name="documentId"/> is currently within this workspace, then its text is updated to <paramref
            name="sourceText"/>.  Does nothing if the document is not present in the workspace (for example if something
            else removed it).
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.LspMiscellaneousFilesWorkspace">
            <summary>
            Defines a default workspace for opened LSP files that are not found in any
            workspace registered by the <see cref="T:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceRegistrationService"/>.
            If a document added here is subsequently found in a registered workspace, 
            the document is removed from this workspace.
            
            Future work for this workspace includes supporting basic metadata references (mscorlib, System dlls, etc),
            but that is dependent on having a x-plat mechanism for retrieving those references from the framework / sdk.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.LspMiscellaneousFilesWorkspace.AddMiscellaneousDocument(System.Uri,Microsoft.CodeAnalysis.Text.SourceText,System.String,Microsoft.CommonLanguageServerProtocol.Framework.ILspLogger)">
            <summary>
            Takes in a file URI and text and creates a misc project and document for the file.
            
            Calls to this method and <see cref="M:Microsoft.CodeAnalysis.LanguageServer.LspMiscellaneousFilesWorkspace.TryRemoveMiscellaneousDocument(System.Uri)"/> are made
            from LSP text sync request handling which do not run concurrently.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.LspMiscellaneousFilesWorkspace.TryRemoveMiscellaneousDocument(System.Uri)">
            <summary>
            Removes a document with the matching file path from this workspace.
            
            Calls to this method and <see cref="M:Microsoft.CodeAnalysis.LanguageServer.LspMiscellaneousFilesWorkspace.AddMiscellaneousDocument(System.Uri,Microsoft.CodeAnalysis.Text.SourceText,System.String,Microsoft.CommonLanguageServerProtocol.Framework.ILspLogger)"/> are made
            from LSP text sync request handling which do not run concurrently.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager">
            <summary>
            Manages the registered workspaces and corresponding LSP solutions for an LSP server.
            This type is tied to a particular server.
            </summary>
            <remarks>
            This type provides an LSP view of the registered workspace solutions so that all LSP requests operate
            on the state of the world that matches the LSP requests we've received.  
            
            This is done by storing the LSP text as provided by client didOpen/didClose/didChange requests.  When asked for a document we provide either
            <list type="bullet">
                <item> The exact workspace solution instance if all the LSP text matches what is currently in the workspace.</item>
                <item> A fork from the workspace current solution with the LSP text applied if the LSP text does not match.  This can happen since
                LSP text sync is asynchronous and not guaranteed to match the text in the workspace (though the majority of the time in VS it does).</item>
            </list>
            
            Doing the forking like this has a few nice properties.
            <list type="bullet">
              <item>99% of the time the VS workspace matches the LSP text.  In those cases we do 0 re-parsing, share compilations, versions, checksum calcs, etc.</item>
              <item>In the 1% of the time that we do not match, we can simply and easily compute a fork.</item>
              <item>The code is relatively straightforward</item>
            </list>
            </remarks>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager._cachedLspSolutions">
            <summary>
            A cache from workspace to the last solution we returned for LSP.
            <para/> The forkedFromVersion is not null when the solution was created from a fork of the workspace with LSP
            text applied on top. It is null when LSP reuses the workspace solution (the LSP text matches the contents of the
            workspace).
            <para/> Access to this is guaranteed to be serial by the <see cref="T:Microsoft.CommonLanguageServerProtocol.Framework.RequestExecutionQueue`1"/>
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager._trackedDocuments">
            <summary>
            Stores the current source text for each URI that is being tracked by LSP. Each time an LSP text sync
            notification comes in, this source text is updated to match. Used as the backing implementation for the <see
            cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.IDocumentChangeTracker"/>.
            <para/> Note that the text here is tracked regardless of whether or not we found a matching roslyn document for
            the URI.
            <para/> Access to this is guaranteed to be serial by the <see cref="T:Microsoft.CommonLanguageServerProtocol.Framework.RequestExecutionQueue`1"/>
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager.StartTrackingAsync(System.Uri,Microsoft.CodeAnalysis.Text.SourceText,System.String,System.Threading.CancellationToken)">
            <summary>
            Called by the <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidOpenHandler"/> when a document is opened in LSP.
            
            <see cref="P:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidOpenHandler.MutatesSolutionState"/> is true which means this runs serially in the <see cref="T:Microsoft.CommonLanguageServerProtocol.Framework.RequestExecutionQueue`1"/>
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager.StopTrackingAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Called by the <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidCloseHandler"/> when a document is closed in LSP.
            
            <see cref="P:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidCloseHandler.MutatesSolutionState"/> is true which means this runs serially in the <see cref="T:Microsoft.CommonLanguageServerProtocol.Framework.RequestExecutionQueue`1"/>
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager.UpdateTrackedDocument(System.Uri,Microsoft.CodeAnalysis.Text.SourceText)">
            <summary>
            Called by the <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidChangeHandler"/> when a document's text is updated in LSP.
            
            <see cref="P:Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentChanges.DidChangeHandler.MutatesSolutionState"/> is true which means this runs serially in the <see cref="T:Microsoft.CommonLanguageServerProtocol.Framework.RequestExecutionQueue`1"/>
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager.GetLspSolutionInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the LSP solution associated with the workspace with workspace kind <see cref="F:Microsoft.CodeAnalysis.WorkspaceKind.Host"/>.
            This is the solution used for LSP requests that pertain to the entire workspace, for example code search or
            workspace diagnostics.
            
            This is always called serially in the <see cref="T:Microsoft.CommonLanguageServerProtocol.Framework.RequestExecutionQueue`1"/> when creating the <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext"/>.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager.GetLspDocumentInfoAsync(Roslyn.LanguageServer.Protocol.TextDocumentIdentifier,System.Threading.CancellationToken)">
            <summary>
            Returns the LSP solution associated with the workspace with kind <see cref="F:Microsoft.CodeAnalysis.WorkspaceKind.Host"/>. This is the
            solution used for LSP requests that pertain to the entire workspace, for example code search or workspace
            diagnostics.
            
            This is always called serially in the <see cref="T:Microsoft.CommonLanguageServerProtocol.Framework.RequestExecutionQueue`1"/> when creating the <see cref="T:Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext"/>.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager.GetLspSolutionsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the LSP view of all the registered workspaces' current solutions.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager.DoesAllTextMatchWorkspaceSolutionAsync(System.Collections.Immutable.ImmutableDictionary{System.Uri,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.TextDocument}},System.Threading.CancellationToken)">
            <summary>
            Given a set of documents from the workspace current solution, verify that the LSP text is the same as the document contents.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceManager.GetDocumentsForUris(System.Collections.Immutable.ImmutableArray{System.Uri},Microsoft.CodeAnalysis.Solution)">
            <summary>
            Using the workspace's current solutions, find the matching documents in for each URI.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.LanguageServer.LspWorkspaceRegistrationService.LspSolutionChanged">
            <summary>
            Indicates whether the LSP solution has changed in a non-tracked document context.
            
            <b>IMPORTANT:</b> Implementations of this event handler should do as little synchronous work as possible since this will block.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.CodeCleanup.DiagnosticSet">
            <summary>
            Indicates which code fixes are enabled for a Code Cleanup operation. Each code fix in the set is triggered by
            one or more diagnostic IDs, which could be provided by the compiler or an analyzer.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.CodeCleanup.DiagnosticSet.IsAnyDiagnosticIdExplicitlyEnabled">
            <summary>
            Diagnostic set is enabled for all severities if it has been explicitly selected as part of the cleanup profile.
            If the diagnostic set has not been explicitly selected, but gets bulk included by selecting
            "Fix all warnings and errors set in EditorConfig", then we only include diagnostics with Warning Or Error severity.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.CodeCleanup.EnabledDiagnosticOptions">
            <summary>
            Indicates which features are enabled for a code cleanup operation.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.CodeCleanup.EnabledDiagnosticOptions.#ctor(System.Boolean,System.Boolean,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CodeCleanup.DiagnosticSet},Microsoft.CodeAnalysis.CodeCleanup.OrganizeUsingsSet)">
            <summary>
            Indicates which features are enabled for a code cleanup operation.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.CodeCleanup.OrganizeUsingsSet">
            <summary>
            Indicates which, if any, Organize Usings features are enabled for code cleanup.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.CodeFixes.CodeFixService.GetSuppressionFixer(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Looks explicitly for an <see cref="T:Microsoft.CodeAnalysis.CodeFixes.Suppression.AbstractSuppressionCodeFixProvider"/>.</summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.CodeFixes.ICodeFixService.GetMostSevereFixAsync(Microsoft.CodeAnalysis.TextDocument,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.CodeActions.ICodeActionRequestPriorityProvider,Microsoft.CodeAnalysis.CodeActions.CodeActionOptionsProvider,System.Threading.CancellationToken)">
            <summary>
            Similar to <see cref="M:Microsoft.CodeAnalysis.CodeFixes.ICodeFixService.StreamFixesAsync(Microsoft.CodeAnalysis.TextDocument,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.CodeActions.ICodeActionRequestPriorityProvider,Microsoft.CodeAnalysis.CodeActions.CodeActionOptionsProvider,System.Func{System.String,System.IDisposable},System.Threading.CancellationToken)"/> except that instead of streaming all results, this ends with the
            first.  This will also attempt to return a fix for an error first, but will fall back to any fix if that
            does not succeed.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.DefaultDiagnosticAnalyzerService.DefaultDiagnosticIncrementalAnalyzer.GetDiagnosticsAsync(Microsoft.CodeAnalysis.TextDocument,Microsoft.CodeAnalysis.Diagnostics.AnalysisKind,System.Threading.CancellationToken)">
            <summary>
            Get diagnostics for the given document.
            
            This is a simple API to get all diagnostics for the given document.
            
            The intended audience for this API is for ones that pefer simplicity over performance such as document that belong to misc project.
            this doesn't cache nor use cache for anything. it will re-caculate new diagnostics every time for the given document.
            it will not persist any data on disk nor use OOP to calculate the data.
            
            This should never be used when performance is a big concern. for such context, use much complex API from IDiagnosticAnalyzerService
            that provide all kinds of knobs/cache/persistency/OOP to get better perf over simplicity.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerService.SynchronizeWithBuildAsync(Microsoft.CodeAnalysis.Workspace,System.Collections.Immutable.ImmutableDictionary{Microsoft.CodeAnalysis.ProjectId,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticData}},Roslyn.Utilities.TaskQueue,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Synchronize build errors with live error.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.Diagnostics.NoOpIncrementalAnalyzer.Priority">
            <summary>
            Set to a low priority so everything else runs first.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor">
            <summary>
            Executes analyzers on a document for computing local syntax/semantic/additional file diagnostics for a specific <see cref="T:Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisScope"/>.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor.ComputeDiagnosticsAsync(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,System.Threading.CancellationToken)">
            <summary>
            Return all local diagnostics (syntax, semantic) that belong to given document for the given analyzer by calculating them.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor.CreateAnalyzerExceptionDiagnostic(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,System.Exception)">
            <summary>
            Create a diagnostic for exception thrown by the given analyzer.
            </summary>
            <remarks>
            Keep this method in sync with "AnalyzerExecutor.CreateAnalyzerExceptionDiagnostic".
            </remarks>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor.IsAnalyzerEnabledForProject(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Project,Microsoft.CodeAnalysis.Options.IGlobalOptionService)">
            <summary>
            Return true if the given <paramref name="analyzer"/> is not suppressed for the given project.
            NOTE: This API is intended to be used only for performance optimization.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer">
            <summary>
            Diagnostic Analyzer Engine V2
            
            This one follows pattern compiler has set for diagnostic analyzer.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ActiveFileState">
            <summary>
            state that is responsible to hold onto local diagnostics data regarding active/opened files (depends on host)
            in memory.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.DocumentAnalysisData">
            <summary>
            Simple data holder for local diagnostics for an analyzer
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.DocumentAnalysisData.Version">
            <summary>
            Version of the diagnostic data.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.DocumentAnalysisData.LineCount">
            <summary>
            Number of lines in the document.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.DocumentAnalysisData.Items">
            <summary>
            Current data that matches the version.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.DocumentAnalysisData.OldItems">
            <summary>
            Last set of data we broadcasted to outer world, or <see langword="default"/>.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ProjectAnalysisData">
            <summary>
            Data holder for all diagnostics for a project for an analyzer
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ProjectAnalysisData.ProjectId">
            <summary>
            ProjectId of this data
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ProjectAnalysisData.Version">
            <summary>
            Version of the Items
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ProjectAnalysisData.Result">
            <summary>
            Current data that matches the version
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ProjectAnalysisData.OldResult">
            <summary>
            When present, holds onto last data we broadcasted to outer world.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.GetOrCreateCompilationWithAnalyzersAsync(Microsoft.CodeAnalysis.Project,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet},System.Threading.CancellationToken)">
            <summary>
            Return CompilationWithAnalyzer for given project with given stateSets
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.Priority">
            <summary>
            The highest priority (lowest value) amongst all incremental analyzers (others have priority 1).
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.TryGetCachedDocumentAnalysisData(Microsoft.CodeAnalysis.TextDocument,Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet,Microsoft.CodeAnalysis.Diagnostics.AnalysisKind,Microsoft.CodeAnalysis.VersionStamp,Microsoft.CodeAnalysis.SolutionCrawler.BackgroundAnalysisScope,Microsoft.CodeAnalysis.SolutionCrawler.CompilerDiagnosticsScope,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken,System.Boolean@)">
            <summary>
            Return all cached local diagnostics (syntax, semantic) that belong to given document for the given StateSet (analyzer).
            Otherwise, return <code>null</code>.
            For the latter case, <paramref name="isAnalyzerSuppressed"/> indicates if the analyzer is suppressed
            for the given document/project. If suppressed, the caller does not need to compute the diagnostics for the given
            analyzer. Otherwise, diagnostics need to be computed.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ComputeDocumentAnalysisDataAsync(Microsoft.CodeAnalysis.Diagnostics.DocumentAnalysisExecutor,Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ActiveFileState,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Computes all local diagnostics (syntax, semantic) that belong to given document for the given StateSet (analyzer).
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.GetProjectAnalysisDataAsync(Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers,Microsoft.CodeAnalysis.Project,Microsoft.CodeAnalysis.Diagnostics.IdeAnalyzerOptions,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Return all diagnostics that belong to given project for the given StateSets (analyzers) either from cache or by calculating them
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ComputeDiagnosticsAsync(Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers,Microsoft.CodeAnalysis.Project,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calculate all diagnostics for a given project using analyzers referenced by the project and specified IDE analyzers.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.IncrementalMemberEditAnalyzer">
            <summary>
            This type performs incremental analysis in presence of edits to only a single member inside a document.
            For typing scenarios where we are continuously editing a method body, we can optimize the full
            document diagnostic computation by doing the following:
              1. Re-using all the old cached diagnostics outside the edited member node from a prior
                 document snapshot, but with updated diagnostic spans.
                 AND
              2. Replacing all the old diagnostics for the edited member node in a prior document snapshot
                 with the newly computed diagnostics for this member node in the latest document snaphot.
            If we are unable to perform this incremental diagnostics update, we fallback to computing
            the diagnostics for the entire document.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.IncrementalMemberEditAnalyzer._lastDocumentWithCachedDiagnostics">
            <summary>
            Weak reference to the last document snapshot for which full document diagnostics
            were computed and saved.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.IncrementalMemberEditAnalyzer.MemberSpans">
            <summary>
            Spans of member nodes for incremental analysis.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.IncrementalMemberEditAnalyzer.MemberSpans.#ctor(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.VersionStamp,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Text.TextSpan})">
            <summary>
            Spans of member nodes for incremental analysis.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ProjectAnalyzerReferenceChangedEventArgs">
            <summary>
            EventArgs for <see cref="E:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.ProjectAnalyzerReferenceChanged"/>
            
            this event args contains information such as <see cref="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ProjectAnalyzerReferenceChangedEventArgs.Project"/> the <see cref="T:Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference"/> has changed
            and what <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/> has changed.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ProjectState">
            <summary>
            State for diagnostics that belong to a project at given time.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ProjectState.GetAnalysisDataAsync(Microsoft.CodeAnalysis.Project,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Return all diagnostics for the given project stored in this state
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ProjectState.GetAnalysisDataAsync(Microsoft.CodeAnalysis.TextDocument,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Return all diagnostics for the given document stored in this state including non local diagnostics for this document
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.ProjectState.GetProjectAnalysisDataAsync(Microsoft.CodeAnalysis.Project,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Return all no location diagnostics for the given project stored in this state
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager">
            <summary>
            This is in charge of anything related to <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager._hostAnalyzerStateMap">
            <summary>
            Analyzers supplied by the host (IDE). These are built-in to the IDE, the compiler, or from an installed IDE extension (VSIX). 
            Maps language name to the analyzers and their state.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager._projectAnalyzerStateMap">
            <summary>
            Analyzers referenced by the project via a PackageReference.
            </summary>
        </member>
        <member name="E:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.ProjectAnalyzerReferenceChanged">
            <summary>
            This will be raised whenever <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager"/> finds <see cref="P:Microsoft.CodeAnalysis.Project.AnalyzerReferences"/> change
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.GetAllStateSets">
            <summary>
            Return all <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>.
            This will never create new <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/> but will return ones already created.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.GetStateSets(Microsoft.CodeAnalysis.ProjectId)">
            <summary>
            Return <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>s for the given <see cref="T:Microsoft.CodeAnalysis.ProjectId"/>. 
            This will never create new <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/> but will return ones already created.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.GetStateSets(Microsoft.CodeAnalysis.Project)">
            <summary>
            Return <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>s for the given <see cref="T:Microsoft.CodeAnalysis.Project"/>.
            This will never create new <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/> but will return ones already created.
            Difference with <see cref="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.GetStateSets(Microsoft.CodeAnalysis.ProjectId)"/> is that 
            this will only return <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>s that have same language as <paramref name="project"/>.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.GetOrUpdateStateSets(Microsoft.CodeAnalysis.Project)">
            <summary>
            Return <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>s for the given <see cref="T:Microsoft.CodeAnalysis.Project"/>. 
            This will either return already created <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>s for the specific snapshot of <see cref="T:Microsoft.CodeAnalysis.Project"/> or
            It will create new <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>s for the <see cref="T:Microsoft.CodeAnalysis.Project"/> and update internal state.
            
            since this has a side-effect, this should never be called concurrently. and incremental analyzer (solution crawler) should guarantee that.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.GetOrCreateStateSets(Microsoft.CodeAnalysis.Project)">
            <summary>
            Return <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>s for the given <see cref="T:Microsoft.CodeAnalysis.Project"/>. 
            This will either return already created <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>s for the specific snapshot of <see cref="T:Microsoft.CodeAnalysis.Project"/> or
            It will create new <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>s for the <see cref="T:Microsoft.CodeAnalysis.Project"/>.
            Unlike <see cref="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.GetOrUpdateStateSets(Microsoft.CodeAnalysis.Project)"/>, this has no side effect.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.GetOrCreateStateSet(Microsoft.CodeAnalysis.Project,Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer)">
            <summary>
            Return <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/> for the given <see cref="T:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer"/> in the context of <see cref="T:Microsoft.CodeAnalysis.Project"/>.
            This will either return already created <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/> for the specific snapshot of <see cref="T:Microsoft.CodeAnalysis.Project"/> or
            It will create new <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/> for the <see cref="T:Microsoft.CodeAnalysis.Project"/>.
            This will not have any side effect.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.CreateBuildOnlyProjectStateSet(Microsoft.CodeAnalysis.Project)">
            <summary>
            Return <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/>s that are added as the given <see cref="T:Microsoft.CodeAnalysis.Project"/>'s AnalyzerReferences.
            This will never create new <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/> but will return ones already created.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.CreateProjectStateSets(Microsoft.CodeAnalysis.Project)">
            <summary>
            Creates a new project state sets.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateManager.UpdateProjectStateSets(Microsoft.CodeAnalysis.Project)">
            <summary>
            Updates the map to the given project snapshot.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet">
            <summary>
            this contains all states regarding a <see cref="T:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer"/>
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.LatestDiagnosticsForSpanGetter">
            <summary>
            Get diagnostics for given span either by using cache or calculating it on the spot.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.LatestDiagnosticsForSpanGetter.TryAddCachedDocumentDiagnosticsAsync(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Diagnostics.AnalysisKind,Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.DocumentAnalysisData,Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder{Microsoft.CodeAnalysis.Diagnostics.DiagnosticData},System.Threading.CancellationToken)">
            <summary>
            Returns <see langword="true"/> if we were able to add the cached diagnostics and we do not need to compute them fresh.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.GetStateSetsForFullSolutionAnalysis(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet},Microsoft.CodeAnalysis.Project)">
            <summary>
            Return list of <see cref="T:Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet"/> to be used for full solution analysis.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Diagnostics.IDiagnosticService">
            <summary>
            Aggregates events from various diagnostic sources.
            </summary>
        </member>
        <member name="E:Microsoft.CodeAnalysis.Diagnostics.IDiagnosticService.DiagnosticsUpdated">
            <summary>
            Event to get notified as new diagnostics are discovered by IDiagnosticUpdateSource
            
            Notifications for this event are serialized to preserve order.
            However, individual event notifications may occur on any thread.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.IDiagnosticService.GetDiagnosticsAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.DocumentId,System.Object,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get current diagnostics stored in IDiagnosticUpdateSource.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.Diagnostics.IDiagnosticService.GetDiagnosticBuckets(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.DocumentId,System.Threading.CancellationToken)">
            <summary>
            Get current buckets storing our grouped diagnostics.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.InternalDiagnosticsOptionsStorage.RazorDiagnosticMode">
            <summary>
            Diagnostic mode setting for Razor.  This should always be <see cref="F:Microsoft.CodeAnalysis.Diagnostics.DiagnosticMode.LspPull"/> as there is no push support in Razor.
            This option is only for passing to the diagnostics service and can be removed when we switch all of Roslyn to LSP pull.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Diagnostics.InternalDiagnosticsOptionsStorage.LiveShareDiagnosticMode">
            <summary>
            Diagnostic mode setting for Live Share.  This should always be <see cref="F:Microsoft.CodeAnalysis.Diagnostics.DiagnosticMode.LspPull"/> as there is no push support in Live Share.
            This option is only for passing to the diagnostics service and can be removed when we switch all of Roslyn to LSP pull.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.FindUsages.SimpleFindUsagesContext">
            <summary>
            Simple implementation of a <see cref="T:Microsoft.CodeAnalysis.FindUsages.FindUsagesContext"/> that just aggregates the results
            for consumers that just want the data once it is finally computed.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.Formatting.RazorLineFormattingOptionsStorage">
            <summary>
            Formatting options for Razor design-time documents.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.BackgroundAnalysisScopeOption">
            <summary>
            Option to turn configure background analysis scope for the current user.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.SolutionBackgroundAnalysisScopeOption">
            <summary>
            Option to turn configure background analysis scope for the current solution.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.CompilerDiagnosticsScopeOption">
            <summary>
            Option to configure compiler diagnostics scope for the current user.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.LowMemoryForcedMinimalBackgroundAnalysis">
            <summary>
            Enables forced <see cref="F:Microsoft.CodeAnalysis.SolutionCrawler.BackgroundAnalysisScope.Minimal"/> scope when low VM is detected to improve performance.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.GetBackgroundAnalysisScope(Microsoft.CodeAnalysis.Options.IGlobalOptionService,System.String)">
             <summary>
             <para>Gets the effective background analysis scope for the current solution.</para>
            
             <para>Gets the solution-specific analysis scope set through
             <see cref="F:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.SolutionBackgroundAnalysisScopeOption"/>, or the default analysis scope if no solution-specific
             scope is set.</para>
             </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.GetBackgroundCompilerAnalysisScope(Microsoft.CodeAnalysis.Options.IGlobalOptionService,System.String)">
             <summary>
             <para>Gets the effective background compiler analysis scope for the current solution.</para>
            
             <para>Gets the solution-specific analysis scope set through
             <see cref="F:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.SolutionBackgroundAnalysisScopeOption"/>, or the default compiler analysis scope if no
             solution-specific scope is set.</para>
             </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.IsFullSolutionAnalysisEnabled(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Options.IGlobalOptionService,System.String)">
            <summary>
            Returns true if full solution analysis is enabled for the given
            <paramref name="analyzer"/> through options for the given <paramref name="language"/>.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.IsFullSolutionAnalysisEnabled(Microsoft.CodeAnalysis.Options.IGlobalOptionService,System.String)">
            <summary>
            Returns true if the entire solution will be analyzed in the background
            to compute up-to-date diagnostics for the error list.
            Note that the background analysis scope for compiler diagnostics and
            analyzers can be different. If you want to fetch individual values for
            whether or not full solution analysis is enabled for compiler diagnostics
            and analyzers, use the other overload
            <see cref="M:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.IsFullSolutionAnalysisEnabled(Microsoft.CodeAnalysis.Options.IGlobalOptionService,System.String,System.Boolean@,System.Boolean@)"/>.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.IsFullSolutionAnalysisEnabled(Microsoft.CodeAnalysis.Options.IGlobalOptionService,System.String,System.Boolean@,System.Boolean@)">
            <summary>
            Returns true if the entire solution will be analyzed in the background
            to compute up-to-date diagnostics for the error list.
            Note that the background analysis scope for compiler diagnostics and
            analyzers can be different. Full analysis is enabled if either
            <paramref name="compilerFullSolutionAnalysisEnabled"/> is true or
            <paramref name="analyzersFullSolutionAnalysisEnabled"/> is true.
            Full analysis is disabled only if both these flags are false.
            If you do not care about the individual full solution analysis values
            for compiler diagnostics and analyzers, use the other overload
            <see cref="M:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.IsFullSolutionAnalysisEnabled(Microsoft.CodeAnalysis.Options.IGlobalOptionService,System.String)"/>.
            </summary>
            <param name="globalOptions">Global options.</param>
            <param name="language">
            Language of the projects in the solution to analyze.
            </param>
            <param name="compilerFullSolutionAnalysisEnabled">
            Indicates if the compiler diagnostics need to be computed for the entire solution.
            </param>
            <param name="analyzersFullSolutionAnalysisEnabled">
            Indicates if analyzer diagnostics need to be computed for the entire solution.
            </param>
        </member>
        <member name="M:Microsoft.CodeAnalysis.SolutionCrawler.SolutionCrawlerOptionsStorage.IsAnalysisDisabled(Microsoft.CodeAnalysis.Options.IGlobalOptionService,System.String)">
            <summary>
            Returns true if background analysis is completely disabled for
            both compiler diagnostics and analyzer diagnostics, i.e. the user
            does not want to see squiggles or error list entries for any diagnostics.
            </summary>
        </member>
        <member name="F:Microsoft.CodeAnalysis.Host.WorkspaceConfigurationOptionsStorage.EnableOpeningSourceGeneratedFilesInWorkspace">
            <summary>
            This option allows the user to enable this. We are putting this behind a feature flag for now since we could have extensions
            surprised by this and we want some time to work through those issues.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedPredefinedSuggestedActionCategoryNames">
            <summary>
            Equivalent to PredefinedSuggestedActionCategoryNames, but in a location that
            can be used by both local Roslyn and LSP.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionSet">
            <summary>
            Similar to SuggestedActionSet, but in a location that can be used
            by both local Roslyn and LSP.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource">
            <summary>
            Provides mutual code action logic for both local and LSP scenarios
            via intermediate interface <see cref="T:Microsoft.CodeAnalysis.UnifiedSuggestions.IUnifiedSuggestedAction"/>.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource.GetFilterAndOrderCodeFixesAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.CodeFixes.ICodeFixService,Microsoft.CodeAnalysis.TextDocument,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.CodeActions.ICodeActionRequestPriorityProvider,Microsoft.CodeAnalysis.CodeActions.CodeActionOptionsProvider,System.Func{System.String,System.IDisposable},System.Threading.CancellationToken)">
            <summary>
            Gets, filters, and orders code fixes.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource.OrganizeFixesAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CodeFixes.CodeFixCollection},System.Threading.CancellationToken)">
            <summary>
            Arrange fixes into groups based on the issue (diagnostic being fixed) and prioritize these groups.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource.GroupFixesAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.Solution,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CodeFixes.CodeFixCollection},System.Collections.Generic.IDictionary{System.Tuple{Microsoft.CodeAnalysis.Diagnostics.DiagnosticData,Microsoft.CodeAnalysis.CodeActions.CodeActionPriority,System.Nullable{Microsoft.CodeAnalysis.CodeActions.CodeActionPriority}},System.Collections.Generic.IList{Microsoft.CodeAnalysis.UnifiedSuggestions.IUnifiedSuggestedAction}},Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder{System.Tuple{Microsoft.CodeAnalysis.Diagnostics.DiagnosticData,Microsoft.CodeAnalysis.CodeActions.CodeActionPriority,System.Nullable{Microsoft.CodeAnalysis.CodeActions.CodeActionPriority}}},System.Threading.CancellationToken)">
            <summary>
            Groups fixes by the diagnostic being addressed by each fix.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource.PrioritizeFixGroups(Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Immutable.ImmutableDictionary{System.Tuple{Microsoft.CodeAnalysis.Diagnostics.DiagnosticData,Microsoft.CodeAnalysis.CodeActions.CodeActionPriority,System.Nullable{Microsoft.CodeAnalysis.CodeActions.CodeActionPriority}},System.Collections.Generic.IList{Microsoft.CodeAnalysis.UnifiedSuggestions.IUnifiedSuggestedAction}},System.Collections.Immutable.ImmutableArray{System.Tuple{Microsoft.CodeAnalysis.Diagnostics.DiagnosticData,Microsoft.CodeAnalysis.CodeActions.CodeActionPriority,System.Nullable{Microsoft.CodeAnalysis.CodeActions.CodeActionPriority}}},Microsoft.CodeAnalysis.Workspace)">
            <summary>
            Return prioritized set of fix groups such that fix group for suppression always show up at the bottom of the list.
            </summary>
            <remarks>
            Fix groups are returned in priority order determined based on <see cref="T:Microsoft.CodeAnalysis.ExtensionOrderAttribute"/>.
            Priority for all <see cref="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionSet"/>s containing fixes is set to <see
            cref="F:Microsoft.CodeAnalysis.CodeActions.CodeActionPriority.Default"/> by default. The only exception is the case where a <see
            cref="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionSet"/> only contains suppression fixes - the priority of such <see
            cref="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionSet"/>s is set to <see cref="F:Microsoft.CodeAnalysis.CodeActions.CodeActionPriority.Lowest"/> so that suppression
            fixes always show up last after all other fixes (and refactorings) for the selected line of code.
            </remarks>
        </member>
        <member name="M:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource.GetFilterAndOrderCodeRefactoringsAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.CodeRefactorings.ICodeRefactoringService,Microsoft.CodeAnalysis.TextDocument,Microsoft.CodeAnalysis.Text.TextSpan,System.Nullable{Microsoft.CodeAnalysis.CodeActions.CodeActionRequestPriority},Microsoft.CodeAnalysis.CodeActions.CodeActionOptionsProvider,System.Func{System.String,System.IDisposable},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets, filters, and orders code refactorings.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource.OrganizeRefactoringsAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.TextDocument,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoring,System.Threading.CancellationToken)">
            <summary>
            Arrange refactorings into groups.
            </summary>
            <remarks>
            Refactorings are returned in priority order determined based on <see cref="T:Microsoft.CodeAnalysis.ExtensionOrderAttribute"/>.
            Priority for all <see cref="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionSet"/>s containing refactorings is set to
            <see cref="F:Microsoft.CodeAnalysis.CodeActions.CodeActionPriority.Low"/> and should show up after fixes but before
            suppression fixes in the light bulb menu.
            </remarks>
        </member>
        <member name="M:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource.FilterAndOrderActionSets(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionSet},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionSet},System.Nullable{Microsoft.CodeAnalysis.Text.TextSpan},System.Int32)">
            <summary>
            Filters and orders the code fix sets and code refactoring sets amongst each other.
            Should be called with the results from <see cref="M:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource.GetFilterAndOrderCodeFixesAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.CodeFixes.ICodeFixService,Microsoft.CodeAnalysis.TextDocument,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.CodeActions.ICodeActionRequestPriorityProvider,Microsoft.CodeAnalysis.CodeActions.CodeActionOptionsProvider,System.Func{System.String,System.IDisposable},System.Threading.CancellationToken)"/>
            and <see cref="M:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionsSource.GetFilterAndOrderCodeRefactoringsAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.CodeRefactorings.ICodeRefactoringService,Microsoft.CodeAnalysis.TextDocument,Microsoft.CodeAnalysis.Text.TextSpan,System.Nullable{Microsoft.CodeAnalysis.CodeActions.CodeActionRequestPriority},Microsoft.CodeAnalysis.CodeActions.CodeActionOptionsProvider,System.Func{System.String,System.IDisposable},System.Boolean,System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActions.ICodeFixSuggestedAction">
            <summary>
            Common interface used by both local Roslyn and LSP to implement
            their specific versions of CodeFixSuggestedAction.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActions.ICodeRefactoringSuggestedAction">
            <summary>
            Common interface used by both local Roslyn and LSP to implement
            their specific versions of CodeRefactoringSuggestedAction.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActions.IFixAllCodeFixSuggestedAction">
            <summary>
            Common interface used by both local Roslyn and LSP to implement
            their specific versions of FixAllCodeFixSuggestedAction.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActions.IFixAllCodeRefactoringSuggestedAction">
            <summary>
            Common interface used by both local Roslyn and LSP to implement
            their specific versions of FixAllCodeRefactoringSuggestedAction.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.IUnifiedSuggestedAction">
            <summary>
            Similar to ISuggestedAction, but in a location that can be used by both local Roslyn and LSP.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedCodeFixSuggestedAction">
            <summary>
            Similar to CodeFixSuggestionAction, but in a location that can be used by
            both local Roslyn and LSP.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedCodeRefactoringSuggestedAction">
            <summary>
            Similar to CodeRefactoringSuggestedAction, but in a location that can be used by
            both local Roslyn and LSP.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedFixAllCodeFixSuggestedAction">
            <summary>
            Similar to FixAllCodeFixSuggestedAction, but in a location that can be used by
            both local Roslyn and LSP.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedFixAllCodeRefactoringSuggestedAction">
            <summary>
            Similar to FixAllCodeRefactoringSuggestedAction, but in a location that can be used by
            both local Roslyn and LSP.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedAction">
            <summary>
            Similar to SuggestedAction, but in a location that can be used by
            both local Roslyn and LSP.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.UnifiedSuggestions.UnifiedSuggestedActionWithNestedActions">
            <summary>
            Similar to SuggestedActionWithNestedActions, but in a location that can be used by
            both local Roslyn and LSP.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ApplyWorkspaceEditParams">
             <summary>
             Class representing the parameters sent from a server to a client for the workspace/applyEdit request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#applyWorkspaceEditParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ApplyWorkspaceEditParams.Label">
            <summary>
            Gets or sets the label associated with this edit.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ApplyWorkspaceEditParams.Edit">
            <summary>
            Gets or sets the edit to be applied to the workspace.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ApplyWorkspaceEditResponse">
             <summary>
             Class representing the response sent for a workspace/applyEdit request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#applyWorkspaceEditResult">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ApplyWorkspaceEditResponse.Applied">
            <summary>
            Gets or sets a value indicating whether edits were applied or not.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ApplyWorkspaceEditResponse.FailureReason">
            <summary>
            Gets or sets a string with textual description for why the edit was not applied.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ClientCapabilities">
             <summary>
             Class which represents client capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#clientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ClientCapabilities.Workspace">
            <summary>
            Gets or sets the workspace capabilities.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ClientCapabilities.TextDocument">
            <summary>
            Gets or sets the text document capabilities.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ClientCapabilities.Experimental">
            <summary>
            Gets or sets the experimental capabilities.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeAction">
             <summary>
             A class representing a change that can be performed in code. A CodeAction must either set
             <see cref="P:Roslyn.LanguageServer.Protocol.CodeAction.Edit"/> or <see cref="P:Roslyn.LanguageServer.Protocol.CodeAction.Command"/>. If both are supplied,
             the edit will be applied first, then the command will be executed.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeAction">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeAction.Title">
            <summary>
            Gets or sets the human readable title for this code action.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeAction.Kind">
            <summary>
            Gets or sets the kind of code action this instance represents.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeAction.Diagnostics">
            <summary>
            Gets or sets the diagnostics that this code action resolves.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeAction.Edit">
            <summary>
            Gets or sets the workspace edit that this code action performs.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeAction.Command">
            <summary>
            Gets or sets the command that this code action executes.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeAction.Data">
            <summary>
            Gets or sets the data that will be resend to the server if the code action is selected to be resolved.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeActionContext">
             <summary>
             Class representing diagnostic information about the context of a code action
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeActionContext">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionContext.Diagnostics">
            <summary>
            Gets or sets an array of diagnostics relevant to a code action.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionContext.Only">
            <summary>
            Gets or sets an array of code action kinds to filter for.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionContext.TriggerKind">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.CodeActionTriggerKind"/> indicating how the code action was triggered..
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeActionKind">
             <summary>
             Value representing the kind of a code action.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeActionKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.CodeActionKind.#ctor(System.String)">
             <summary>
             Value representing the kind of a code action.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeActionKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CodeActionKind.Empty">
            <summary>
            Empty kind.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CodeActionKind.QuickFix">
            <summary>
            Code action is a refactor.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CodeActionKind.Refactor">
            <summary>
            Base kind for refactoring actions.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CodeActionKind.RefactorExtract">
            <summary>
            Base kind for refactoring extraction actions, like extracting methods, functions,
            variables, etc.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CodeActionKind.RefactorInline">
            <summary>
            Base kind for refactoring inline actions, like inlining functions, variables,
            constants, etc.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CodeActionKind.RefactorRewrite">
            <summary>
            Base kind for refactoring rewrite actions, like adding or removing a parameter,
            making a method static, etc.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CodeActionKind.Source">
            <summary>
            Base kind for source actions, which apply to the entire file.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CodeActionKind.SourceOrganizeImports">
            <summary>
            Base kind for an organize imports source action.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CodeActionKind.SourceFixAll">
            <summary>
            Base kind for a fix all source action, which automatically fixes errors that have a clear
            fix that do not require user input.
            </summary>
            <remarks>
            They should not suppress errors or perform unsafe fixes such as generating new
            types or classes.
            </remarks>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeActionKindSetting">
             <summary>
             Class containing the set of code action kinds that are supported.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeActionClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionKindSetting.ValueSet">
            <summary>
            Gets or sets the code actions kinds the client supports.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeActionLiteralSetting">
             <summary>
             Class representing support for code action literals.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeActionClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionLiteralSetting.CodeActionKind">
            <summary>
            Gets or sets a value indicating what code action kinds are supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeActionOptions">
             <summary>
             Class representing the registration options for code actions support.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeActionOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionOptions.CodeActionKinds">
            <summary>
            Gets or sets the kinds of code action that this server may return.
            </summary>
            <remarks>
            The list of kinds may be generic, such as `CodeActionKind.Refactor`, or the server
            may list out every specific kind they provide.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionOptions.ResolveProvider">
            <summary>
            Gets or sets a value indicating whether the server provides support to resolve
            additional information for a code action.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeActionParams">
             <summary>
             Class representing the parameters sent from the client to the server for the textDocument/codeAction request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeActionParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionParams.TextDocument">
            <summary>
            Gets or sets the document identifier indicating where the command was invoked.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionParams.Range">
            <summary>
            Gets or sets the range in the document for which the command was invoked.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionParams.Context">
            <summary>
            Gets or sets the additional diagnostic information about the code action context.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeActionResolveSupportSetting">
             <summary>
             Class representing settings for codeAction/resolve support.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeActionClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionResolveSupportSetting.Properties">
            <summary>
            Gets or sets a value indicating the properties that a client can resolve lazily.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeActionSetting">
             <summary>
             Class representing settings for code action support.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeActionClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionSetting.CodeActionLiteralSupport">
            <summary>
            Gets or sets a value indicating the client supports code action literals.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionSetting.ResolveSupport">
            <summary>
            Gets or sets a value indicating whether the client supports resolving
            additional code action properties via a separate `codeAction/resolve`
            request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeActionSetting.DataSupport">
            <summary>
            Gets or sets a value indicating whether code action supports the `data`
            property which is preserved between a `textDocument/codeAction` and a
            `codeAction/resolve` request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeActionTriggerKind">
             <summary>
             Enum which represents the various reason why code actions were requested.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeActionTriggerKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CodeActionTriggerKind.Invoked">
            <summary>
            Code actions were explicitly requested by the user or by an extension.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CodeActionTriggerKind.Automatic">
            <summary>
            Code actions were requested automatically.
            This typically happens when current selection in a file changes, but can also be triggered when file content changes.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeDescription">
             <summary>
             Class representing a description for an error code.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeDescription">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeDescription.Href">
            <summary>
            Gets or sets URI to open with more information about the diagnostic error.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.CodeDescription.Equals(Roslyn.LanguageServer.Protocol.CodeDescription)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.CodeDescription.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.CodeDescription.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeLens">
             <summary>
             A class representing a code lens command that should be shown alongside source code.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeLens">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeLens.Range">
            <summary>
            Gets or sets the range that the code lens applies to.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeLens.Command">
            <summary>
            Gets or sets the command associated with this code lens.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeLens.Data">
            <summary>
            Gets or sets the data that should be preserved between a textDocument/codeLens request and a codeLens/resolve request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeLensOptions">
             <summary>
             Class representing the options for code lens support.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeLensOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeLensOptions.ResolveProvider">
            <summary>
            Gets or sets a value indicating whether or not the code lens support has a resolve provider.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeLensOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeLensParams">
             <summary>
             Class representing the parameters sent from the client to the server for a textDocument/codeLens request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#codeLensParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeLensParams.TextDocument">
            <summary>
            Gets or sets the document identifier to fetch code lens results for.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CodeLensWorkspaceSetting">
             <summary>
             Class representing the workspace code lens client capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#codeLensWorkspaceClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CodeLensWorkspaceSetting.RefreshSupport">
            <summary>
            Gets or sets a value indicating whether the client supports a refresh request sent from the server to the client.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.Color">
             <summary>
             Class which represents a color.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#color">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Color.Red">
            <summary>
            Gets or sets the Red value.
            </summary>
            <remarks>
            Value should be clamped to [0,1].
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Color.Green">
            <summary>
            Gets or sets the Green value.
            </summary>
            <remarks>
            Value should be clamped to [0,1].
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Color.Blue">
            <summary>
            Gets or sets the Blue value.
            </summary>
            <remarks>
            Value should be clamped to [0,1].
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Color.Alpha">
            <summary>
            Gets or sets the Alpha value.
            </summary>
            <remarks>
            Value should be clamped to [0,1].
            </remarks>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ColorInformation">
             <summary>
             Class which represents color information.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#colorInformation">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ColorInformation.Range">
            <summary>
            Gets or sets the text range representing the color.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ColorInformation.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.Command">
             <summary>
             Class representing a reference to a command
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#command">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Command.Title">
            <summary>
            Gets or sets the title of the command.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Command.CommandIdentifier">
            <summary>
            Gets or sets the identifier associated with the command.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Command.Arguments">
            <summary>
            Gets or sets the arguments that the command should be invoked with.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionContext">
             <summary>
             Class representing additional information about the content in which a completion request is triggered.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionContext">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionContext.TriggerKind">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.CompletionTriggerKind"/> indicating how the completion was triggered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionContext.TriggerCharacter">
            <summary>
            Gets or sets the character that triggered code completion.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionItem">
             <summary>
             Class which represents an IntelliSense completion item.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionItem">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.Label">
            <summary>
            Gets or sets the label value, i.e. display text to users.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.LabelDetails">
            <summary>
            Gets or sets additional details for the label.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.Kind">
            <summary>
            Gets or sets the completion kind.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.Detail">
            <summary>
            Gets or sets the completion detail.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.Documentation">
            <summary>
            Gets or sets the documentation comment.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.Preselect">
            <summary>
            Gets or sets a value indicating whether this should be the selected item when showing.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.SortText">
            <summary>
            Gets or sets the custom sort text.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.FilterText">
            <summary>
            Gets or sets the custom filter text.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.InsertText">
            <summary>
            Gets or sets the insert text.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.InsertTextFormat">
            <summary>
            Gets or sets the insert text format.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.TextEdit">
            <summary>
            Gets or sets the text edit.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.TextEditText">
            <summary>
            Gets or sets the text edit text.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.AdditionalTextEdits">
            <summary>
            Gets or sets any additional text edits.
            </summary>
            <remarks>
            Additional text edits must not interfere with the main text edit.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.CommitCharacters">
            <summary>
            Gets or sets the set of characters that will commit completion when this <see cref="T:Roslyn.LanguageServer.Protocol.CompletionItem" /> is selected
            If present, this will override <see cref="P:Roslyn.LanguageServer.Protocol.CompletionOptions.AllCommitCharacters"/>.
            If absent, <see cref="P:Roslyn.LanguageServer.Protocol.CompletionOptions.AllCommitCharacters"/> will be used instead.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.Command">
            <summary>
            Gets or sets any optional command that will be executed after completion item insertion.
            </summary>
            <remarks>
            This feature is not supported in VS.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItem.Data">
            <summary>
            Gets or sets any additional data that links the unresolve completion item and the resolved completion item.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionItemKind">
             <summary>
             Enum values for completion item kinds.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionItemKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.None">
            <summary>
            Value to use when no kind was provided.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Method">
            <summary>
            Method.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Function">
            <summary>
            Function.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Constructor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Field">
            <summary>
            Field.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Variable">
            <summary>
            Variable.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Class">
            <summary>
            Class.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Interface">
            <summary>
            Interface.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Module">
            <summary>
            Module.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Property">
            <summary>
            Property.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Unit">
            <summary>
            Unit.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Enum">
            <summary>
            Enum.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Keyword">
            <summary>
            Keyword.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Snippet">
            <summary>
            Snippet.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Color">
            <summary>
            Color.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.File">
            <summary>
            File.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Reference">
            <summary>
            Reference.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Folder">
            <summary>
            Folder.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.EnumMember">
            <summary>
            EnumMember.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Constant">
            <summary>
            Constant.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Struct">
            <summary>
            Struct.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Event">
            <summary>
            Event.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Operator">
            <summary>
            Operator.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.TypeParameter">
            <summary>
            TypeParameter.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Macro">
            <summary>
            Macro.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Namespace">
            <summary>
            Namespace.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Template">
            <summary>
            Template.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.TypeDefinition">
            <summary>
            TypeDefinition.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Union">
            <summary>
            Union.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Delegate">
            <summary>
            Delegate.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.TagHelper">
            <summary>
            TagHelper.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.ExtensionMethod">
            <summary>
            ExtensionMethod.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.Element">
            <summary>
            Element.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.LocalResource">
            <summary>
            LocalResource.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.SystemResource">
            <summary>
            SystemResource.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemKind.CloseElement">
            <summary>
            CloseElement.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionItemKindSetting">
             <summary>
             Class which represents the initialization setting for completion item kind
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemKindSetting.ValueSet">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.CompletionItemKind"/> values that the client supports.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionItemLabelDetails">
             <summary>
             Additional details for a completion item label.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#completionItemLabelDetails">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemLabelDetails.Detail">
            <summary>
            Gets or sets an optional string which is rendered less prominently directly after label, without any spacing.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemLabelDetails.Description">
            <summary>
            Gets or sets an optional string which is rendered less prominently after detail.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionItemOptions">
             <summary>
             Class which represents completion item capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemOptions.LabelDetailsSupport">
            <summary>
            Gets or sets a value indicating The server has support for completion item label details
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionItemSetting">
             <summary>
             Class which represents initialization setting for completion item.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemSetting.SnippetSupport">
            <summary>
            Gets or sets a value indicating whether completion items can contain snippets.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemSetting.CommitCharactersSupport">
            <summary>
            Gets or sets a value indicating whether the client supports commit characters.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemSetting.DocumentationFormat">
            <summary>
            Gets or sets the content formats supported for documentation.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemSetting.DeprecatedSupport">
            <summary>
            Gets or sets the a value indicating whether the client supports the deprecated property on a completion item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemSetting.PreselectSupport">
            <summary>
            Gets or sets the a value indicating whether the client supports the preselect property on a completion item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemSetting.TagSupport">
            <summary>
            Gets or sets the a value indicating whether the client supports the tag property on a completion item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemSetting.InsertReplaceSupport">
            <summary>
            Gets or sets the a value indicating whether the client supports insert replace edit.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemSetting.ResolveSupport">
            <summary>
            Gets or sets the a value indicating which properties a client can resolve lazily on a completion item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemSetting.InsertTextModeSupport">
            <summary>
            Gets or sets the a value indicating whether the client supports the `insertTextMode` property on   a completion item to override the whitespace handling mode as defined by the client.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemSetting.LabelDetailsSupport">
            <summary>
            Gets or sets the a value indicating whether the client supports completion item label details.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionItemTag">
             <summary>
             Completion item tags are extra annotations that tweak the rendering of a completion item.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionItemTag">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionItemTag.Deprecated">
            <summary>
            Render a completion as obsolete, usually using a strike-out.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionItemTagSupportSetting">
             <summary>
             Class which represents initialization setting for the tag property on a completion item.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionItemTagSupportSetting.ValueSet">
            <summary>
            Gets or sets a value indicating the tags supported by the client.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionList">
             <summary>
             Class which represents a completion list.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionList">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionList.IsIncomplete">
            <summary>
            Gets or sets a value indicating whether Items is the complete list of items or not.  If incomplete is true, then
            filtering should ask the server again for completion item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionList.Items">
            <summary>
            Gets or sets the list of completion items.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionList.ItemDefaults">
            <summary>
            Gets or sets the completion list item defaults.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionListItemDefaults">
            <summary>
            Class which represents default properties associated with the entire completion list.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionListItemDefaults.CommitCharacters">
            <summary>
            Gets or sets the default commit character set.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionListItemDefaults.EditRange">
            <summary>
            Gets or sets the default edit range.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionListItemDefaults.InsertTextFormat">
            <summary>
            Gets or sets the default <see cref="P:Roslyn.LanguageServer.Protocol.CompletionListItemDefaults.InsertTextFormat"/>.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionListItemDefaults.InsertTextMode">
            <summary>
            Gets or sets the default <see cref="P:Roslyn.LanguageServer.Protocol.CompletionListItemDefaults.InsertTextMode"/>.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionListItemDefaults.Data">
            <summary>
            Gets or sets the default completion item data.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionListSetting">
            <summary>
            Class which represents capabilites for the completion list type.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionListSetting.ItemDefaults">
            <summary>
            Gets or sets a value containing the supported property names of the <see cref="P:Roslyn.LanguageServer.Protocol.CompletionList.ItemDefaults"/> object.
            If omitted, no properties are supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionOptions">
             <summary>
             Class which represents completion capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionOptions.TriggerCharacters">
            <summary>
            Gets or sets the trigger characters.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionOptions.AllCommitCharacters">
            <summary>
            Gets or sets a value indicating all the possible commit characters associated with the language server.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionOptions.ResolveProvider">
            <summary>
            Gets or sets a value indicating whether server provides completion item resolve capabilities.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionOptions.CompletionItemOptions">
            <summary>
            Gets or sets completion item setting.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionParams">
             <summary>
             Class representing the parameters for the textDocument/completion request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionParams.Context">
            <summary>
            Gets or sets the completion context.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionParams.PartialResultToken">
            <summary>
            Gets or sets the value of the PartialResultToken instance.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionSetting">
             <summary>
             Class which represents initialization setting for completion.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionSetting.CompletionItem">
            <summary>
            Gets or sets completion item setting.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionSetting.CompletionItemKind">
            <summary>
            Gets or sets <see cref="T:Roslyn.LanguageServer.Protocol.CompletionItemKind"/> specific settings.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionSetting.ContextSupport">
            <summary>
            Gets or sets a value indicating whether the client supports sending additional context.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionSetting.InsertTextMode">
            <summary>
            Gets or sets a value indicating client's default when the completion item doesn't provide an `insertTextMode` property.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CompletionSetting.CompletionListSetting">
            <summary>
            Gets or sets a value indicating whether the client supports capabilities on the completion list.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CompletionTriggerKind">
             <summary>
             Enum which represents the various ways in which completion can be triggered.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionTriggerKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionTriggerKind.Invoked">
            <summary>
            Completion was triggered by typing an identifier.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionTriggerKind.TriggerCharacter">
            <summary>
            Completion was triggered by typing a trigger character.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.CompletionTriggerKind.TriggerForIncompleteCompletions">
            <summary>
            Completion was re-triggered as the current completion list is incomplete.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ConfigurationItem">
             <summary>
             Class which represents an configuration item.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#configurationItem">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ConfigurationItem.ScopeUri">
            <summary>
            Gets or sets the scope to get the configuration section for.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ConfigurationItem.Section">
            <summary>
            Gets or sets the requested configuration section.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ConfigurationParams">
             <summary>
             Class representing the parameters for the workspace/configuration request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#configurationParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ConfigurationParams.Items">
            <summary>
            Gets or sets the ConfigurationItems being requested.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentUriConverter">
            <summary>
            TODO: document.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.DocumentUriConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.DocumentUriConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.DocumentUriConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.JsonConverterCollectionUtilities">
            <summary>
            Class containing extension method to thread-safely manage <see cref="T:Newtonsoft.Json.JsonConverterCollection"/> operations.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.JsonConverterCollectionUtilities.ConvertersLock">
            <summary>
            Lock used for modifications to Converters collection.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.KindAttribute">
            <summary>
            Attribute that defines the expected value of the <see cref="P:Roslyn.LanguageServer.Protocol.KindAttribute.KindPropertyName"/> JSON property when a type is
            used in an <see cref="T:Roslyn.LanguageServer.Protocol.ISumType"/>.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.KindAttribute.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.KindAttribute"/> class.
             </summary>
             <param name="kind">The expected value of the <paramref name="kindPropertyName"/> JSON property.</param>
             <param name="kindPropertyName">The name of the property that is used to identify the contained type of the <see cref="T:Roslyn.LanguageServer.Protocol.ISumType"/>.</param>
             <remarks>Specifying this attribute doesn't automatically include the <paramref name="kindPropertyName"/> JSON property upon serialization.
            
             In the current implementation the <paramref name="kindPropertyName"/> JSON property is always considered required.</remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.KindAttribute.Kind">
            <summary>
            Gets the expected value of the <see cref="P:Roslyn.LanguageServer.Protocol.KindAttribute.KindPropertyName"/> JSON property.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.KindAttribute.KindPropertyName">
            <summary>
            Gets the name of the property that is used to identify the contained type of the <see cref="T:Roslyn.LanguageServer.Protocol.ISumType"/>.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ParameterInformationConverter">
            <summary>
            JsonConverter to correctly deserialize int arrays in the Label param of ParameterInformation.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ParameterInformationConverter.CanWrite">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ParameterInformationConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ParameterInformationConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ParameterInformationConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.StringEnumConverter`1">
            <summary>
            JsonConverter for serializing and deserializing string-based enums.
            </summary>
            <typeparam name="TStringEnumType">The actual type implementing <see cref="T:Roslyn.LanguageServer.Protocol.IStringEnum"/>.</typeparam>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.StringEnumConverter`1.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.StringEnumConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.StringEnumConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.StringEnumConverter`1.TypeConverter">
            <summary>
            Type converter from <see langword="string"/> to <typeparamref name="TStringEnumType"/>.
            This is required to support <see cref="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)"/>.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.StringEnumConverter`1.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.StringEnumConverter`1.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SumConverter">
            <summary>
            Converter to translate to and from SumTypes.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextDocumentSyncConverter">
            <summary>
            Converter which offers custom serialization for <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentSyncKind"/> enum to a <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentSyncOptions"/> object.
            </summary>
            <remarks>
            This is to support backwards compatibility for the protocol.
            </remarks>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.TextDocumentSyncConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.TextDocumentSyncConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Deserializes a json value to a <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentSyncOptions"/> object.
            </summary>
            <param name="reader">Reader from which to read json value.</param>
            <param name="objectType">Type of the json value.</param>
            <param name="existingValue">Existing value.</param>
            <param name="serializer">Default serializer.</param>
            <returns>A <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentSyncOptions"/> which matches the json value.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.TextDocumentSyncConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CreateFile">
             <summary>
             Class representing a create file operation.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#createFile">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CreateFile.Kind">
            <summary>
            Gets the kind value.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CreateFile.Uri">
            <summary>
            Gets or sets the resource to create.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CreateFile.Options">
            <summary>
            Gets or sets the additional options.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.CreateFileOptions">
             <summary>
             Class representing the options for a create file operation.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#createFileOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CreateFileOptions.Overwrite">
            <summary>
            Gets or sets a value indicating whether the creation should overwrite the file if it already exists. (Overwrite wins over ignoreIfExists).
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.CreateFileOptions.IgnoreIfExists">
            <summary>
            Gets or sets a value indicating whether the action should be ignored if the file already exists.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DefaultBehaviorPrepareRename">
             <summary>
             Class which represents a possible result value of the 'textDocument/prepareRename' request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_prepareRename">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DefaultBehaviorPrepareRename.DefaultBehavior">
            <summary>
            Gets or sets a value indicating whether the rename position is valid and the client should use its
            default behavior to compute the rename range.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DefinitionOptions">
             <summary>
             Class which represents workspace symbols capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#definitionOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DefinitionOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DeleteFile">
             <summary>
             Class representing a delete file operation.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#deleteFile">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DeleteFile.Kind">
            <summary>
            Gets the kind value.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DeleteFile.Uri">
            <summary>
            Gets or sets the file to delete.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DeleteFile.Options">
            <summary>
            Gets or sets the additional options.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DeleteFileOptions">
             <summary>
             Class representing the options for a create file operation.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#deleteFileOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DeleteFileOptions.Recursive">
            <summary>
            Gets or sets a value indicating whether the delete operation should be applied recursively if a folder is denoted. (Overwrite wins over ignoreIfNotExists).
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DeleteFileOptions.IgnoreIfNotExists">
            <summary>
            Gets or sets a value indicating whether the action should be ignored if the file doesn't exists.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.Diagnostic">
             <summary>
             Class which represents a source code diagnostic message.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#diagnostic">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Diagnostic.Range">
            <summary>
            Gets or sets the source code range.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Diagnostic.Severity">
            <summary>
            Gets or sets the diagnostic severity.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Diagnostic.Code">
            <summary>
            Gets or sets the diagnostic's code, which usually appear in the user interface.
            </summary>
            <remarks>
            The value can be an <see cref="T:System.Int32"/>, <see cref="T:System.String"/>.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Diagnostic.CodeDescription">
            <summary>
            Gets or sets an optional value that describes the error code.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Diagnostic.Source">
            <summary>
            Gets or sets a human-readable string describing the source of this
            diagnostic, e.g. 'typescript' or 'super lint'. It usually appears in the user interface.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Diagnostic.Message">
            <summary>
            Gets or sets the diagnostic's message.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Diagnostic.Tags">
            <summary>
            Gets or sets the diagnostic's tags.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Diagnostic.RelatedInformation">
            <summary>
            Gets or sets the diagnostic related information
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Diagnostic.Equals(Roslyn.LanguageServer.Protocol.Diagnostic)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Diagnostic.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Diagnostic.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DiagnosticOptions">
             <summary>
             Server capabilities for pull diagnostics.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DiagnosticOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DiagnosticOptions.Identifier">
            <summary>
            Gets or sets the identifier in which the diagnostics are bucketed by the client.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DiagnosticOptions.InterFileDependencies">
            <summary>
            Gets or sets a value indicating whether the language has inter file dependencies.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DiagnosticOptions.WorkspaceDiagnostics">
            <summary>
            Gets or sets a value indicating whether the server provides support for workspace diagnostics as well.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DiagnosticRegistrationOptions">
             <summary>
             Diagnostic registration options.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticRegistrationOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DiagnosticRegistrationOptions.DocumentSelector">
            <summary>
            Gets or sets the document filters for this registration option.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DiagnosticRegistrationOptions.Id">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DiagnosticRelatedInformation">
             <summary>
             Class which represents a related message and source code location for a diagnostic.
             This should be used to point to code locations that cause or are related to
             a diagnostics, e.g when duplicating a symbol in a scope.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticRelatedInformation">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DiagnosticRelatedInformation.Location">
            <summary>
            Gets or sets the location for the related information.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DiagnosticRelatedInformation.Message">
            <summary>
            Gets or sets the message for the related information.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DiagnosticServerCancellationData">
             <summary>
             Class representing the cancellation data returned from a diagnostic request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticServerCancellationData">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DiagnosticServerCancellationData.RetriggerRequest">
            <summary>
            Gets or sets a value indicating whether the client should re-trigger the request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DiagnosticSetting">
             <summary>
             Client settings for pull diagnostics.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DiagnosticSetting.RelatedDocumentSupport">
            <summary>
            Gets or sets a value indicating whether the client supports related documents for document diagnostic pulls.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DiagnosticSeverity">
             <summary>
             Diagnostic severity enum.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#diagnosticSeverity">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.DiagnosticSeverity.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.DiagnosticSeverity.Warning">
            <summary>
            Warning.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.DiagnosticSeverity.Information">
            <summary>
            Information.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.DiagnosticSeverity.Hint">
            <summary>
            Hint.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DiagnosticTag">
             <summary>
             Diagnostic tag enum.
             Additional metadata about the type of a diagnostic
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#diagnosticTag">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.DiagnosticTag.Unnecessary">
            <summary>
            Unused or unnecessary code.
            Diagnostics with this tag are rendered faded out.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.DiagnosticTag.Deprecated">
            <summary>
            Deprecated or obsolete code.
            Clients are allowed to rendered diagnostics with this tag strike through.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DiagnosticWorkspaceSetting">
             <summary>
             Class representing the workspace diagnostic client capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticWorkspaceClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DiagnosticWorkspaceSetting.RefreshSupport">
            <summary>
            Gets or sets a value indicating whether the client supports a refresh request sent from the server to the client.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DidChangeConfigurationParams">
             <summary>
             Class which represents the parameter sent with workspace/didChangeConfiguration requests.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#didChangeConfigurationParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DidChangeConfigurationParams.Settings">
            <summary>
            Gets or sets the settings that are applicable to the language server.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DidChangeTextDocumentParams">
             <summary>
             Class which represents the parameter that is sent with textDocument/didChange message.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#didChangeTextDocumentParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DidChangeTextDocumentParams.TextDocument">
            <summary>
            Gets or sets the document that changed.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DidChangeTextDocumentParams.ContentChanges">
            <summary>
            Gets or sets the content changes.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DidChangeWatchedFilesParams">
             <summary>
             Class which represents the parameter that is sent with workspace/didChangeWatchedFiles message.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#didChangeWatchedFilesParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DidChangeWatchedFilesParams.Changes">
            <summary>
            Gets or sets of the collection of file change events.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DidCloseTextDocumentParams">
             <summary>
             Class which represents the parameter that is sent with textDocument/didClose message.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#didCloseTextDocumentParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DidCloseTextDocumentParams.TextDocument">
            <summary>
            Gets or sets the text document identifier.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DidOpenTextDocumentParams">
             <summary>
             Class which represents the parameter that is sent with textDocument/didOpen message.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#didOpenTextDocumentParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DidOpenTextDocumentParams.TextDocument">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentItem"/> which represents the text document that was opened.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DidSaveTextDocumentParams">
             <summary>
             Class which represents the parameter that is sent with a textDocument/didSave message.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#didSaveTextDocumentParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DidSaveTextDocumentParams.TextDocument">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier"/> which represents the text document that was saved.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DidSaveTextDocumentParams.Text">
            <summary>
            Gets or sets the <see cref="T:System.String"/> which represents the content of the text document when it was saved.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentColorOptions">
             <summary>
             Class which represents workspace symbols capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentColorOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentColorOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentColorParams">
             <summary>
             Class representing the parameters sent for a textDocument/documentColor request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentColorParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentColorParams.TextDocument">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier"/> to provide links for.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentDiagnosticParams">
             <summary>
             Class representing the document diagnostic request parameters
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#documentDiagnosticParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentDiagnosticParams.PartialResultToken">
            <summary>
            Gets or sets the value of the Progress instance.
            </summary>
            <remarks>
            Note that the first literal send needs to be either the <see cref="T:Roslyn.LanguageServer.Protocol.RelatedUnchangedDocumentDiagnosticReport"/> or <see cref="T:Roslyn.LanguageServer.Protocol.RelatedUnchangedDocumentDiagnosticReport"/>
            followed by n <see cref="T:Roslyn.LanguageServer.Protocol.DocumentDiagnosticReportPartialResult"/> literals.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentDiagnosticParams.TextDocument">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier"/> to provide diagnostics for.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentDiagnosticParams.Identifier">
            <summary>
            Gets or sets the identifier for which the client is requesting diagnostics for.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentDiagnosticParams.PreviousResultId">
            <summary>
            Gets or sets the result id of a previous diagnostics response if provided.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentDiagnosticReportKind">
             <summary>
             Value representing the kind of the document diagnostic report.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#documentDiagnosticReportKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.DocumentDiagnosticReportKind.Full">
            <summary>
            Kind representing a diagnostic report with a full set of problems.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.DocumentDiagnosticReportKind.Unchanged">
            <summary>
            Kind representing a diagnostic report indicating that the last returned report is still accurate.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentDiagnosticReportPartialResult">
             <summary>
             Class representing a partial document diagnostic report for a set of related documents.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#documentDiagnosticReportPartialResult">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentDiagnosticReportPartialResult.RelatedDocuments">
            <summary>
            Gets or sets the map of related document diagnostic reports.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentFilter">
             <summary>
             Class representing a filter over certain types of documents
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentFilter">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentFilter.Language">
            <summary>
            Gets or sets a language id for the filter (e.g. 'typescript').
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentFilter.Scheme">
            <summary>
            Gets or sets a Uri scheme (e.g. 'file' or 'untitled').
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentFilter.Pattern">
            <summary>
            Gets or sets a glob pattern (e.g. '*.cs').
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentFormattingOptions">
             <summary>
             Class representing the document formatting options for server capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentFormattingOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentFormattingOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentFormattingParams">
             <summary>
             Class which represents the parameter that is sent with textDocument/formatting message.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentFormattingParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentFormattingParams.TextDocument">
            <summary>
            Gets or sets the identifier for the text document to be formatted.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentFormattingParams.Options">
            <summary>
            Gets or sets the formatting options.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentHighlight">
             <summary>
             Class representing the response from a textDocument/documentHighlight request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentHighlight">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentHighlight.Range">
            <summary>
            Gets or sets the range that the highlight applies to.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentHighlight.Kind">
            <summary>
            Gets or sets the kind of highlight.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentHighlightKind">
             <summary>
             Enum representing the different types of document highlight.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentHighlightKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.DocumentHighlightKind.Text">
            <summary>
            A textual occurance.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.DocumentHighlightKind.Read">
            <summary>
            Read access of a symbol.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.DocumentHighlightKind.Write">
            <summary>
            Write access of a symbol.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentHighlightOptions">
             <summary>
             Class which represents workspace symbols capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentHighlightOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentHighlightOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentHighlightParams">
             <summary>
             Class representing the parameters sent for a textDocument/documentHighlight request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentHighlightParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentHighlightParams.PartialResultToken">
            <summary>
            Gets or sets the value of the PartialResultToken instance.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentLink">
             <summary>
             Class representing the response of a textDocument/documentLink request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentLink">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentLink.Range">
            <summary>
            Gets or sets the range the link applies to.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentLink.Target">
            <summary>
            Gets or sets the uri that the link points to.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentLinkOptions">
             <summary>
             Class representing the document link options for server capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentLinkOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentLinkOptions.ResolveProvider">
            <summary>
            Gets or sets a value indicating whether or not the server supports resolve providers.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentLinkOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentLinkParams">
             <summary>
             Class representing the parameters sent for a textDocument/documentLink request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentLinkParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentLinkParams.TextDocument">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier"/> to provide links for.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentOnTypeFormattingOptions">
             <summary>
             Class representing the options for on type formatting.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentOnTypeFormattingOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentOnTypeFormattingOptions.FirstTriggerCharacter">
            <summary>
            Gets or sets the first trigger character.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentOnTypeFormattingOptions.MoreTriggerCharacter">
            <summary>
            Gets or sets additional trigger characters.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentOnTypeFormattingParams">
             <summary>
             Class representing the parameters sent for a textDocument/onTypeFormatting request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentOnTypeFormattingParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentOnTypeFormattingParams.Character">
            <summary>
            Gets or sets the character that was typed.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentOnTypeFormattingParams.Options">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.FormattingOptions"/> for the request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentRangeFormattingOptions">
             <summary>
             Class representing the document range formatting options for server capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentRangeFormattingOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentRangeFormattingOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentRangeFormattingParams">
             <summary>
             Class which represents the parameter that is sent with textDocument/rangeFormatting message.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentRangeFormattingParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentRangeFormattingParams.TextDocument">
            <summary>
            Gets or sets the identifier for the text document to be formatted.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentRangeFormattingParams.Range">
            <summary>
            Gets or sets the selection range to be formatted.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentRangeFormattingParams.Options">
            <summary>
            Gets or sets the formatting options.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentSymbol">
             <summary>
             Represents programming constructs like variables, classes, interfaces etc. that appear in a document. Document symbols can be
             hierarchical and they have two ranges: one that encloses its definition and one that points to its most interesting range,
             e.g. the range of an identifier.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentSymbol">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentSymbol.Name">
            <summary>
            Gets or sets the name of this symbol.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentSymbol.Detail">
            <summary>
            Gets or sets more detail for this symbol, e.g the signature of a function.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentSymbol.Kind">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.SymbolKind" /> of this symbol.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentSymbol.Deprecated">
            <summary>
            Gets or sets a value indicating whether this symbol is deprecated.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentSymbol.Range">
            <summary>
            Gets or sets the range enclosing this symbol not including leading/trailing whitespace but everything else
            like comments.This information is typically used to determine if the clients cursor is
            inside the symbol to reveal in the symbol in the UI.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentSymbol.SelectionRange">
            <summary>
            Gets or sets the range that should be selected and revealed when this symbol is being picked, e.g the name of a function.
            Must be contained by the `range`.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentSymbol.Children">
            <summary>
            Gets or sets the children of this symbol, e.g. properties of a class.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentSymbolOptions">
             <summary>
             Class which represents workspace symbols capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentSymbolOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentSymbolOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentSymbolParams">
             <summary>
             Class which represents the parameter sent with textDocument/documentSymbol requests.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentSymbolParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentSymbolParams.TextDocument">
            <summary>
            Gets or sets the text document.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DocumentSymbolSetting">
             <summary>
             Class representing the initialization setting for document symbols.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentSymbolClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentSymbolSetting.SymbolKind">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.SymbolKindSetting"/> capabilities.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DocumentSymbolSetting.HierarchicalDocumentSymbolSupport">
            <summary>
            Gets or sets a value indicating whether the document has hierarchical symbol support.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DynamicRegistrationSetting">
            <summary>
            Class which represents a setting that can be dynamically registered.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.DynamicRegistrationSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.DynamicRegistrationSetting"/> class.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.DynamicRegistrationSetting.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.DynamicRegistrationSetting"/> class.
            </summary>
            <param name="value">Value indicating whether the setting can be dynamically registered.</param>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DynamicRegistrationSetting.DynamicRegistration">
            <summary>
            Gets or sets a value indicating whether setting can be dynamically registered.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ExecuteCommandOptions">
             <summary>
             Class representing the options for execute command support.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#executeCommandOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ExecuteCommandOptions.Commands">
            <summary>
            Gets or sets the commands that are to be executed on the server.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ExecuteCommandOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ExecuteCommandParams">
             <summary>
             Class representing the parameters sent from client to server for the workspace/executeCommand request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#executeCommandParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ExecuteCommandParams.Command">
            <summary>
            Gets or sets the command identifier associated with the command handler.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ExecuteCommandParams.Arguments">
            <summary>
            Gets or sets the arguments that the command should be invoked with.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSExtensionConverter`2">
            <summary>
            Converter used to serialize and deserialize classes extending types defined in the
            Microsoft.VisualStudio.LanguageServer.Protocol package.
            </summary>
            <typeparam name="TBase">Base class that is specified in the
            Microsoft.VisualStudio.LanguageServer.Protocol package.</typeparam>
            <typeparam name="TExtension">Extension class that extends TBase.</typeparam>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSExtensionConverter`2.CanWrite">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSExtensionConverter`2.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSExtensionConverter`2.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSExtensionConverter`2.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSExtensionUtilities">
            <summary>
            Utility functions to simplify working with the Visual Studio extensions to the Language Server Protocol.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSExtensionUtilities.AddVSExtensionConverters(Newtonsoft.Json.JsonSerializer)">
             <summary>
             Adds <see cref="T:Roslyn.LanguageServer.Protocol.VSExtensionConverter`2"/> to the <paramref name="serializer"/> allowing to
             deserialize the JSON stream into objects which include Visual Studio specific extensions.
            
             For example, it allows to correctly deserialize the <see cref="P:Roslyn.LanguageServer.Protocol.CodeAction.Diagnostics"/> entries of a
             'codeAction/resolve' request into <see cref="T:Roslyn.LanguageServer.Protocol.VSDiagnostic"/> objects even if <see cref="P:Roslyn.LanguageServer.Protocol.CodeAction.Diagnostics"/>
             is defined as an array of <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/>.
             </summary>
             <remarks>
             If <paramref name="serializer"/> is used in parallel to the execution of this method,
             its access needs to be synchronized with this method call, to guarantee that the
             <see cref="P:Newtonsoft.Json.JsonSerializer.Converters"/> collection is not modified when <paramref name="serializer"/> is in use.
             </remarks>
             <param name="serializer">Instance of <see cref="T:Newtonsoft.Json.JsonSerializer"/> to be configured.</param>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSDiagnostic">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSDiagnostic"/> extends <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/> providing additional properties used by Visual Studio.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSDiagnostic.Projects">
            <summary>
            Gets or sets the project and context (e.g. Win32, MacOS, etc.) in which the diagnostic was generated.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSDiagnostic.ExpandedMessage">
            <summary>
            Gets or sets an expanded description of the diagnostic.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSDiagnostic.ToolTip">
            <summary>
            Gets or sets a message shown when the user hovers over an error. If <see langword="null" />, then <see cref="P:Roslyn.LanguageServer.Protocol.Diagnostic.Message"/>
            is used (use <see cref="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.SuppressEditorToolTip"/> to prevent a tool tip from being shown).
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSDiagnostic.Identifier">
            <summary>
            Gets or sets a non-human-readable identier allowing consolidation of multiple equivalent diagnostics
            (e.g. the same syntax error from builds targeting different platforms).
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSDiagnostic.DiagnosticType">
            <summary>
            Gets or sets a string describing the diagnostic types (e.g. Security, Performance, Style, etc.).
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSDiagnostic.DiagnosticRank">
            <summary>
            Gets or sets a rank associated with this diagnostic, used for the default sort.
            <see cref="F:Roslyn.LanguageServer.Protocol.VSDiagnosticRank.Default"/> will be used if no rank is specified.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSDiagnostic.OutputId">
            <summary>
            Gets or sets an ID used to associate this diagnostic with a corresponding line in the output window.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSDiagnosticProjectInformation">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSDiagnosticProjectInformation"/> represents the project and context in which the <see cref="T:Roslyn.LanguageServer.Protocol.VSDiagnostic"/> is generated.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSDiagnosticProjectInformation.ProjectName">
            <summary>
            Gets or sets a human-readable identifier for the project in which the diagnostic was generated.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSDiagnosticProjectInformation.Context">
            <summary>
            Gets or sets a human-readable identifier for the build context (e.g. Win32 or MacOS)
            in which the diagnostic was generated.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSDiagnosticProjectInformation.ProjectIdentifier">
            <summary>
            Gets or sets the unique identifier for the project in which the diagnostic was generated.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSDiagnosticRank">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSDiagnosticRank"/> represents the rank of a <see cref="T:Roslyn.LanguageServer.Protocol.VSDiagnostic"/> object.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticRank.Highest">
            <summary>
            Highest priority.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticRank.High">
            <summary>
            High priority.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticRank.Default">
            <summary>
            Default priority.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticRank.Low">
            <summary>
            Low priority.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticRank.Lowest">
            <summary>
            Lowest priority.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSDiagnosticTags">
            <summary>
            Additional <see cref="T:Roslyn.LanguageServer.Protocol.DiagnosticTag"/> values that are specific to Visual Studio.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.BuildError">
            <summary>
            A <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/> entry generated by the build.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.IntellisenseError">
            <summary>
            A <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/> entry generated by Intellisense.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.PotentialDuplicate">
             <summary>
             A <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/> entry that could be generated from both builds
             and Intellisense.
            
             <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/> entries tagged with <see cref="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.PotentialDuplicate"/> will be hidden
             in the error list if the error list is displaying build and intellisense
             errors.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.HiddenInErrorList">
            <summary>
            A <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/> entry is never displayed in the error list.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.VisibleInErrorList">
            <summary>
            The <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/> entry is always displayed in the error list.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.HiddenInEditor">
            <summary>
            The <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/> entry is never displayed in the editor.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.SuppressEditorToolTip">
            <summary>
            No tooltip is shown for the <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/> entry in the editor.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.EditAndContinueError">
            <summary>
            The <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/> entry is represented in the Editor as an Edit
            and Continue error.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.TaskItem">
            <summary>
            A <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic"/> entry is represented in the Editor as a Task List item in the TODO list.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSGetProjectContextsParams">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSGetProjectContextsParams" /> represents the parameter that is sent
            with the 'textDocument/_vs_getProjectContexts' request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSGetProjectContextsParams.TextDocument">
            <summary>
            Gets or sets the document for which project contexts are queried.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSImageId">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSImageId"/> represents the unique identifier for a Visual Studio image asset.
            The identified is composed by a <see cref="P:Roslyn.LanguageServer.Protocol.VSImageId.Guid" /> and an integer.
            A list of valid image ids can be retrieved from the <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualstudio.imaging.knownmonikers">KnownMonikers class</see>
            from the Visual Studio SDK.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSImageId.Guid">
            <summary>
            Gets or sets the <see cref="P:Roslyn.LanguageServer.Protocol.VSImageId.Guid" /> component of the unique identifier.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSImageId.Id">
            <summary>
            Gets or sets the integer component of the unique identifier.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSImageId.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSImageId.Equals(Roslyn.LanguageServer.Protocol.VSImageId)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSImageId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSLocation">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSLocation"/> extends <see cref="T:Roslyn.LanguageServer.Protocol.Location"/> providing additional properties used by Visual Studio.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSLocation.ProjectName">
            <summary>
            Gets or sets the project name to be displayed to user.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSLocation.DisplayPath">
            <summary>
            Gets or sets the text value for the display path.
            In case the actual path on disk would be confusing for users, this should be a friendly display name.
            This doesn't have to correspond to a real file path, but must be parsable by the <see cref="M:System.IO.Path.GetFileName(System.String)" /> method.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSMethods">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSMethods"/> contains the string values for all Language Server Protocol Visual Studio specific methods.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSMethods.GetProjectContextsName">
            <summary>
            Method name for 'textDocument/_vs_getProjectContexts'.
            The 'textDocument/_vs_getProjectContexts' request is sent from the client to the server to query
            the list of project context associated with a document.
            This method has a parameter of type <see cref="T:Roslyn.LanguageServer.Protocol.VSGetProjectContextsParams" /> and a return value of type
            <see cref="T:Roslyn.LanguageServer.Protocol.VSProjectContextList" />.
            In order to enable the client to send the 'textDocument/_vs_getProjectContexts' requests, the server must
            set the <see cref="P:Roslyn.LanguageServer.Protocol.VSServerCapabilities.ProjectContextProvider"/> property.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSMethods.GetProjectContexts">
            <summary>
            Strongly typed request object for 'textDocument/_vs_getProjectContexts'.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSProjectContext">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSProjectContext"/> represents a project context.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSProjectContext.Label">
            <summary>
            Gets or sets the label for the project context.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSProjectContext.Id">
            <summary>
            Gets or sets the unique identifier of the project context.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSProjectContext.Kind">
            <summary>
            Gets or sets the context kind of the project context which is used to determine its associated icon.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSProjectContext.Equals(Roslyn.LanguageServer.Protocol.VSProjectContext)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSProjectContext.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSProjectContext.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSProjectContextList">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSProjectContextList" /> represents the response to the
            'textDocument/_vs_getProjectContexts' request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSProjectContextList.ProjectContexts">
            <summary>
            Gets or sets the document contexts associated with a text document.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSProjectContextList.DefaultIndex">
            <summary>
            Gets or sets the index of the default entry of the <see cref="T:Roslyn.LanguageServer.Protocol.VSProjectContext" /> array.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSProjectKind">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSProjectKind" /> represents the various kinds of contexts.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSProjectKind.CPlusPlus">
            <summary>
            C++ project.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSProjectKind.CSharp">
            <summary>
            C# project.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSProjectKind.VisualBasic">
            <summary>
            Visual Basic project.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSServerCapabilities">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSServerCapabilities"/> extends <see cref="T:Roslyn.LanguageServer.Protocol.ServerCapabilities"/> allowing to provide
            additional capabilities supported by Visual Studio.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSServerCapabilities.ProjectContextProvider">
            <summary>
            Gets or sets a value indicating whether the server supports the
            'textDocument/_vs_getProjectContexts' request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSSymbolInformation">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSSymbolInformation"/> extends <see cref="T:Roslyn.LanguageServer.Protocol.SymbolInformation"/> providing additional properties used by Visual Studio.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSSymbolInformation.Icon">
            <summary>
            Gets or sets the icon associated with the symbol. If specified, this icon is used instead of <see cref="T:Roslyn.LanguageServer.Protocol.SymbolKind" />.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSSymbolInformation.Description">
            <summary>
            Gets or sets the description of the symbol.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSSymbolInformation.HintText">
            <summary>
            Gets or sets the hint text for the symbol.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSTextDocumentIdentifier">
            <summary>
            <see cref="T:Roslyn.LanguageServer.Protocol.VSTextDocumentIdentifier"/> extends <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier"/> providing additional properties used by Visual Studio.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSTextDocumentIdentifier.ProjectContext">
            <summary>
            Gets or sets the project context of the text document.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSTextDocumentIdentifier.Equals(Roslyn.LanguageServer.Protocol.VSTextDocumentIdentifier)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSTextDocumentIdentifier.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSTextDocumentIdentifier.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSTextDocumentIdentifier.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.FileChangeType">
             <summary>
             File event type enum.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#fileChangeType">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.FileChangeType.Created">
            <summary>
            File was created.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.FileChangeType.Changed">
            <summary>
            File was changed.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.FileChangeType.Deleted">
            <summary>
            File was deleted.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.FileEvent">
             <summary>
             Class which represents a file change event.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#fileEvent">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FileEvent.Uri">
            <summary>
            Gets or sets the URI of the file.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FileEvent.FileChangeType">
            <summary>
            Gets or sets the file change type.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.FoldingRange">
             <summary>
             Class representing a folding range in a document.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#foldingRange">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRange.StartLine">
            <summary>
            Gets or sets the start line value.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRange.StartCharacter">
            <summary>
            Gets or sets the start character value.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRange.EndLine">
            <summary>
            Gets or sets the end line value.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRange.EndCharacter">
            <summary>
            Gets or sets the end character value.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRange.Kind">
            <summary>
            Gets or sets the folding range kind.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRange.CollapsedText">
            <summary>
            Gets or sets the collapsedText.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.FoldingRangeKind">
             <summary>
             Value representing various code action kinds.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#foldingRangeKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.FoldingRangeKind.#ctor(System.String)">
             <summary>
             Value representing various code action kinds.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#foldingRangeKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.FoldingRangeKind.Comment">
            <summary>
            Comment folding range.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.FoldingRangeKind.Imports">
            <summary>
            Imports folding range.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.FoldingRangeKind.Region">
            <summary>
            Region folding range.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.FoldingRangeOptions">
             <summary>
             Class representing the folding range provider options for initialization.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#foldingRangeOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRangeOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.FoldingRangeParams">
             <summary>
             Class representing the folding range request parameter.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#foldingRangeParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRangeParams.TextDocument">
            <summary>
            Gets or sets the text document associated with the folding range request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.FoldingRangeSetting">
             <summary>
             Class representing the folding range setting for initialization.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#foldingRangeClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRangeSetting.RangeLimit">
            <summary>
            Gets or sets the range limit for folding ranges.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRangeSetting.LineFoldingOnly">
            <summary>
            Gets or sets a value indicating whether if client only supports entire line folding only.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRangeSetting.FoldingRange">
            <summary>
            Gets or sets a value indicating the specific options for the folding range.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.FoldingRangeSettingOptions">
             <summary>
             Class representing the specific options for the folding range.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#foldingRangeClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FoldingRangeSettingOptions.CollapsedText">
            <summary>
            Gets or sets a value indicating whether if client supports collapsedText on folding ranges.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.FormattingOptions">
             <summary>
             Class which represents formatting options.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#formattingOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FormattingOptions.TabSize">
            <summary>
            Gets or sets the number of spaces to be inserted per tab.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FormattingOptions.InsertSpaces">
            <summary>
            Gets or sets a value indicating whether tabs should be spaces.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FormattingOptions.OtherOptions">
            <summary>
            Gets or sets the other potential formatting options.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.FullDocumentDiagnosticReport">
             <summary>
             Class representing a diagnostic report with a full set of problems.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#fullDocumentDiagnosticReport">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FullDocumentDiagnosticReport.Kind">
            <summary>
            Gets the kind of this report.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FullDocumentDiagnosticReport.ResultId">
            <summary>
            Gets or sets the optional result id.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.FullDocumentDiagnosticReport.Items">
            <summary>
            Gets or sets the diagnostics in this report.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.Hover">
             <summary>
             Class representing the data returned by a textDocument/hover request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#hover">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Hover.Contents">
            <summary>
            Gets or sets the content for the hover. Object can either be an array or a single object.
            If the object is an array the array can contain objects of type <see cref="T:Roslyn.LanguageServer.Protocol.MarkedString"/> and <see cref="T:System.String"/>.
            If the object is not an array it can be of type <see cref="T:Roslyn.LanguageServer.Protocol.MarkedString"/>, <see cref="T:System.String"/>, or <see cref="T:Roslyn.LanguageServer.Protocol.MarkupContent"/>.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Hover.Range">
            <summary>
            Gets or sets the range over which the hover applies.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.HoverOptions">
             <summary>
             Class which represents the server hover support.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#hoverOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.HoverOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.HoverSetting">
             <summary>
             Class which represents the initialization setting for hover.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#hoverClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.HoverSetting.ContentFormat">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.MarkupKind"/> values supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ImplementationOptions">
             <summary>
             Class which represents workspace symbols capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#implementationOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ImplementationOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InitializedParams">
             <summary>
             Class containing information sent with the 'initialized' notification.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#initialized">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InitializeError">
             <summary>
             Class representing the error type sent when the initialize request fails.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#initializeError">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InitializeError.Retry">
            <summary>
            Gets or sets a value indicating whether or not to retry.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InitializeErrorCode">
             <summary>
             Enum representing the possible reasons for an initialization error.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#initializeErrorCodes">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.InitializeErrorCode.UnknownProtocolVersion">
            <summary>
            Protocol version can't be handled by the server.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InitializeParams">
             <summary>
             Class which represents the parameter sent with an initialize method request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#initializeParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InitializeParams.ProcessId">
            <summary>
            Gets or sets the ID of the process which launched the language server.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InitializeParams.Locale">
             <summary>
             Gets or sets the locale the client is currently showing the user interface in.
             This must not necessarily be the locale of the operating system.
            
             Uses IETF language tags as the value's syntax.
             (See https://en.wikipedia.org/wiki/IETF_language_tag)
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InitializeParams.RootPath">
            <summary>
            Gets or sets the workspace root path.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InitializeParams.RootUri">
            <summary>
            Gets or sets the workspace root path.
            </summary>
            <remarks>
            This should be a string representation of an URI.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InitializeParams.InitializationOptions">
            <summary>
            Gets or sets the initialization options as specified by the client.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InitializeParams.Capabilities">
            <summary>
            Gets or sets the capabilities supported by the client.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InitializeParams.Trace">
            <summary>
            Gets or sets the initial trace setting.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InitializeResult">
             <summary>
             Class which represents the result returned by the initialize request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#initializeResult">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InitializeResult.Capabilities">
            <summary>
            Gets or sets the server capabilities.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InlayHint">
             <summary>
             A class representing inlay hints that appear next to parameters or types.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#inlayHint">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHint.Position">
            <summary>
            Gets or sets the position that the inlay hint applies to.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHint.Label">
            <summary>
            Gets or sets the label associated with this inlay hint.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHint.Kind">
            <summary>
            Gets or sets the InlayHintKind associated with this inlay hint.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHint.TextEdits">
            <summary>
            Gets or sets the TextEdits associated with this inlay hint.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHint.ToolTip">
            <summary>
            Gets or sets the tooltip of this inlay hint.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHint.PaddingLeft">
            <summary>
            Gets or sets the padding before this inlay hint.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHint.PaddingRight">
            <summary>
            Gets or sets the padding after this inlay hint.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHint.Data">
            <summary>
            Gets or sets the data that should be preserved between a textDocument/inlayHint request and a inlayHint/resolve request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InlayHintKind">
             <summary>
             Enum values for inlay hint kinds.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#inlayHintKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.InlayHintKind.Type">
            <summary>
            Type.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.InlayHintKind.Parameter">
            <summary>
            Parameter.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InlayHintLabelPart">
             <summary>
             A class representing inlay hint label parts.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#inlayHintLabelPart">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintLabelPart.Value">
            <summary>
            Gets or sets the value associated with this label part.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintLabelPart.ToolTip">
            <summary>
            Gets or sets the tooltip of this label part.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintLabelPart.Location">
            <summary>
            Gets or sets the location of this label part.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintLabelPart.Command">
            <summary>
            Gets or sets the command of this label part.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InlayHintOptions">
             <summary>
             Server capabilities for inlay hints.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#inlayHintOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintOptions.ResolveProvider">
            <summary>
            Gets or sets a value indicating whether or not the inlay hints support has a resolve provider.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InlayHintParams">
             <summary>
             Class representing the parameters sent from the client to the server for a textDocument/inlayHint request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#inlayHintParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintParams.TextDocument">
            <summary>
            Gets or sets the document identifier to fetch inlay hints results for.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintParams.Range">
            <summary>
            Gets or sets the range to fetch inlay hints results for.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InlayHintRegistrationOptions">
             <summary>
             Inlay hint registration options.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#inlayHintRegistrationOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintRegistrationOptions.DocumentSelector">
            <summary>
            Gets or sets the document filters for this registration option.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintRegistrationOptions.Id">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InlayHintResolveSupportSetting">
             <summary>
             Class representing settings for inlayHint/resolve support.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#inlayHintClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintResolveSupportSetting.Properties">
            <summary>
            Gets or sets a value indicating the properties that a client can resolve lazily.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InlayHintSetting">
             <summary>
             Class representing settings for inlay hint support.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#inlayHintClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintSetting.ResolveSupport">
            <summary>
            Gets or sets a value indicating whether the client supports
            resolving lazily on an inlay hint.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InlayHintWorkspaceSetting">
             <summary>
             Class representing the workspace inlay hint client capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#inlayHintWorkspaceClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InlayHintWorkspaceSetting.RefreshSupport">
            <summary>
            Gets or sets a value indicating whether the client supports a refresh request sent from the server to the client.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InsertReplaceEdit">
            <summary>
            A special text edit to provide an insert and a replace operation.
            
            See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#insertReplaceEdit">Language Server Protocol specification</see> for additional information.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InsertReplaceEdit.NewText">
            <summary>
            Gets or sets the string to be inserted.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InsertReplaceEdit.Insert">
            <summary>
            Gets or sets the range range if the insert is requested
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InsertReplaceEdit.Replace">
            <summary>
            Gets or sets the range range if the replace is requested
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InsertReplaceRange">
            <summary>
            Class which represents default range of InsertReplaceEdit for the entire completion list
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InsertReplaceRange.Insert">
            <summary>
            Gets or sets the insert range.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InsertReplaceRange.Replace">
            <summary>
            Gets or sets the replace edit range.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InsertTextFormat">
             <summary>
             Enum representing insert text format for completion items.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#insertTextFormat">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.InsertTextFormat.Plaintext">
            <summary>
            Completion item insertion is plaintext.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.InsertTextFormat.Snippet">
            <summary>
            Completion item insertion is snippet.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InsertTextMode">
             <summary>
             How whitespace and indentation is handled during completion item insertion.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#insertTextMode">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.InsertTextMode.AsIs">
            <summary>
            The insertion or replace strings is taken as it is.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.InsertTextMode.AdjustIndentation">
            <summary>
            The editor adjusts leading whitespace of new lines so that they match the indentation up to the cursor of the line for which the item is accepted.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.InsertTextModeSupportSetting">
             <summary>
             Class which represents initialization setting for the tag property on a completion item.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.InsertTextModeSupportSetting.ValueSet">
            <summary>
            Gets or sets a value indicating the client supports the `insertTextMode` property on a completion item to override the whitespace handling mode as defined by the client.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ClassifiedTextElementConverter">
            <summary>
            JsonConverter for serializing and deserializing <see cref="T:Roslyn.Text.Adornments.ClassifiedTextElement"/>.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.ClassifiedTextElementConverter.Instance">
            <summary>
            A reusable instance of the <see cref="T:Roslyn.LanguageServer.Protocol.ClassifiedTextElementConverter"/>.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ClassifiedTextElementConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ClassifiedTextElementConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ClassifiedTextElementConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ClassifiedTextRunConverter">
            <summary>
            JsonConverter for serializing and deserializing <see cref="T:Roslyn.Text.Adornments.ClassifiedTextRun"/>.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.ClassifiedTextRunConverter.Instance">
            <summary>
            A reusable instance of the <see cref="T:Roslyn.LanguageServer.Protocol.ClassifiedTextRunConverter"/>.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ClassifiedTextRunConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ClassifiedTextRunConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ClassifiedTextRunConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ContainerElementConverter">
            <summary>
            JsonConverter for serializing and deserializing <see cref="T:Roslyn.Text.Adornments.ContainerElement"/>.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.ContainerElementConverter.Instance">
            <summary>
            A reusable instance of the <see cref="T:Roslyn.LanguageServer.Protocol.ContainerElementConverter"/>.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ContainerElementConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ContainerElementConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ContainerElementConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.DropProgressConverter">
            <summary>
            Converter used to deserialize objects dropping any <see cref="T:System.IProgress`1"/> property.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.DropProgressConverter.CanWrite">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.DropProgressConverter.CreateSerializer">
            <summary>
            Static method to get a <see cref="T:Newtonsoft.Json.JsonSerializer"/> containing a <see cref="T:Roslyn.LanguageServer.Protocol.DropProgressConverter"/>.
            </summary>
            <returns><see cref="T:Newtonsoft.Json.JsonSerializer"/> object containing a <see cref="T:Roslyn.LanguageServer.Protocol.DropProgressConverter"/>.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.DropProgressConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.DropProgressConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.DropProgressConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ImageElementConverter">
            <summary>
            JsonConverter for serializing and deserializing <see cref="T:Roslyn.Text.Adornments.ImageElement"/>.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.ImageElementConverter.Instance">
            <summary>
            A reusable instance of the <see cref="T:Roslyn.LanguageServer.Protocol.ImageElementConverter"/>.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ImageElementConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ImageElementConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ImageElementConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ImageIdConverter">
            <summary>
            JsonConverter for serializing and deserializing <see cref="T:Roslyn.Core.Imaging.ImageId"/>.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.ImageIdConverter.Instance">
            <summary>
            A reusable instance of the <see cref="T:Roslyn.LanguageServer.Protocol.ImageIdConverter"/>.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ImageIdConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ImageIdConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ImageIdConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ObjectContentConverter">
             <summary>
             Object Content converter used to serialize and deserialize Text and Adornements from VS.
            
             This converts the following types:
             <list type="bullet">
             <item><description><see cref="T:Roslyn.Core.Imaging.ImageId"/></description></item>,
             <item><description><see cref="T:Roslyn.Text.Adornments.ImageElement"/></description></item>,
             <item><description><see cref="T:Roslyn.Text.Adornments.ContainerElement"/></description></item>,
             <item><description><see cref="T:Roslyn.Text.Adornments.ClassifiedTextElement"/></description></item>,
             <item><description><see cref="T:Roslyn.Text.Adornments.ClassifiedTextRun"/></description></item>.
             </list>
             Every other type is serialized as a string using the <see cref="M:System.Object.ToString"/> method.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.ObjectContentConverter.TypeProperty">
            <summary>
            The property name used to save the .NET Type name of the serialized object.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.ObjectContentConverter.Instance">
            <summary>
            A reusable instance of the <see cref="T:Roslyn.LanguageServer.Protocol.ObjectContentConverter"/>.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ObjectContentConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ObjectContentConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ObjectContentConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.RegexConverter">
            <summary>
            Similar to https://devdiv.visualstudio.com/DevDiv/_git/VS-Platform?path=/src/Productivity/TextMate/Core/LanguageConfiguration/Impl/FastRegexConverter.cs
            to allow us to only compile the regex option once.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalExtensionUtilities">
            <summary>
            Utilities to aid work with the LSP Extensions.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalExtensionUtilities.AddVSInternalExtensionConverters(Newtonsoft.Json.JsonSerializer)">
            <summary>
            Adds <see cref="T:Roslyn.LanguageServer.Protocol.VSExtensionConverter`2"/> necessary to deserialize
            JSON stream into objects which include VS-specific extensions.
            </summary>
            <remarks>
            If <paramref name="serializer"/> is used in parallel to execution of this method,
            its access needs to be synchronized with this method call, to guarantee that
            <see cref="P:Newtonsoft.Json.JsonSerializer.Converters"/> collection is not modified when <paramref name="serializer"/> in use.
            </remarks>
            <param name="serializer">Instance of <see cref="T:Newtonsoft.Json.JsonSerializer"/> which is guaranteed to not work in parallel to this method call.</param>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticKind">
            <summary>
            Value representing the kind of a diagnostic.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticKind.#ctor(System.String)">
            <summary>
            Value representing the kind of a diagnostic.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticKind.Task">
            <summary>
            Task list diagnostic kind.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticOptions">
            <summary>
            Server provided options for pull diagnostic requests.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticOptions.BuildOnlyDiagnosticIds">
             <summary>
             Gets or sets a list of id's used to identify diagnostics that may be coming
             from build systems instead of a language server.
            
             VS client will then use the information to do any merging logic in the Error List.
             Maps to <see cref="P:Roslyn.LanguageServer.Protocol.VSDiagnostic.Identifier"/>.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticOptions.DiagnosticKinds">
            <summary>
            Gets or sets a list of diagnostic kinds used to query diagnostics in each context.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticParams">
            <summary>
            Class representing a diagnostic pull request parameter used.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticParams.TextDocument">
            <summary>
            Gets or sets the document for which diagnostics are desired.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticParams.QueryingDiagnosticKind">
            <summary>
            Gets or sets a value indicating what kind of diagnostic this request is querying for.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticParams.PreviousResultId">
             <summary>
             Gets or sets the server-generated version number for the diagnostics.
             </summary>
             <remarks>
             <para>
             This is treated as a black box by the client: it is stored on the client
             for each textDocument and sent back to the server when requesting
             diagnostics. The server can use this result ID to avoid resending
             diagnostics that had previously been sent.</para>
            
             <para>Note that if a client does request diagnostics that haven’t changed, the
             language server should not reply with any diagnostics for that document.
             If the client requests diagnostics for a file that has been renamed or
             deleted, then the language service should respond with null for the
             diagnostics.
             Also, if a service is reporting multiple DiagnosticReports for the same
             document, then all reports are expected to have the same
             previousResultId.</para>
             </remarks>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticReport">
            <summary>
            Class representing a diagnostic pull request report.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticReport.ResultId">
            <summary>
            Gets or sets the server-generated version number for the diagnostics.
            This is treated as a black box by the client: it is stored on the client
            for each textDocument and sent back to the server when requesting
            diagnostics.The server can use this result ID to avoid resending
            diagnostics that had previously been sent.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticReport.Diagnostics">
            <summary>
            Gets or sets a (potentially incomplete) list of Diagnostics for the document.
            Subsequent DiagnosticReports for the same document will be appended.
            </summary>
            <remarks>
            Is null if no changes in the diagnostics. Is empty if there is no diagnostic.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticReport.Identifier">
             <summary>
             Gets or sets an identifier associated with all the diagnostics in this report.
            
             If the <see cref="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticReport.Identifier" /> property matches the supersedes property of another report,
             <see cref="T:Roslyn.LanguageServer.Protocol.Diagnostic" /> entries tagged with <see cref="F:Roslyn.LanguageServer.Protocol.VSDiagnosticTags.PotentialDuplicate" /> will
             be hidden in the editor.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticReport.Supersedes">
            <summary>
            Gets or sets an indicator of which diagnostic report is superseded by this report.
            </summary>
            <remarks>
            Diagnostics in a superseded report will be hidden if they have the PotentialDuplicate VSDiagnosticTag.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticReport.OutputKey">
            <summary>
            Gets or sets an optional key used to associate diagnostics with lines
            of text in the output window(diagnostics can have an additional
            outputId and the (outputKey, outputId) uniquely identify
            a line of text in the output window).
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDiagnosticReport.Version">
            <summary>
            Gets or sets the document version.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalDocumentDiagnosticsParams">
            <summary>
            Class representing a diagnostic pull request for a specific document.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentDiagnosticsParams.WorkDoneToken">
            <summary>
            Gets or sets an optional token that a server can use to report work done progress.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentDiagnosticsParams.PartialResultToken">
            <summary>
            Gets or sets an optional token that a server can use to report partial results (e.g. streaming) to the client.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceDiagnosticReport">
            <summary>
            Class representing a diagnostic pull request result for all documents.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceDiagnosticReport.TextDocument">
            <summary>
            Gets or sets the document for which diagnostics is returned.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceDiagnosticsParams">
            <summary>
            Class representing a diagnostic pull request for all documents.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceDiagnosticsParams.PreviousResults">
            <summary>
            Gets or sets the current state of the documents the client already has received.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceDiagnosticsParams.WorkDoneToken">
            <summary>
            Gets or sets an optional token that a server can use to report work done progress.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceDiagnosticsParams.PartialResultToken">
            <summary>
            Gets or sets an optional token that a server can use to report partial results (e.g. streaming) to the client.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceDiagnosticsParams.QueryingDiagnosticKind">
            <summary>
            Gets or sets a value indicating what kind of diagnostic this request is querying for.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.OptimizedVSCompletionList">
            <summary>
            A subclass of the VS LSP protocol extension <see cref="T:Roslyn.LanguageServer.Protocol.VSInternalCompletionList"/> that has a fast serialization path.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.OptimizedVSCompletionList.#ctor(Roslyn.LanguageServer.Protocol.VSInternalCompletionList)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.OptimizedVSCompletionList"/> class.
            </summary>
            <param name="completionList">The completion list to wrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.OptimizedVSCompletionList.#ctor(Roslyn.LanguageServer.Protocol.CompletionList)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.OptimizedVSCompletionList"/> class.
            </summary>
            <param name="completionList">The completion list to wrap.</param>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSFoldingRangeSetting">
            <summary>
            Class used to extend <see cref="T:Roslyn.LanguageServer.Protocol.FoldingRangeSetting" /> to add internal capabilities.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSFoldingRangeSetting.RefreshSupport">
            <summary>
            Gets or sets a value indicating whether if client only supports entire line folding only.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalClientCapabilities">
            <summary>
            Extension class for ClientCapabilities with fields specific to Visual Studio.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalClientCapabilities.SupportsVisualStudioExtensions">
            <summary>
            Gets or sets a value indicating whether client supports Visual Studio extensions.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalClientCapabilities.SupportedSnippetVersion">
            <summary>
            Gets or sets a value indicating what level of snippet support is available from Visual Studio Client.
            v1.0 refers to only default tab stop support i.e. support for $0 which manipualtes the cursor position.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalClientCapabilities.SupportsNotIncludingTextInTextDocumentDidOpen">
            <summary>
            Gets or sets a value indicating whether client supports omitting document text in textDocument/didOpen notifications.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalClientCapabilities.SupportsIconExtensions">
            <summary>
            Gets or sets a value indicating whether the client supports string based response kinds
            instead of enum based response kinds.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalClientCapabilities.SupportsDiagnosticRequests">
            <summary>
            Gets or sets a value indicating whether the client provides support for diagnostic pull requests.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalClipboardContent">
            <summary>
            Class which represents content to be sent to the clipboard.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalClipboardContent.MimeType">
            <summary>
            Gets or sets a string that describes clipboard format types, for example, "text/plain".
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalClipboardContent.Content">
            <summary>
            Gets or sets the content of the clipboard.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCodeAction">
            <summary>
            Class used to extend <see cref="T:Roslyn.LanguageServer.Protocol.CodeAction" /> to add the data field for codeAction/_ms_resolve support.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCodeAction.Group">
            <summary>
            Gets or sets the group this CodeAction belongs to.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCodeAction.Priority">
            <summary>
            Gets or sets the priority level of the code action.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCodeAction.ApplicableRange">
            <summary>
            Gets or sets the range of the span this action is applicable to.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCodeAction.Children">
            <summary>
            Gets or sets the children of this action.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCodeAction.TelemetryId">
            <summary>
            Gets or sets the telemetry id of this action.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCodeActionContext">
            <summary>
            Class representing the parameters sent from the client to the server for the textDocument/codeAction request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCodeActionContext.SelectionRange">
            <summary>
            Gets or sets the range of the current selection in the document for which the command was invoked.
            If there is no selection this would be a Zero-length range for the caret position.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroup">
            <summary>
            Enum which represents the various kinds of code actions.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroup.QuickFix">
            <summary>
            Code action is a quick fix.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroup.Refactor">
            <summary>
            Code action is a refactor.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroup.RefactorExtract">
            <summary>
            Code action is a refactor for extracting methods, functions, variables, etc.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroup.RefactorInline">
            <summary>
            Code action is a refactor for inlining methods, constants, etc.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroup.RefactorRewrite">
            <summary>
            Code action is a refactor for rewrite actions, such as making methods static.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroup.Source">
            <summary>
            Code action applies to the entire file.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroup.SourceOrganizeImports">
            <summary>
            Code actions is for organizing imports.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroupSetting">
            <summary>
            Class containing the set of code action default groups that are supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCodeActionGroupSetting.ValueSet">
            <summary>
            Gets or sets the code actions default group names the client supports.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCodeActionLiteralSetting">
            <summary>
            Class representing support for code action literals.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCodeActionLiteralSetting.CodeActionGroup">
            <summary>
            Gets or sets a value indicating what code action default groups are supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCommitCharacter">
            <summary>
            Extension class for CompletionItem with fields specific to Visual Studio functionalities.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCommitCharacter.Character">
            <summary>
            Gets or sets the commit character.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCommitCharacter.Insert">
            <summary>
            Gets or sets a value indicating whether the commit character should be inserted or not.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCompletionContext">
            <summary>
            Extension class for <see cref="T:Roslyn.LanguageServer.Protocol.CompletionContext"/> with properties specific to Visual Studio.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionContext.InvokeKind">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.CompletionTriggerKind"/> indicating how the completion was triggered.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCompletionInvokeKind">
            <summary>
            Provides value for <see cref="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionContext.InvokeKind"/> which specifies
            how completion was invoked.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalCompletionInvokeKind.Explicit">
            <summary>
            Completion was triggered by explicit user's gesture (e.g. Ctrl+Space, Ctr+J) or via API.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalCompletionInvokeKind.Typing">
            <summary>
            Completion was triggered by typing an identifier.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalCompletionInvokeKind.Deletion">
            <summary>
            Completion was triggered by deletion (e.g. Backspace or Delete keys).
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCompletionItem">
            <summary>
            Extension class for CompletionItem with fields specific to Visual Studio functionalities.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionItem.Icon">
            <summary>
            Gets or sets the icon to show for the completion item. In VS, this is more extensive than the completion kind.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionItem.Description">
            <summary>
            Gets or sets the description for a completion item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionItem.VsCommitCharacters">
            <summary>
            Gets or sets the set of characters that will commit completion when this <see cref="T:Roslyn.LanguageServer.Protocol.CompletionItem" /> is selected.
            Allows customization of commit behavior.
            If present, client will use this value instead of <see cref="P:Roslyn.LanguageServer.Protocol.CompletionOptions.AllCommitCharacters"/>.
            If absent, client will default to <see cref="P:Roslyn.LanguageServer.Protocol.CompletionOptions.AllCommitCharacters"/>.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionItem.VsResolveTextEditOnCommit">
            <summary>
            Gets or sets a value indicating whether the client should call <see cref="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentCompletionResolve"/> to
            get the value of the text edit to commit.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCompletionList">
            <summary>
            A subclass of the LSP protocol <see cref="T:Roslyn.LanguageServer.Protocol.CompletionList"/> that contains extensions specific to Visual Studio.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionList.SuggestionMode">
            <summary>
            Gets or sets a value indicating whether the completion list should use suggestion mode. In suggestion mode items are "soft-selected" by default.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionList.ContinueCharacters">
            <summary>
            Gets or sets the continue characters for the completion list.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionList.Data">
            <summary>
            Gets or sets the default <see cref="P:Roslyn.LanguageServer.Protocol.CompletionItem.Data"/> used for completion items.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionList.CommitCharacters">
            <summary>
            Gets or sets the default <see cref="P:Roslyn.LanguageServer.Protocol.CompletionItem.CommitCharacters"/> or <see cref="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionItem.VsCommitCharacters"/> used for completion items.
            </summary>
            <remarks>
            If set, overrides <see cref="P:Roslyn.LanguageServer.Protocol.CompletionOptions.AllCommitCharacters" />.
            </remarks>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCompletionListSetting">
            <summary>
            Class which represents initialization setting for completion list.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionListSetting.Data">
            <summary>
            Gets or sets a value indicating whether completion lists can have Data bags. These data bags get propagated
            onto underlying completion items unless they have their own data bags.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionListSetting.CommitCharacters">
            <summary>
            Gets or sets a value indicating whether completion lists can have VSCommitCharacters. These commit characters get propagated
            onto underlying valid completion items unless they have their own commit characters.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalCompletionSetting">
            <summary>
            Class which represents initialization setting for VS completion.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalCompletionSetting.CompletionList">
            <summary>
            Gets or sets completion list setting.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterClass">
            <summary>
            Class representing a unicode character class for completion continuation.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterClass.Type">
            <summary>
            Gets the type value.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterClass.UnicodeClass">
            <summary>
            Gets or sets the unicode class.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterRange">
            <summary>
            Class representing range of characters for completion continuation.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterRange.Type">
            <summary>
            Gets the type value.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterRange.Start">
            <summary>
            Gets or sets the first completion character of the range.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterRange.End">
            <summary>
            Gets or sets the last completion character of the range.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterSingle">
            <summary>
            Class representing single continue character for completion.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterSingle.Type">
            <summary>
            Gets the type value.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalContinueCharacterSingle.Character">
            <summary>
            Gets or sets the completion character.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertOptions">
            <summary>
            Class representing the options for on auto insert.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertOptions.TriggerCharacters">
            <summary>
            Gets or sets trigger characters for on auto insert.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertParams">
            <summary>
            Class representing the parameters sent for a textDocument/_ms_onAutoInsert request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertParams.TextDocument">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier"/> representing the document to format.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertParams.Position">
            <summary>
            Gets or sets the <see cref="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertParams.Position"/> at which the request was sent.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertParams.Character">
            <summary>
            Gets or sets the character that was typed.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertParams.Options">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.FormattingOptions"/> for the request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertResponseItem">
            <summary>
            Class representing the response of an AutoInsert response.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertResponseItem.TextEditFormat">
            <summary>
            Gets or sets the insert text format of the primary text edit. <see cref="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertResponseItem.TextEditFormat"/> for supported formats.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentOnAutoInsertResponseItem.TextEdit">
            <summary>
            Gets or sets the text edit.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalDocumentSpellCheckableParams">
            <summary>
            Parameter for tD/_vs_spellCheckableRanges.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalDocumentSpellCheckableParams.PartialResultToken">
            <summary>
            Gets or sets an optional token that a server can use to report partial results (e.g. streaming) to the client.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalExecuteCommandClientCapabilities">
            <summary>
            Class representing settings for well-known Visual Studio's code action command.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalExecuteCommandClientCapabilities.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.VSInternalExecuteCommandClientCapabilities"/> class.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalExecuteCommandClientCapabilities.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.VSInternalExecuteCommandClientCapabilities"/> class.
            </summary>
            <param name="value">Value indicating whether the setting can be dynamically registered.</param>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalExecuteCommandClientCapabilities.SupportedCommands">
            <summary>
            Gets or sets a set of well-known commands name the given VS-LSP client supports.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalHover">
            <summary>
            Extension to Hover which adds additional data for colorization.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalHover.RawContent">
            <summary>
            Gets or sets the value which represents the hover content as a tree
            of objects from the Microsoft.VisualStudio.Text.Adornments namespace,
            such as ContainerElements, ClassifiedTextElements and ClassifiedTextRuns.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalIconMapping">
            <summary>
            Response class when asking server to resolve the rendering information of a string kind.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalIconMapping.Images">
            <summary>
            Gets or sets the ImageElements for a certain kind.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalIconMapping.Tags">
            <summary>
            Gets or sets the tags for a certain kind. To be used in the absence of ImageIds.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalIconMapping.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalIconMapping.Equals(Roslyn.LanguageServer.Protocol.VSInternalIconMapping)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalIconMapping.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionContext">
            <summary>
            Context for inline completion request.
            See https://github.com/microsoft/vscode/blob/075ba020e8493f40dba89891b1a08453f2c067e9/src/vscode-dts/vscode.proposed.inlineCompletions.d.ts#L27.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionContext.TriggerKind">
            <summary>
            Gets or sets how completion was triggered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionContext.SelectedCompletionInfo">
             <summary>
             Gets or sets information about the currently selected item in the autocomplete widget, if visible.
            
             See https://github.com/microsoft/vscode/blob/075ba020e8493f40dba89891b1a08453f2c067e9/src/vscode-dts/vscode.proposed.inlineCompletions.d.ts#L45.
             </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionItem">
             <summary>
             A single inline completion item response.
            
             See https://github.com/microsoft/vscode/blob/075ba020e8493f40dba89891b1a08453f2c067e9/src/vscode-dts/vscode.proposed.inlineCompletions.d.ts#L78.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionItem.Text">
            <summary>
            Gets or sets the text to replace the range with.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionItem.Range">
             <summary>
             Gets or sets the range to replace.
            
             See https://github.com/microsoft/vscode/blob/075ba020e8493f40dba89891b1a08453f2c067e9/src/vscode-dts/vscode.proposed.inlineCompletions.d.ts#L94.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionItem.Command">
            <summary>
            Gets or sets the command that is executed after inserting this completion item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionItem.TextFormat">
            <summary>
            Gets or sets the format of the insert text.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionList">
             <summary>
             Response for an inline completions request.
            
             See https://github.com/microsoft/vscode/blob/075ba020e8493f40dba89891b1a08453f2c067e9/src/vscode-dts/vscode.proposed.inlineCompletions.d.ts#L72.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionList.Items">
            <summary>
            Gets or sets the inline completion items.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionOptions">
            <summary>
            The options for inline completion.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionOptions.Pattern">
            <summary>
            Gets or sets a regex used by the client to determine when to ask the server for snippets.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionRequest">
             <summary>
             The request data for an inline completions request.
            
             See https://github.com/microsoft/vscode/blob/075ba020e8493f40dba89891b1a08453f2c067e9/src/vscode-dts/vscode.proposed.inlineCompletions.d.ts#L24.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionRequest.TextDocument">
            <summary>
            Gets or sets the text document.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionRequest.Position">
            <summary>
            Gets or sets the position where inline completions are being requested.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionRequest.Context">
            <summary>
            Gets or sets the context for the inline completions request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionRequest.Options">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.FormattingOptions"/> for the request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionTriggerKind">
            <summary>
            How the inline completion request was triggered.
            See https://github.com/microsoft/vscode/blob/075ba020e8493f40dba89891b1a08453f2c067e9/src/vscode-dts/vscode.proposed.inlineCompletions.d.ts#L58.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionTriggerKind.Automatic">
            <summary>
            Inline completions were triggered automatically while editing.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionTriggerKind.Explicit">
            <summary>
            Completion was triggered explicitly by a user gesture.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalItemOrigin">
            <summary>
            Enum which represents the origin of an item.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalItemOrigin.Exact">
            <summary>
            The entry is contained in exact code.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalItemOrigin.ExactMetadata">
            <summary>
            The entry is contained in metadata generated from exact information.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalItemOrigin.Indexed">
            <summary>
            The entry is contained in indexed code.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalItemOrigin.IndexedInRepo">
            <summary>
            The entry is contained in indexed code in the repo where the request originated.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalItemOrigin.IndexedInOrganization">
            <summary>
            The entry is contained in indexed code in the same organization but different repo where the request originated.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalItemOrigin.IndexedInThirdParty">
            <summary>
            The entry is contained in indexed code in a different organization and repo where request originated.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalItemOrigin.Other">
            <summary>
            The entry is of lesser quality than all other choices.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalKindAndModifier">
            <summary>
            Class that contains the base kind and modifiers used to describe a response item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalKindAndModifier.Kind">
            <summary>
            Gets or sets the ImageIds for a certain kind.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalKindAndModifier.Modifier">
            <summary>
            Gets or sets the modifier of the kind.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalKindAndModifier.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalKindAndModifier.Equals(Roslyn.LanguageServer.Protocol.VSInternalKindAndModifier)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalKindAndModifier.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers">
            <summary>
            Known VS response kind modifiers.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers.Public">
            <summary>
            Response kind modifier string for 'public'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers.Private">
            <summary>
            Response kind modifier string for 'private'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers.Protected">
            <summary>
            Response kind modifier string for 'protected'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers.Internal">
            <summary>
            Response kind modifier string for 'internal'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers.Sealed">
            <summary>
            Response kind modifier string for 'sealed'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers.Shortcut">
            <summary>
            Response kind modifier string for 'shortcut'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers.Snippet">
            <summary>
            Response kind modifier string for 'snippet'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers.Friend">
            <summary>
            Response kind modifier string for 'friend'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers.Declaration">
            <summary>
            Response kind modifier string for 'declaration'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKindModifiers.AllModifiers">
            <summary>
            Collection of known response kind modifier strings.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds">
            <summary>
            Known VS response kinds.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Text">
            <summary>
            Response kind string for 'text'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Method">
            <summary>
            Response kind string for 'method'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Function">
            <summary>
            Response kind string for 'function'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Constructor">
            <summary>
            Response kind string for 'constructor'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Field">
            <summary>
            Response kind string for 'field'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Variable">
            <summary>
            Response kind string for 'variable'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Class">
            <summary>
            Response kind string for 'class'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Interface">
            <summary>
            Response kind string for 'interface'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Module">
            <summary>
            Response kind string for 'module'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Property">
            <summary>
            Response kind string for 'property'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Unit">
            <summary>
            Response kind string for 'unit'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Value">
            <summary>
            Response kind string for 'value'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Enum">
            <summary>
            Response kind string for 'enum'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Keyword">
            <summary>
            Response kind string for 'keyword'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Snippet">
            <summary>
            Response kind string for 'snippet'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Color">
            <summary>
            Response kind string for 'color'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.File">
            <summary>
            Response kind string for 'file'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Reference">
            <summary>
            Response kind string for 'reference'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Folder">
            <summary>
            Response kind string for 'folder'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.EnumMember">
            <summary>
            Response kind string for 'enumMember'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Constant">
            <summary>
            Response kind string for 'constant'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Struct">
            <summary>
            Response kind string for 'struct'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Event">
            <summary>
            Response kind string for 'event'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Operator">
            <summary>
            Response kind string for 'operator'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.TypeParameter">
            <summary>
            Response kind string for 'typeParameter'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Namespace">
            <summary>
            Response kind string for 'namespace'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Package">
            <summary>
            Response kind string for 'package'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.StringKind">
            <summary>
            Response kind string for 'string'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Number">
            <summary>
            Response kind string for 'number'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Boolean">
            <summary>
            Response kind string for 'boolean'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Array">
            <summary>
            Response kind string for 'array'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.ObjectKind">
            <summary>
            Response kind string for 'object'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Key">
            <summary>
            Response kind string for 'key'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Null">
            <summary>
            Response kind string for 'null'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Macro">
            <summary>
            Response kind string for 'macro'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Template">
            <summary>
            Response kind string for 'template'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Typedef">
            <summary>
            Response kind string for 'typedef'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Union">
            <summary>
            Response kind string for 'union'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Delegate">
            <summary>
            Response kind string for 'delegate'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Tag">
            <summary>
            Response kind string for 'tag'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.Attribute">
            <summary>
            Response kind string for 'attribute'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalKnownKinds.AllKinds">
            <summary>
            Collection of response kind strings.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalLocation">
            <summary>
            Extension class for <see cref="T:Roslyn.LanguageServer.Protocol.Location"/>.  Used to relay reference text information with colorization.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalLocation.Text">
            <summary>
            Gets or sets the text value for a location reference. Must be of type <see cref="T:Roslyn.Text.Adornments.ImageElement"/> or <see cref="T:Roslyn.Text.Adornments.ContainerElement"/> or <see cref="T:Roslyn.Text.Adornments.ClassifiedTextElement"/> or <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalMapCodeMapping.TextDocument">
            <summary>
            Gets or sets identifier for the document the contents are supposed to be mapped into.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalMapCodeMapping.Contents">
            <summary>
            Gets or sets strings of code/text to map into TextDocument.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalMapCodeMapping.FocusLocations">
            <summary>
            Prioritized Locations to be used when applying heuristics. For example, cursor location,
            related classes (in other documents), viewport, etc. Earlier items should be considered
            higher priority.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalMapCodeParams">
            <summary>
            LSP Params for textDocument/mapCode calls.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalMapCodeParams.Mappings">
            <summary>
            Set of code blocks, associated with documents and regions, to map.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalMapCodeParams.Updates">
            <summary>
            Changes that should be applied to the workspace by the mapper before performing
            the mapping operation.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalMethods">
            <summary>
            Class which contains the string values for all Language Server Protocol Visual Studio specific methods.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.DocumentFoldingRangeRefreshName">
            <summary>
            Method name for 'textDocument/foldingRange/_vs_refresh'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.DocumentReferencesName">
            <summary>
            Method name for 'textDocument/_vs_references'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.OnAutoInsertName">
            <summary>
            Method name for 'textDocument/_vs_onAutoInsert'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentIconMappingResolveName">
            <summary>
            Method name for 'textDocument/_vs_iconMappingResolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.DocumentPullDiagnosticName">
            <summary>
            Method name for 'textdocument/_vs_diagnostic'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.WorkspacePullDiagnosticName">
            <summary>
            Method name for 'workspace/_vs_diagnostic'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentValidateBreakableRangeName">
            <summary>
            Method name for 'textDocument/_vs_validateBreakableRange'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentInlineCompletionName">
            <summary>
            Method name for 'textDocument/_vs_inlineCompletion'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentSpellCheckableRangesName">
            <summary>
            Method name for 'textDocument/_vs_spellCheckableRanges'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentUriPresentationName">
            <summary>
            Method name for 'textDocument/_vs_uriPresentation'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentTextPresentationName">
            <summary>
            Method name for 'textDocument/_vs_textPresentation'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.WorkspaceSpellCheckableRangesName">
            <summary>
            Method name for 'workspace/_vs_spellCheckableRanges'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.WorkspaceMapCodeName">
            <summary>
            Method name for 'workspace/_vs_mapCode'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.OnAutoInsert">
            <summary>
            Strongly typed message object for 'textDocument/_vs_onAutoInsert'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentIconMappingResolve">
            <summary>
            Strongly typed message object for 'textDocument/_vs_iconMappingResolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.DocumentPullDiagnostic">
            <summary>
            Strongly typed message object for 'textDocument/_vs_diagnostic'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.WorkspacePullDiagnostic">
            <summary>
            Strongly typed message object for 'workspace/_vs_diagnostic'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentValidateBreakableRange">
            <summary>
            Strongly typed message object for 'textDocument/_vs_validateBreakableRange'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentInlineCompletion">
            <summary>
            Strongly typed message object for 'textDocument/inlineCompletion'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentUriPresentation">
            <summary>
            Strongly typed message object for 'textDocument/_vs_uriPresentation'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentTextPresentation">
            <summary>
            Strongly typed message object for 'textDocument/_vs_textPresentation'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.TextDocumentSpellCheckableRanges">
            <summary>
            Strongly typed message object for 'textDocument/_vs_spellCheckableRanges'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.WorkspaceSpellCheckableRanges">
            <summary>
            Strongly typed message object for 'workspace/_vs_spellCheckableRanges'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalMethods.WorkspaceMapCode">
            <summary>
            Strongly typed message object for 'workspace/_vs_mapCode'
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalMultipleContextFeatures">
            <summary>
            Lists the features that support sending off feature requests for all available project contexts instead of the default active one.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalMultipleContextFeatures.SupportsMultipleContextsDiagnostics">
            <summary>
            Gets or sets a value indicating whether the server provides support for sending diagnostics requests for all project contexts.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalPriorityLevel">
            <summary>
            Enum which represents the various reference kinds.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalPriorityLevel.Lowest">
            <summary>
            Lowest priority.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalPriorityLevel.Low">
            <summary>
            Low priority.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalPriorityLevel.Normal">
            <summary>
            Medium priority.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalPriorityLevel.High">
            <summary>
            High priority.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalProjectContext">
            <summary>
            Class for a project context.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalProjectContext.VSKind">
            <summary>
            Gets or sets the string context kind of the project context.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalProjectContext.Equals(Roslyn.LanguageServer.Protocol.VSInternalProjectContext)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalProjectContext.Equals(Roslyn.LanguageServer.Protocol.VSProjectContext)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalProjectContext.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VSInternalProjectContext.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem">
            <summary>
            Class which represents references information.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.Id">
            <summary>
            Gets or sets the reference id.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.Location">
            <summary>
            Gets or sets the reference location.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.DefinitionId">
            <summary>
            Gets or sets the definition Id.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.DefinitionText">
            <summary>
            Gets or sets the definition text displayed as a header when references are grouped by Definition.
            Must be of type <see cref="T:System.String"/>, <see cref="T:Roslyn.Text.Adornments.ClassifiedTextElement"/>, <see cref="T:Roslyn.Text.Adornments.ContainerElement"/> and <see cref="T:Roslyn.Text.Adornments.ImageElement"/>.
            </summary>
            <remarks>
            This element should colorize syntax, but should not contain highlighting, e.g. <see cref="T:Roslyn.Text.Adornments.ClassifiedTextRun"/>
            embedded within <see cref="T:Roslyn.Text.Adornments.ClassifiedTextElement"/> should not define <see cref="P:Roslyn.Text.Adornments.ClassifiedTextRun.MarkerTagType"/>.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.ResolutionStatus">
            <summary>
            Gets or sets the resolution status.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.Kind">
            <summary>
            Gets or sets the reference kind.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.DocumentName">
            <summary>
            Gets or sets the document name to be displayed to user when needed.This can be used in cases where URI doesn't have a user friendly file name or it is a remote URI.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.ProjectName">
            <summary>
            Gets or sets the project name.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.ContainingType">
            <summary>
            Gets or sets the containing type.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.ContainingMember">
            <summary>
            Gets or sets the containing member.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.Text">
            <summary>
            Gets or sets the text value for a location reference.
            Must be of type <see cref="T:Roslyn.Text.Adornments.ImageElement"/> or <see cref="T:Roslyn.Text.Adornments.ContainerElement"/> or <see cref="T:Roslyn.Text.Adornments.ClassifiedTextElement"/> or <see cref="T:System.String"/>.
            </summary>
            <remarks>
            <para>
            This element should colorize syntax and highlight the range containing the reference.
            Highlighting can be achieved by setting <see cref="P:Roslyn.Text.Adornments.ClassifiedTextRun.MarkerTagType"/>
            on <see cref="T:Roslyn.Text.Adornments.ClassifiedTextRun"/> embedded within <see cref="T:Roslyn.Text.Adornments.ClassifiedTextElement"/>.
            </para>
            <para>
            Encouraged values for <see cref="P:Roslyn.Text.Adornments.ClassifiedTextRun.MarkerTagType"/> are:
            <c>"MarkerFormatDefinition/HighlightedReference"</c> for read references,
            <c>"MarkerFormatDefinition/HighlightedWrittenReference"</c> for write references,
            <c>"MarkerFormatDefinition/HighlightedDefinition"</c> for definitions.
            </para>
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.DisplayPath">
            <summary>
            Gets or sets the text value for display path.This would be a friendly display name for scenarios where the actual path on disk may be confusing for users.
            This doesn't have to correspond to a real file path, but does need to be parsable by the various Path.GetFileName() methods.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.Origin">
            <summary>
            Gets or sets the origin of the item.The origin is used to filter remote results.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceItem.DefinitionIcon">
            <summary>
            Gets or sets the icon to show for the definition header.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind">
            <summary>
            Enum which represents the various reference kinds.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Inactive">
            <summary>
            Reference in inactive code block.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Comment">
            <summary>
            Reference in comment.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.String">
            <summary>
            Reference in a string.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Read">
            <summary>
            Read operation on the reference.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Write">
            <summary>
            Write operation on the reference.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Reference">
            <summary>
            Reference.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Qualified">
            <summary>
            Qualified.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.TypeArgument">
            <summary>
            Type Argument.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.TypeConstraint">
            <summary>
            Type Constraint.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.BaseType">
            <summary>
            Base Type.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Constructor">
            <summary>
            Construct.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Destructor">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Import">
            <summary>
            Import.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Declaration">
            <summary>
            Declaration.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.AddressOf">
            <summary>
            Address of.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.NotReference">
            <summary>
            Not a reference.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalReferenceKind.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalReferenceParams">
            <summary>
            Class which represents extensions of <see cref="T:Roslyn.LanguageServer.Protocol.ReferenceParams"/> passed as parameter of find reference requests.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalReferenceParams.Scope">
            <summary>
            Gets or sets a value indicating the scope of returned items.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalRenameOptionSelection">
            <summary>
            Class representing the user configuration (as defined in <see cref="T:Roslyn.LanguageServer.Protocol.VSInternalRenameOptionSupport"/>) for a rename request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalRenameOptionSelection.Name">
            <summary>
            Gets or sets the name that identifies the option.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalRenameOptionSelection.Value">
            <summary>
            Gets or sets a value indicating whether the user selected the option.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalRenameOptionSupport">
            <summary>
            Class representing a renaming option for customizing the edit in the 'textDocument/rename' request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalRenameOptionSupport.Name">
            <summary>
            Gets or sets the name that identifies the option.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalRenameOptionSupport.Label">
            <summary>
            Gets or sets the user-facing option label.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalRenameOptionSupport.Default">
            <summary>
            Gets or sets a value indicating whether the option has a default value of <c>true</c>.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalRenameParams">
            <summary>
            Class representing the parameters (together with extra VS-specific options) sent for the
            'textDocument/rename' request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalRenameParams.OptionSelections">
            <summary>
            Gets or sets the rename option values as selected by the user.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalRenameRange">
            <summary>
            Class which represents a possible result value of the 'textDocument/prepareRename' request,
            together with extra VS-specific options.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalRenameRange.SupportedOptions">
            <summary>
            Gets or sets the supported options for the rename request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalResolutionStatusKind">
            <summary>
            Enum which represents the various resolutions for a reference entry.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalResolutionStatusKind.ConfirmedAsReference">
            <summary>
            Entry has been processed and confirmed as a reference.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalResolutionStatusKind.ConfirmedAsNotReference">
            <summary>
            Entry has been processed and confimed as not a reference.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalResolutionStatusKind.NotConfirmed">
            <summary>
            Entry has been processed but could not be confirmed.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalResolutionStatusKind.NotProcessed">
            <summary>
            Entry has not been processed.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalSelectedCompletionInfo">
             <summary>
             Information about the selected completion item for <see cref="T:Roslyn.LanguageServer.Protocol.VSInternalInlineCompletionContext"/>.
            
             See https://github.com/microsoft/vscode/blob/075ba020e8493f40dba89891b1a08453f2c067e9/src/vscode-dts/vscode.proposed.inlineCompletions.d.ts#L48.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalSelectedCompletionInfo.Range">
            <summary>
            Gets or sets the range of the selected completion item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalSelectedCompletionInfo.Text">
            <summary>
            Gets or sets the text of the selected completion item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalSelectedCompletionInfo.CompletionKind">
            <summary>
            Gets or sets the completion item kind of the selected completion item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalSelectedCompletionInfo.IsSnippetText">
            <summary>
            Gets or sets a value indicating whether the completion item is a snippet.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities">
            <summary>
            Extension class for ServerCapabilities with fields specific to Visual Studio.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.DisableGoToWorkspaceSymbols">
            <summary>
            Gets or sets a value indicating whether or not GoTo's integration with
            'workspace/symbol' and the deprecated 16.3 'workspace/beginSymbol' messages
            should be disabled.
            </summary>
            <remarks>
            This is provided to facilitate transition from in-proc to OOP for teams that
            currently own both a Language Server for Ctrl+Q and a GoTo provider.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.MSReferencesProvider">
            <summary>
            Gets or sets a value indicating whether document/_ms_references is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.OnAutoInsertProvider">
            <summary>
            Gets or sets a value indicating whether the server supports OnAutoInsert.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.DoNotIncludeTextInTextDocumentDidOpen">
            <summary>
            Gets or sets a value indicating whether the server requires document text to be included in textDocument/didOpen notifications.
            </summary>
            <remarks>This capability is not intended to be included into the official LSP, hence _ms_ prefix.</remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.KindDescriptionResolveProvider">
            <summary>
            Gets or sets a value indicating whether the server provides support to resolve string based response kinds.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.SupportsDiagnosticRequests">
            <summary>
            Gets or sets a value indicating whether the server provides support for diagnostic pull requests.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.DiagnosticProvider">
            <summary>
            Gets or sets server specified options for diagnostic pull requests.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.MultipleContextSupportProvider">
            <summary>
            Gets or sets a value indicating whether the server provides support for multiple context requests.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.InlineCompletionOptions">
            <summary>
            Gets or sets a value indicating whether the server provides support for inline completion requests.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.SpellCheckingProvider">
            <summary>
            Gets or sets a value indicating whether the server provides support for spell checking.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.BreakableRangeProvider">
            <summary>
            Gets or sets a value indicating whether the server supports validating breakable ranges.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.UriPresentationProvider">
            <summary>
            Gets or sets a value indicating whether the server supports uri presentation.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.TextPresentationProvider">
            <summary>
            Gets or sets a value indicating whether the server supports text presentation.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalServerCapabilities.MapCodeProvider">
            <summary>
            Gets or sets the value which indicates what support the server has for code mapping.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalSignatureInformation">
            <summary>
            Extension class for signature help information which contains colorized label information.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalSignatureInformation.ColorizedLabel">
            <summary>
            Gets or sets the value representing the colorized label.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalSnippetSupportLevel">
            <summary>
            The version of support that is available from the client.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalSnippetSupportLevel.DefaultTabStop">
            <summary>
            Only default tab stops ($0) are supported.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalSnippetSupportLevel.Complete">
            <summary>
            Complete snippet support is available.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeKind">
            <summary>
            Enum to represent the spell checkable region kinds.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeKind.String">
            <summary>
            Represents a span of a string.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeKind.Comment">
            <summary>
            Represents a span of a comment.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeKind.Identifier">
            <summary>
            Represents a span of an identifier declaration.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeReport">
            <summary>
            Report of spell checkable ranges.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeReport.ResultId">
            <summary>
            Gets or sets the server-generated version number for the spell checkable ranges.
            This is treated as a black box by the client: it is stored on the client
            for each textDocument and sent back to the server when requesting
            spell checkable ranges. The server can use this result ID to avoid resending
            spell checkable ranges that had previously been sent.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeReport.Ranges">
            <summary>
            Gets or sets an array containing encoded ranges to spell check.
            </summary>
            <remarks>
            The data structure is as the following:
            1. <see cref="P:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeReport.Ranges"/> property can contain multiple spans to spell check.
            2. Each span is defined by a set of 3 ordered integers in the <see cref="P:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeReport.Ranges"/> property.
            3. The span's ordered information are the following:
                1. A kind, corresponding to the numeric value of <see cref="T:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeKind"/>.
                2. A start position, which is the character index where the span starts in the document buffer.
                   The start position should be the relative offset from the end of the previous span, regardless of whether that span is the same range
                   or a prior range.
                3. The length of the span.
            4. Spans should be ordered by their absolute start position in the document buffer.
            </remarks>
            <example>
            [
                /* ---- First span in the document, admitting this is the first report returned. ---- */
                1,   // The kind of the span. Equivalent to <see cref="F:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeKind.Comment"/>.
                123, // This is the very first span's start position. The position is relative to the beginning of the document buffer.
                5,   // Span length
                /* ---- Second span in the document ---- */
                0,   // Equivalent to <see cref="F:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeKind.String"/>.
                6,   // Start position relative to the first span in the document. Absolute span position is therefore (123 + 5) + 6 = 134.
                4,   // Span length
                /* ---- Third span in the document ---- */
                0,   // Equivalent to <see cref="F:Roslyn.LanguageServer.Protocol.VSInternalSpellCheckableRangeKind.String"/>.
                12,  // Start position relative to the second span. Absolute span position is therefore (134 + 4) + 12 = 150
                5    // Span length
            ]
            </example>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalStreamingParams">
             <summary>
             Class representing a streaming pull request parameter used.
            
             TODO: Deprecate VSInternalDiagnosticParams.cs to use this merged param instead.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalStreamingParams.TextDocument">
            <summary>
            Gets or sets the document for which the feature is being requested for.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalStreamingParams.PreviousResultId">
             <summary>
             Gets or sets the server-generated version number for the feature request.
             </summary>
             <remarks>
             <para>
             This is treated as a black box by the client: it is stored on the client
             for each textDocument and sent back to the server when requesting
             the feature. The server can use this result ID to avoid resending
             feature results that had previously been sent.</para>
            
             <para>Note that if a client does request results that haven’t changed, the
             language server should not reply with any results for that document.
             If the client requests results for a file that has been renamed or
             deleted, then the language service should respond with null for the
             results.
             Also, if a service is reporting multiple reports for the same
             document, then all reports are expected to have the same
             previousResultId.</para>
             </remarks>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalSymbolInformation">
            <summary>
            Extension class for SymbolInformation with fields specific to Visual Studio functionalities.
            </summary>
            <remarks>
            This is a temporary protocol and should not be used.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalSymbolInformation.VSKind">
            <summary>
            Gets or sets the string kind used for icons.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalTextDocumentClientCapabilities">
            <summary>
            Text document capabilities specific to Visual Studio.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalTextDocumentClientCapabilities.OnAutoInsert">
            <summary>
            Gets or sets the setting which determines if on auto insert can be dynamically registered.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalTextDocumentRegistrationOptions">
            <summary>
            / Class representing the options for registering textDocument/_vs_OnAutoInsert support.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalTextDocumentRegistrationOptions.TriggerCharacters">
            <summary>
            Gets or sets trigger characters for on auto insert.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalTextPresentationParams">
            <summary>
            Class representing the parameters sent for a textDocument/_vs_textPresentation request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalTextPresentationParams.TextDocument">
            <summary>
            Gets or sets the identifier for the text document to be operate on.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalTextPresentationParams.Range">
            <summary>
            Gets or sets the range.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalTextPresentationParams.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalUriPresentationParams">
            <summary>
            Class representing the parameters sent for a textDocument/_vs_uriPresentation request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalUriPresentationParams.TextDocument">
            <summary>
            Gets or sets the identifier for the text document to be operate on.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalUriPresentationParams.Range">
            <summary>
            Gets or sets the range.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalUriPresentationParams.Uris">
            <summary>
            Gets or sets the URI values. Valid for DropKind.Uris.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalValidateBreakableRangeParams">
            <summary>
            Class representing the parameters sent for the textDocument/validateBreakableRange request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalValidateBreakableRangeParams.TextDocument">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier"/> for the request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalValidateBreakableRangeParams.Range">
            <summary>
            Gets or sets the <see cref="P:Roslyn.LanguageServer.Protocol.VSInternalValidateBreakableRangeParams.Range"/> at which the request was sent.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalWellKnownCodeActionCommands">
            <summary>
            Class which contains the string values for all well-known Visual Studion LSP code action commands.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalWellKnownCodeActionCommands.SetClipboard">
            <summary>
            Command name for '_ms_setClipboard'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.VSInternalWellKnownCodeActionCommands.OpenUrl">
            <summary>
            Command name for '_ms_openUrl'.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceSpellCheckableParams">
            <summary>
            Parameter for workspace/_vs_spellCheckableRanges.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceSpellCheckableParams.PreviousResults">
            <summary>
            Gets or sets the current state of the documents the client already has received.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceSpellCheckableParams.PartialResultToken">
            <summary>
            Gets or sets an optional token that a server can use to report partial results (e.g. streaming) to the client.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceSpellCheckableReport">
            <summary>
            Report for workspace spell checkable range request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VSInternalWorkspaceSpellCheckableReport.TextDocument">
            <summary>
            Gets or sets the document for which the spell checkable ranges are returned.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.IPartialResultParams`1">
             <summary>
             Interface to describe parameters for requests that support streaming results.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#partialResultParams">Language Server Protocol specification</see> for additional information.
             </summary>
             <typeparam name="T">The type to be reported by <see cref="P:Roslyn.LanguageServer.Protocol.IPartialResultParams`1.PartialResultToken"/>.</typeparam>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.IPartialResultParams`1.PartialResultToken">
            <summary>
            Gets or sets the value of the PartialResultToken instance.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.IStaticRegistrationOptions">
             <summary>
             Interface representing the static registration options for options returned in the initialize request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#staticRegistrationOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.IStaticRegistrationOptions.Id">
            <summary>
            Gets or sets the id used to register the request.  The id can be used to deregister the request again.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.IStringEnum">
            <summary>
            Interface that describes a string-based enumeration.
            String-based enumerations are serialized simply as their <see cref="P:Roslyn.LanguageServer.Protocol.IStringEnum.Value"/>.
            </summary>
            <remarks>
            When implementing this interface, a constructor that takes a single string as parameters is required by
            <see cref="T:Roslyn.LanguageServer.Protocol.StringEnumConverter`1"/>.
            </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.IStringEnum.Value">
            <summary>
            Gets the value of the enumeration.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ISumType">
            <summary>
            Abstracts over the idea of a "sum type". Sum types are types that can contain one value of various types.
            This abstraction is guaranteed to be typesafe, meaning you cannot access the underlying value without knowing
            its specific type.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ISumType.Value">
            <summary>
            Gets the value stored in the SumType. This can be matched against using the "is" operator.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ITextDocumentParams">
            <summary>
            Interface to identify a text document.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ITextDocumentParams.TextDocument">
            <summary>
            Gets or sets the value which identifies the document.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ITextDocumentPositionParams">
             <summary>
             Interface to identify a text document and a position inside that document.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocumentPositionParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ITextDocumentPositionParams.TextDocument">
            <summary>
            Gets or sets the value which identifies the document.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ITextDocumentPositionParams.Position">
            <summary>
            Gets or sets the value which indicates the position within the document.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ITextDocumentRegistrationOptions">
             <summary>
             Interface representing the text document registration options.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocumentRegistrationOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ITextDocumentRegistrationOptions.DocumentSelector">
            <summary>
            Gets or sets the document filters for this registration option.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.IWorkDoneProgressOptions">
            <summary>
            Options to signal work done progress support in server capabilities.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.IWorkDoneProgressOptions.WorkDoneProgress">
             <summary>
             Gets or sets a value indicating whether work done progress is supported.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#workDoneProgressOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.LinkedEditingRangeOptions">
             <summary>
             Class which represents linked editing range capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#linkedEditingRangeOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.LinkedEditingRangeOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.LinkedEditingRangeParams">
             <summary>
             Class representing the parameters sent for a textDocument/linkedEditingRange request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#linkedEditingRangeParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.LinkedEditingRanges">
             <summary>
             Class representing the response of an LinkedEditingRanges response.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#linkedEditingRanges">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.LinkedEditingRanges.Ranges">
            <summary>
            Gets or sets the ranges for the type rename.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.LinkedEditingRanges.WordPattern">
            <summary>
            Gets or sets the word pattern for the type rename.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.Location">
             <summary>
             Class representing a location in a document.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#location">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Location.Uri">
            <summary>
            Gets or sets the URI for the document the location belongs to.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Location.Range">
            <summary>
            Gets or sets the range of the location in the document.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Location.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Location.Equals(Roslyn.LanguageServer.Protocol.Location)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Location.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.LogMessageParams">
             <summary>
             Class which represents parameter sent with window/logMessage requests.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#logMessageParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.LogMessageParams.MessageType">
            <summary>
            Gets or sets the type of message.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.LogMessageParams.Message">
            <summary>
            Gets or sets the message.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.LspNotification`1">
            <summary>
            Strongly typed object used to specify a LSP notification's parameter type.
            </summary>
            <typeparam name="TIn">The parameter type.</typeparam>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.LspNotification`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.LspNotification`1"/> class.
            </summary>
            <param name="name">The name of the JSON-RPC notification.</param>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.LspNotification`1.Name">
            <summary>
            Gets the name of the JSON-RPC notification.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.LspRequest`2">
            <summary>
            Strongly typed object used to specify a LSP requests's parameter and return types.
            </summary>
            <typeparam name="TIn">The parameter type.</typeparam>
            <typeparam name="TOut">The return type.</typeparam>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.LspRequest`2.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.LspRequest`2"/> class.
            </summary>
            <param name="name">The name of the JSON-RPC request.</param>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.LspRequest`2.Name">
            <summary>
            Gets the name of the JSON-RPC request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.MarkedString">
             <summary>
             Class representing human readable text that should be rendered.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#markedString">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.MarkedString.Language">
            <summary>
            Gets or sets the language of the code stored in <see cref="P:Roslyn.LanguageServer.Protocol.MarkedString.Value" />.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.MarkedString.Value">
            <summary>
            Gets or sets the code.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.MarkupContent">
             <summary>
             Class representing text and an associated format that should be rendered.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#markupContentInnerDefinition">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.MarkupContent.Kind">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.MarkupKind"/> representing the text's format.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.MarkupContent.Value">
            <summary>
            Gets or sets the text that should be rendered.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.MarkupKind">
             <summary>
             Value representing the various formats of markup text.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#markupContent">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.MarkupKind.#ctor(System.String)">
             <summary>
             Value representing the various formats of markup text.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#markupContent">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.MarkupKind.PlainText">
            <summary>
            Markup type is plain text.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.MarkupKind.Markdown">
            <summary>
            Markup type is Markdown.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.MessageActionItem">
             <summary>
             Class which represent an action the user performs after a window/showMessageRequest request is sent.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#messageActionItem">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.MessageActionItem.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.MessageType">
             <summary>
             Message type enum.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#messageType">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.MessageType.Error">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.MessageType.Warning">
            <summary>
            Warning message.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.MessageType.Info">
            <summary>
            Info message.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.MessageType.Log">
            <summary>
            Log message.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.Methods">
            <summary>
            Class which contains the string values for all common language protocol methods.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.InitializeName">
            <summary>
            Method name for 'initialize'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.InitializedName">
            <summary>
            Method name for 'initialized'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.ProgressNotificationName">
            <summary>
            Method name for '$/progress' notifications.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.PartialResultTokenName">
            <summary>
            Name of the progress token in the request.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.PartialResultTokenPropertyName">
            <summary>
            Name of the progress token in the request.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkDoneTokenName">
            <summary>
            Name of the work done token in the request.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.ProgressNotificationTokenName">
            <summary>
            Name of the progress token in the $/progress notification.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentCodeActionName">
            <summary>
            Method name for 'textDocument/codeAction'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentCodeLensName">
            <summary>
            Method name for 'textDocument/codeLens'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.CodeActionResolveName">
            <summary>
            Method name for 'codeAction/resolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.CodeLensResolveName">
            <summary>
            Method name for 'codeLens/resolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentCompletionName">
            <summary>
            Method name for 'textDocument/completion'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentCompletionResolveName">
            <summary>
            Method name for 'completionItem/resolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDefinitionName">
            <summary>
            Method name for 'textDocument/definition'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDiagnosticName">
            <summary>
            Method name for 'textDocument/diagnostic'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDidOpenName">
            <summary>
            Method name for 'textDocument/didOpen'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDidCloseName">
            <summary>
            Method name for 'textDocument/didClose'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDidChangeName">
            <summary>
            Method name for 'textDocument/didChange'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDidSaveName">
            <summary>
            Method name for 'textDocument/didSave'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDocumentHighlightName">
            <summary>
            Method name for 'textDocument/documentHighlight'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDocumentLinkName">
            <summary>
            Method name for 'textDocument/documentLink'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.DocumentLinkResolveName">
            <summary>
            Method name for 'documentLink/resolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDocumentColorName">
            <summary>
            Method name for 'textDocument/documentColor'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDocumentSymbolName">
            <summary>
            Method name for 'textDocument/documentSymbol'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentFoldingRangeName">
            <summary>
            Method name for 'textDocument/foldingRange'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentFormattingName">
            <summary>
            Method name for 'textDocument/formatting'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentHoverName">
            <summary>
            Method name for 'textDocument/hover'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentOnTypeFormattingName">
            <summary>
            Method name for 'textDocument/onTypeFormatting'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentRangeFormattingName">
            <summary>
            Method name for 'textDocument/rangeFormatting'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentPublishDiagnosticsName">
            <summary>
            Method name for 'textDocument/publishDiagnostics'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentImplementationName">
            <summary>
            Method name for 'textDocument/implementation'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentInlayHintName">
            <summary>
            Method name for 'textDocument/inlayHint'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.InlayHintResolveName">
            <summary>
            Method name for 'inlayHint/resolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentTypeDefinitionName">
            <summary>
            Method name for 'textDocument/typeDefinition'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentReferencesName">
            <summary>
            Method name for 'textDocument/references'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentRenameName">
            <summary>
            Method name for 'textDocument/rename'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentPrepareRenameName">
            <summary>
            Method name for 'textDocument/prepareRename'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentSemanticTokensFullName">
            <summary>
            Method name for 'textDocument/semanticTokens/full'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentSemanticTokensRangeName">
            <summary>
            Method name for 'textDocument/semanticTokens/range'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentSemanticTokensFullDeltaName">
            <summary>
            Method name for 'textDocument/semanticTokens/full/delta'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentSignatureHelpName">
            <summary>
            Method name for 'textDocument/signatureHelp'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentWillSaveName">
            <summary>
            Method name for 'textDocument/willSave'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentWillSaveWaitUntilName">
            <summary>
            Method name for 'textDocument/willSaveWaitUntil'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentLinkedEditingRangeName">
            <summary>
            Method name for 'textDocument/linkedEditingRange'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WindowLogMessageName">
            <summary>
            Method name for 'window/logMessage'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WindowShowMessageName">
            <summary>
            Method name for 'window/showMessage'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WindowShowMessageRequestName">
            <summary>
            Method name for 'window/showMessageRequest'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceApplyEditName">
            <summary>
            Method name for 'workspace/applyEdit'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceSemanticTokensRefreshName">
            <summary>
            Method name for 'workspace/semanticTokens/refresh'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceConfigurationName">
            <summary>
            Method name for 'workspace/configuration'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceDiagnosticName">
            <summary>
            Method name for 'workspace/diagnostic'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceDiagnosticRefreshName">
            <summary>
            Method name for 'workspace/diagnostic/refresh'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceDidChangeConfigurationName">
            <summary>
            Method name for 'workspace/didChangeConfiguration'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceExecuteCommandName">
            <summary>
            Method name for 'workspace/executeCommand'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceSymbolName">
            <summary>
            Method name for 'workspace/symbol'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceDidChangeWatchedFilesName">
            <summary>
            Method name for 'workspace/didChangeWatchedFiles'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceCodeLensRefreshName">
            <summary>
            Method name for 'workspace/codeLens/refresh'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceInlayHintRefreshName">
            <summary>
            Method name for 'workspace/inlayHint/refresh'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.ShutdownName">
            <summary>
            Method name for 'shutdown'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.ExitName">
            <summary>
            Method name for 'exit'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TelemetryEventName">
            <summary>
            Method name for 'telemetry/event'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.ClientRegisterCapabilityName">
            <summary>
            Method name for 'client/registerCapability'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.ClientUnregisterCapabilityName">
            <summary>
            Method name for 'client/unregisterCapability'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.Initialize">
            <summary>
            Strongly typed message object for 'initialize'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.Initialized">
            <summary>
            Strongly typed message object for 'initialized'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentCodeAction">
            <summary>
            Strongly typed message object for 'textDocument/codeAction'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentCodeLens">
            <summary>
            Strongly typed message object for 'textDocument/codeLens'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.CodeActionResolve">
            <summary>
            Strongly typed message object for 'codeAction/resolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.CodeLensResolve">
            <summary>
            Strongly typed message object for 'codeLens/resolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentCompletion">
            <summary>
            Strongly typed message object for 'textDocument/completion'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentCompletionResolve">
            <summary>
            Strongly typed message object for 'completionItem/resolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDefinition">
            <summary>
            Strongly typed message object for 'textDocument/definition'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDidOpen">
            <summary>
            Strongly typed message object for 'textDocument/didOpen'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDidClose">
            <summary>
            Strongly typed message object for 'textDocument/didClose'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDidChange">
            <summary>
            Strongly typed message object for 'textDocument/didChange'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDidSave">
            <summary>
            Strongly typed message object for 'textDocument/didSave'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDocumentHighlight">
            <summary>
            Strongly typed message object for 'textDocument/documentHighlight'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDocumentLink">
            <summary>
            Strongly typed message object for 'textDocument/documentLink'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.DocumentLinkResolve">
            <summary>
            Strongly typed message object for 'documentLink/resolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.DocumentColorRequest">
            <summary>
            Strongly typed message object for 'textDocument/documentColor'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentDocumentSymbol">
            <summary>
            Strongly typed message object for 'textDocument/documentSymbol'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentFoldingRange">
            <summary>
            Stronly typed message object for 'textDocument/foldingRange'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentFormatting">
            <summary>
            Strongly typed message object for 'textDocument/formatting'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentHover">
            <summary>
            Strongly typed message object for 'textDocument/hover'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentOnTypeFormatting">
            <summary>
            Strongly typed message object for 'textDocument/onTypeFormatting'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentRangeFormatting">
            <summary>
            Strongly typed message object for 'textDocument/rangeFormatting'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentPublishDiagnostics">
            <summary>
            Strongly typed message object for 'textDocument/publishDiagnostics'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentImplementation">
            <summary>
            Strongly typed message object for 'textDocument/implementation'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentInlayHint">
            <summary>
            Strongly typed message object for 'textDocument/inlayHint'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.InlayHintResolve">
            <summary>
            Strongly typed message object for 'inlayHint/resolve'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentTypeDefinition">
            <summary>
            Strongly typed message object for 'textDocument/typeDefinition'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentReferences">
            <summary>
            Strongly typed message object for 'textDocument/references'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentRename">
            <summary>
            Strongly typed message object for 'textDocument/rename'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentPrepareRename">
            <summary>
            Strongly typed message object for 'textDocument/prepareRename'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentSignatureHelp">
            <summary>
            Strongly typed message object for 'textDocument/signatureHelp'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentWillSave">
            <summary>
            Strongly typed message object for 'textDocument/willSave'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentWillSaveWaitUntil">
            <summary>
            Strongly typed message object for 'textDocument/willSaveWaitUntil'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentLinkedEditingRange">
            <summary>
            Strongly typed message object for 'textDocument/linkedEditingRange'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WindowLogMessage">
            <summary>
            Strongly typed message object for 'window/logMessage'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WindowShowMessage">
            <summary>
            Strongly typed message object for 'window/showMessage'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WindowShowMessageRequest">
            <summary>
            Strongly typed message object for 'window/showMessageRequest'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceApplyEdit">
            <summary>
            Strongly typed message object for 'workspace/applyEdit'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceSemanticTokensRefresh">
            <summary>
            Strongly typed message object for 'workspace/semanticTokens/refresh'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceConfiguration">
            <summary>
            Strongly typed message object for 'workspace/configuration'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceDidChangeConfiguration">
            <summary>
            Strongly typed message object for 'workspace/didChangeConfiguration'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceExecuteCommand">
            <summary>
            Strongly typed message object for 'workspace/executeCommand'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceSymbol">
            <summary>
            Strongly typed message object for 'workspace/symbol'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceDidChangeWatchedFiles">
            <summary>
            Strongly typed message object for 'workspace/didChangeWatchedFiles'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceCodeLensRefresh">
            <summary>
            Strongly typed message object for 'workspace/codeLens/refresh'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.WorkspaceInlayHintRefresh">
            <summary>
            Strongly typed message object for 'workspace/inlayHint/refresh'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.Shutdown">
            <summary>
            Strongly typed message object for 'shutdown'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.Exit">
            <summary>
            Strongly typed message object for 'exit'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TelemetryEvent">
            <summary>
            Strongly typed message object for 'telemetry/event'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.ClientRegisterCapability">
            <summary>
            Strongly typed message object for 'client/registerCapability'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.ClientUnregisterCapability">
            <summary>
            Strongly typed message object for 'client/unregisterCapability'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentSemanticTokensFull">
            <summary>
            Strongly typed message object for 'textDocument/semanticTokens/full'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentSemanticTokensRange">
            <summary>
            Strongly typed message object for 'textDocument/semanticTokens/range'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.Methods.TextDocumentSemanticTokensFullDelta">
            <summary>
            Strongly typed message object for 'textDocument/semanticTokens/full/delta'.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.OptionalVersionedTextDocumentIdentifier">
             <summary>
             Class which represents a text document, but optionally has a version identifier.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#optionalVersionedTextDocumentIdentifier">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.OptionalVersionedTextDocumentIdentifier.Version">
            <summary>
            Gets or sets the version of the document.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.OptionalVersionedTextDocumentIdentifier.Equals(Roslyn.LanguageServer.Protocol.OptionalVersionedTextDocumentIdentifier)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.OptionalVersionedTextDocumentIdentifier.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.OptionalVersionedTextDocumentIdentifier.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.OptionalVersionedTextDocumentIdentifier.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ParameterInformation">
             <summary>
             Class representing a parameter of a callable signature.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#parameterInformation">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ParameterInformation.Label">
            <summary>
            Gets or sets the label of the parameter.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ParameterInformation.Documentation">
            <summary>
            Gets or sets the human-readable documentation of the parameter.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ParameterInformationSetting">
             <summary>
             Class representing the parameter information initialization setting.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#signatureHelpClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ParameterInformationSetting.LabelOffsetSupport">
            <summary>
            Gets or sets a value indicating whether the client supports label offset.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.Position">
             <summary>
             Class which represents a position on a text document.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#position">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Position.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.Position"/> class.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Position.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.Position"/> class.
            </summary>
            <param name="line">Line number.</param>
            <param name="character">Character number.</param>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Position.Line">
            <summary>
            Gets or sets the line number.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Position.Character">
            <summary>
            Gets or sets the character number.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Position.op_Equality(Roslyn.LanguageServer.Protocol.Position,Roslyn.LanguageServer.Protocol.Position)">
            <summary>
            Overrides default equals operator.  Two positions are equal if they are both null or one of them is the object equivalent of the other.
            </summary>
            <param name="firstPosition">The first position to compare.</param>
            <param name="secondPosition">The second position to compare.</param>
            <returns>True if both positions are null or one of them is the object equivalent of the other, false otherwise.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Position.op_Inequality(Roslyn.LanguageServer.Protocol.Position,Roslyn.LanguageServer.Protocol.Position)">
            <summary>
            Overrides the default not equals operator.
            </summary>
            <param name="firstPosition">The first position to compare.</param>
            <param name="secondPosition">The second position to compare.</param>
            <returns>True if first and second positions are not equivalent.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Position.Equals(System.Object)">
            <summary>
            Overrides base class method <see cref="M:System.Object.Equals(System.Object)"/>. Two positions are equal if their line and character are the same.
            </summary>
            <param name="obj">Object to compare to.</param>
            <returns>True if the given position has the same line and character; false otherwise.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Position.Equals(Roslyn.LanguageServer.Protocol.Position)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Position.GetHashCode">
            <summary>
            Overrides base class method <see cref="M:System.Object.GetHashCode"/>.
            </summary>
            <returns>Hashcode for this object.</returns>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.PrepareRenameParams">
             <summary>
             Class representing the parameters for the 'textDocument/prepare' request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#prepareRenameParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.PrepareRenameParams.TextDocument">
            <summary>
            Gets or sets the value which identifies the document.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.PrepareRenameParams.Position">
            <summary>
            Gets or sets the position in which the rename is requested.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.PrepareSupportDefaultBehavior">
             <summary>
             Enum representing the default behavior used by the client for computing a rename range.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#prepareSupportDefaultBehavior">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.PrepareSupportDefaultBehavior.Identifier">
            <summary>
            The client's default behavior is to select the identifier according to the language's syntax rule.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.PreviousResultId">
             <summary>
             Class representing a previous result id in a workspace pull request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#previousResultId">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.PreviousResultId.Uri">
            <summary>
            Gets or sets the URI for which the client knows a result id.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.PreviousResultId.Value">
            <summary>
            Gets or sets the value of the previous result id.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.PublishDiagnosticParams">
             <summary>
             Class which represents the parameter that's sent with 'textDocument/publishDiagnostics' messages.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#publishDiagnosticsParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.PublishDiagnosticParams.Uri">
            <summary>
            Gets or sets the URI of the text document.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.PublishDiagnosticParams.Diagnostics">
            <summary>
            Gets or sets the collection of diagnostics.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.PublishDiagnosticsSetting">
             <summary>
             Class representing the initialization setting for publish diagnostics.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#publishDiagnosticsClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.PublishDiagnosticsSetting.TagSupport">
            <summary>
            Gets or sets a value indicating whether gets or sets the <see cref="P:Roslyn.LanguageServer.Protocol.PublishDiagnosticsSetting.TagSupport"/> capabilities.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.Range">
             <summary>
             Class which represents a text document text range.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#range">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Range.Start">
            <summary>
            Gets or sets the text start position.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Range.End">
            <summary>
            Gets or sets the text end position.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Range.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Range.Equals(Roslyn.LanguageServer.Protocol.Range)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.Range.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ReferenceContext">
             <summary>
             Class representing reference context information for find reference request parameter.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#referenceContext">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ReferenceContext.IncludeDeclaration">
            <summary>
            Gets or sets a value indicating whether declaration should be included.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ReferenceOptions">
             <summary>
             Class which represents workspace symbols capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#referenceOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ReferenceOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ReferenceParams">
             <summary>
             Class representing find reference parameter for find reference request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#referenceParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ReferenceParams.Context">
            <summary>
            Gets or sets the reference context.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ReferenceParams.PartialResultToken">
            <summary>
            Gets or sets the value of the PartialResultToken instance.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.Registration">
             <summary>
             Class representing the general registration information for registering for a capability.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#registration">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Registration.Id">
            <summary>
            Gets or sets the id used to register the request. This can be used to deregister later.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Registration.Method">
            <summary>
            Gets or sets the method / capability to register for.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Registration.RegisterOptions">
            <summary>
            Gets or sets the options necessary for registration.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.RegistrationParams">
             <summary>
             Class representing the parameters sent for the client/registerCapability request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#registrationParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RegistrationParams.Registrations">
            <summary>
            Gets or sets the set of capabilities that are being registered.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.RelatedFullDocumentDiagnosticReport">
             <summary>
             Class representing a full diagnostic report with a set of related documents.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#relatedFullDocumentDiagnosticReport">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RelatedFullDocumentDiagnosticReport.RelatedDocuments">
            <summary>
            Gets or sets the map of related document diagnostic reports.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.RelatedUnchangedDocumentDiagnosticReport">
             <summary>
             Class representing an unchanged diagnostic report with a set of related documents.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#relatedUnchangedDocumentDiagnosticReport">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RelatedUnchangedDocumentDiagnosticReport.RelatedDocuments">
            <summary>
            Gets or sets the map of related document diagnostic reports.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.RenameClientCapabilities">
             <summary>
             Class which represents renaming client capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#renameClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameClientCapabilities.PrepareSupport">
            <summary>
            Gets or sets a value indicating whether the client supports testing for validity of rename operations before execution.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameClientCapabilities.PrepareSupportDefaultBehavior">
            <summary>
            Gets or sets the value indicating the default behavior used by the client when the (`{ defaultBehavior: boolean }`)
            result is used in the 'textDocument/prepareRename' request.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameClientCapabilities.HonorsChangeAnnotations">
            <summary>
            Gets or sets a value indicating whether the client honors the change annotations in text edits and resource
            operations returned via the rename request's workspace edit, by for example presenting the workspace edit in
            the user interface and asking for confirmation.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.RenameFile">
             <summary>
             Class representing a rename file operation.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#renameFile">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameFile.Kind">
            <summary>
            Gets the kind value.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameFile.OldUri">
            <summary>
            Gets or sets the old (existing) location.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameFile.NewUri">
            <summary>
            Gets or sets the new location.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameFile.Options">
            <summary>
            Gets or sets the rename options.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.RenameFileOptions">
             <summary>
             Class representing the options for a create file operation.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#renameFileOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameFileOptions.Overwrite">
            <summary>
            Gets or sets a value indicating whether the rename should overwrite the target if it already exists. (Overwrite wins over ignoreIfExists).
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameFileOptions.IgnoreIfExists">
            <summary>
            Gets or sets a value indicating whether the action should be ignored if the file already exists.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.RenameOptions">
             <summary>
             Class representing the rename options for server capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#renameOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameOptions.PrepareProvider">
            <summary>
            Gets or sets a value indicating whether renames should be checked and tested before being executed.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.RenameParams">
             <summary>
             Class representing the rename parameters for the textDocument/rename request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#renameParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameParams.NewName">
            <summary>
            Gets or sets the new name of the renamed symbol.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.RenameRange">
             <summary>
             Class which represents a possible result value of the 'textDocument/prepareRename' request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_prepareRename">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameRange.Range">
            <summary>
            Gets or sets the range of the string to rename.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.RenameRange.Placeholder">
            <summary>
            Gets or sets the placeholder text of the string content to be renamed.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ResolveSupportSetting">
             <summary>
             Class which represents initialization setting for properties a client can resolve lazily on a completion item.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#completionClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ResolveSupportSetting.Properties">
            <summary>
            Gets or sets a value indicating the properties that a client can resolve lazily.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ResourceOperationKind">
             <summary>
             Value representing the kind of resource operations supported by the client.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#resourceOperationKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.ResourceOperationKind.#ctor(System.String)">
             <summary>
             Value representing the kind of resource operations supported by the client.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#resourceOperationKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.ResourceOperationKind.Create">
            <summary>
            Supports creating new files and folders.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.ResourceOperationKind.Rename">
            <summary>
            Supports renaming existing files and folders.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.ResourceOperationKind.Delete">
            <summary>
            Supports deleting existing files and folders.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SaveOptions">
             <summary>
             Class which represents save option configurations.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#saveOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SaveOptions.IncludeText">
            <summary>
            Gets or sets a value indicating whether clients include text content on save.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokenFormat">
             <summary>
             Value representing the format used to describe semantic tokens.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#tokenFormat">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SemanticTokenFormat.#ctor(System.String)">
             <summary>
             Value representing the format used to describe semantic tokens.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#tokenFormat">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenFormat.Relative">
            <summary>
            Tokens are described using relative positions.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers">
            <summary>
            Well-known semantic token modifiers.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers.Declaration">
            <summary>
            Semantic token modifier for 'declaration'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers.Definition">
            <summary>
            Semantic token modifier for 'definition'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers.Readonly">
            <summary>
            Semantic token modifier for 'readonly'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers.Static">
            <summary>
            Semantic token modifier for 'static'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers.Deprecated">
            <summary>
            Semantic token modifier for 'deprecated'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers.Abstract">
            <summary>
            Semantic token modifier for 'abstract'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers.Async">
            <summary>
            Semantic token modifier for 'async'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers.Modification">
            <summary>
            Semantic token modifier for 'modification'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers.Documentation">
            <summary>
            Semantic token modifier for 'documentation'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers.DefaultLibrary">
            <summary>
            Semantic token modifier for 'defaultLibrary'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenModifiers.AllModifiers">
            <summary>
            Collection containing all well-known semantic tokens modifiers.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokens">
             <summary>
             Class representing response to semantic tokens messages.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokens">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokens.ResultId">
            <summary>
            Gets or sets a property that identifies this version of the document's semantic tokens.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokens.Data">
            <summary>
            Gets or sets and array containing encoded semantic tokens data.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensDelta">
             <summary>
             Represents a response from a semantic tokens Document provider Edits request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensDelta">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensDelta.ResultId">
            <summary>
            Gets or sets the Id for the client's new version after applying all
            edits to their current semantic tokens data.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensDelta.Edits">
            <summary>
            Gets or sets an array of edits to apply to a previous response from a
            semantic tokens Document provider.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensDeltaParams">
             <summary>
             Parameters for a request for Edits that can be applied to a previous response
             from a semantic tokens Document provider.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensDeltaParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensDeltaParams.TextDocument">
            <summary>
            Gets or sets an identifier for the document to fetch semantic tokens from.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensDeltaParams.PreviousResultId">
            <summary>
            Gets or sets a property indicating the version of the semantic
            tokens Document provider response that the edits will be applied to.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensDeltaParams.PartialResultToken">
            <summary>
            Gets or sets the value of the Progress instance.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensDeltaPartialResult">
             <summary>
             Represents a response from a semantic tokens Document provider Edits request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensDeltaPartialResult">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensDeltaPartialResult.Edits">
            <summary>
            Gets or sets an array of edits to apply to a previous response from a
            semantic tokens Document provider.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensEdit">
             <summary>
             Class representing an individual edit incrementally applied to a previous
             semantic tokens response from the Document provider.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensEdit">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensEdit.Start">
            <summary>
            Gets or sets the position in the previous response's <see cref="P:Roslyn.LanguageServer.Protocol.SemanticTokens.Data"/>
            to begin the edit.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensEdit.DeleteCount">
            <summary>
            Gets or sets the number of numbers to delete in the <see cref="P:Roslyn.LanguageServer.Protocol.SemanticTokens.Data"/>
            from the previous response.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensEdit.Data">
            <summary>
            Gets or sets an array containing the encoded semantic tokens information to insert
            into a previous response.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SemanticTokensEdit.CompareTo(Roslyn.LanguageServer.Protocol.SemanticTokensEdit)">
            <summary>
            Compares two <see cref="T:Roslyn.LanguageServer.Protocol.SemanticTokensEdit"/>s based on their order.
            </summary>
            <param name="other">The other edit.</param>
            <returns>-1 if this item comes first and 1 if it comes second.</returns>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensFullOptions">
             <summary>
             Options for the full document semantic tokens classification provider.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensFullOptions.Delta">
            <summary>
            Gets or sets a value indicating whether the server supports deltas for full documents.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensLegend">
             <summary>
             Legend used to encode semantic token types in <see cref="P:Roslyn.LanguageServer.Protocol.SemanticTokens.Data"/>.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensLegend">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensLegend.TokenTypes">
            <summary>
            Gets or sets an array of token types that can be encoded in semantic tokens responses.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensLegend.TokenModifiers">
            <summary>
            Gets or sets an array of token modfiers that can be encoded in semantic tokens responses.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensOptions">
             <summary>
             Initialization options for semantic tokens support.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensOptions.Legend">
            <summary>
            Gets or sets a legend describing how semantic token types and modifiers are encoded in responses.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensOptions.Range">
            <summary>
            Gets or sets a value indicating whether semantic tokens Range provider requests are supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensOptions.Full">
            <summary>
            Gets or sets whether or not the server supports providing semantic tokens for a full document.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensParams">
             <summary>
             Parameters for semantic tokens full Document request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensParams.TextDocument">
            <summary>
            Gets or sets an identifier for the document to fetch semantic tokens from.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensParams.PartialResultToken">
            <summary>
            Gets or sets the value of the Progress instance.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensPartialResult">
             <summary>
             Class representing response to semantic tokens messages.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensPartialResult">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensPartialResult.Data">
            <summary>
            Gets or sets and array containing encoded semantic tokens data.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensRangeParams">
             <summary>
             Parameters for the semantic tokens Range request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensRangeParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensRangeParams.Range">
            <summary>
            Gets or sets the range within the document to fetch semantic tokens for.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensRequestsFullSetting">
             <summary>
             Client settings for semantic tokens related to the
             `textDocument/semanticTokens/full` message.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensRequestsFullSetting.Delta">
            <summary>
            Gets or sets a value indicating whether the client will send the
            <c>textDocument/semanticTokens/full/delta</c> request if the server
            provides a corresponding handler.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensRequestsSetting">
             <summary>
             Requests client settings for semantic tokens.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensRequestsSetting.Range">
            <summary>
            Gets or sets a value indicating whether the client will send the
            `textDocument/semanticTokens/range` request if the server provides a
            corresponding handler.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensRequestsSetting.Full">
            <summary>
            Gets or sets a value indicating whether the client will send the
            `textDocument/semanticTokens/full` request if the server provides a
            corresponding handler.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensSetting">
             <summary>
             Client settings for semantic tokens.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensSetting.Requests">
            <summary>
            Gets or sets a value indicating which requests the client supports and might send to the server
            depending on the server's capability.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensSetting.TokenTypes">
            <summary>
            Gets or sets an array of token types supported by the client for encoding
            semantic tokens.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensSetting.TokenModifiers">
            <summary>
            Gets or sets an array of token modifiers supported by the client for encoding
            semantic tokens.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensSetting.Formats">
            <summary>
            Gets or sets an array of formats the clients supports.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensSetting.OverlappingTokenSupport">
            <summary>
            Gets or sets a value indicating whether the client supports tokens that can overlap each other.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensSetting.MultilineTokenSupport">
            <summary>
            Gets or sets a value indicating whether the client supports tokens that can span multiple lines.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokensWorkspaceSetting">
             <summary>
             Capabilities specific to the semantic token requests scoped to the workspace.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#semanticTokensWorkspaceClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SemanticTokensWorkspaceSetting.RefreshSupport">
            <summary>
            Gets or sets a value indicating whether the client implementation
            supports a refresh request sent from the server to the client.
            </summary>
            <remarks>
            Note that this event is global and will force the client to refresh all
            semantic tokens currently shown.It should be used with absolute care
            and is useful for situation where a server for example detect a project
            wide change that requires such a calculation.
            </remarks>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SemanticTokenTypes">
            <summary>
            Well-known semantic tokens types.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Namespace">
            <summary>
            Semantic token modifier for 'namespace'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Type">
            <summary>
            Semantic token modifier for 'type'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Class">
            <summary>
            Semantic token modifier for 'class'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Enum">
            <summary>
            Semantic token modifier for 'enum'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Interface">
            <summary>
            Semantic token modifier for 'interface'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Struct">
            <summary>
            Semantic token modifier for 'struct'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.TypeParameter">
            <summary>
            Semantic token modifier for 'typeParameter'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Parameter">
            <summary>
            Semantic token modifier for 'parameter'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Variable">
            <summary>
            Semantic token modifier for 'variable'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Property">
            <summary>
            Semantic token modifier for 'property'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.EnumMember">
            <summary>
            Semantic token modifier for 'enumMember'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Event">
            <summary>
            Semantic token modifier for 'event'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Function">
            <summary>
            Semantic token modifier for 'function'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Method">
            <summary>
            Semantic token modifier for 'method'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Macro">
            <summary>
            Semantic token modifier for 'macro'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Keyword">
            <summary>
            Semantic token modifier for 'keyword'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Modifier">
            <summary>
            Semantic token modifier for 'modifier'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Comment">
            <summary>
            Semantic token modifier for 'comment'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.String">
            <summary>
            Semantic token modifier for 'string'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Number">
            <summary>
            Semantic token modifier for 'number'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Regexp">
            <summary>
            Semantic token modifier for 'regexp'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.Operator">
            <summary>
            Semantic token modifier for 'operator'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SemanticTokenTypes.AllTypes">
            <summary>
            Collection containing all well-known semantic tokens types.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ServerCapabilities">
             <summary>
             Class which represents server capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#serverCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.TextDocumentSync">
            <summary>
            Gets or sets the value which indicates how text document are synced.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.CompletionProvider">
            <summary>
            Gets or sets the value which indicates if completions are supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.HoverProvider">
            <summary>
            Gets or sets a value indicating whether the server provides hover support.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.SignatureHelpProvider">
            <summary>
            Gets or sets the value which indicates if signature help is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.DefinitionProvider">
            <summary>
            Gets or sets a value indicating whether go to definition is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.TypeDefinitionProvider">
            <summary>
            Gets or sets a value indicating whether go to type definition is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.ImplementationProvider">
            <summary>
            Gets or sets a value indicating whether go to implementation is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.ReferencesProvider">
            <summary>
            Gets or sets a value indicating whether find all references is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.DocumentHighlightProvider">
            <summary>
            Gets or sets a value indicating whether the server supports document highlight.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.DocumentSymbolProvider">
            <summary>
            Gets or sets a value indicating whether document symbols are supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.CodeActionProvider">
            <summary>
            Gets or sets a value indicating whether code actions are supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.CodeLensProvider">
            <summary>
            Gets or sets the value which indicates if code lens is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.DocumentLinkProvider">
            <summary>
            Gets or sets the value which indicates if document link is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.DocumentColorProvider">
            <summary>
            Gets or sets the value which indicates if document color is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.DocumentFormattingProvider">
            <summary>
            Gets or sets a value indicating whether document formatting is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.DocumentRangeFormattingProvider">
            <summary>
            Gets or sets a value indicating whether document range formatting is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.DocumentOnTypeFormattingProvider">
            <summary>
            Gets or sets the value which indicates if document on type formatting is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.RenameProvider">
            <summary>
            Gets or sets a value indicating whether rename is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.FoldingRangeProvider">
            <summary>
            Gets or sets the value which indicates if folding range is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.ExecuteCommandProvider">
            <summary>
            Gets or sets the value which indicates if execute command is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.WorkspaceSymbolProvider">
            <summary>
            Gets or sets a value indicating whether workspace symbols are supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.Experimental">
            <summary>
            Gets or sets experimental server capabilities.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.LinkedEditingRangeProvider">
            <summary>
            Gets or sets a value indicating whether the server supports linked editing range.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.SemanticTokensOptions">
            <summary>
            Gets or sets the value which indicates if semantic tokens is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.DiagnosticOptions">
            <summary>
            Gets or sets the value which indicates what support the server has for pull diagnostics.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ServerCapabilities.InlayHintOptions">
            <summary>
            Gets or sets the value which indicates what support the server has for inlay hints.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ShowMessageParams">
             <summary>
             Class which represents parameter sent with window/showMessage requests.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#window_showMessage">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ShowMessageParams.MessageType">
            <summary>
            Gets or sets the type of message.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ShowMessageParams.Message">
            <summary>
            Gets or sets the message.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.ShowMessageRequestParams">
             <summary>
             Class which represents parameter sent with window/showMessageRequest requests.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#showMessageRequestParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.ShowMessageRequestParams.Actions">
            <summary>
            Gets or sets an array of <see cref="T:Roslyn.LanguageServer.Protocol.MessageActionItem"/>s to present.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SignatureHelp">
             <summary>
             Class representing the signature of something callable. This class is returned from the textDocument/signatureHelp request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#signatureHelp">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelp.Signatures">
            <summary>
            Gets or sets an array of signatures associated with the callable item.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelp.ActiveSignature">
            <summary>
            Gets or sets the active signature. If the value is omitted or falls outside the range of Signatures it defaults to zero.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelp.ActiveParameter">
            <summary>
            Gets or sets the active parameter. If the value is omitted or falls outside the range of Signatures[ActiveSignature].Parameters it defaults to zero.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SignatureHelpContext">
             <summary>
             Class representing additional information about the context in which a signature help request is triggered.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#signatureHelpContext">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelpContext.TriggerKind">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.SignatureHelpTriggerKind"/> indicating how the signature help was triggered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelpContext.TriggerCharacter">
            <summary>
            Gets or sets the character that caused signature help to be triggered.
            This value is null when triggerKind is not TriggerCharacter.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelpContext.IsRetrigger">
            <summary>
            Gets or sets a value indicating whether signature help was already showing when it was triggered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelpContext.ActiveSignatureHelp">
            <summary>
            Gets or sets the currently active <see cref="T:Roslyn.LanguageServer.Protocol.SignatureHelp"/>.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SignatureHelpOptions">
             <summary>
             Class representing the options for signature help support.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#signatureHelpOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelpOptions.TriggerCharacters">
            <summary>
            Gets or sets the characters that trigger signature help automatically.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelpOptions.RetriggerCharacters">
            <summary>
            Gets or sets the characters that re-trigger signature help
            when signature help is already showing.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelpOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SignatureHelpParams">
             <summary>
             Class representing the parameters for the textDocument/signatureHelp request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#signatureHelpParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelpParams.Context">
            <summary>
            Gets or sets the signature help context.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SignatureHelpSetting">
             <summary>
             Class representing the signature help initialization setting.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#signatureHelpClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelpSetting.SignatureInformation">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.SignatureInformationSetting"/> information.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureHelpSetting.ContextSupport">
            <summary>
            Gets or sets a value indicating whether additional context information
            is supported for the `textDocument/signatureHelp` request.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SignatureHelpTriggerKind">
             <summary>
             Enum which represents the various ways in which completion can be triggered.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#signatureHelpTriggerKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SignatureHelpTriggerKind.Invoked">
            <summary>
            Signature help was invoked manually by the user or a command.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SignatureHelpTriggerKind.TriggerCharacter">
            <summary>
            Signature help was triggered by a trigger character.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SignatureHelpTriggerKind.ContentChange">
            <summary>
            Signature help was triggered by the cursor moving or by the document content changing.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SignatureInformation">
             <summary>
             Class representing a single signature of a callable item.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#signatureInformation">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureInformation.Label">
            <summary>
            Gets or sets the label of this signature.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureInformation.Documentation">
            <summary>
            Gets or sets the human-readable documentation of this signature.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureInformation.Parameters">
            <summary>
            Gets or sets the parameters of this signature.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SignatureInformationSetting">
             <summary>
             Class representing the signature information initialization setting.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#signatureHelpClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureInformationSetting.DocumentationFormat">
            <summary>
            Gets or sets the set of documentation formats the client supports.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SignatureInformationSetting.ParameterInformation">
            <summary>
            Gets or sets the parameter information the client supports.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SumType`2">
            <summary>
            Struct that may contain a <typeparamref name="T1"/> or a <typeparamref name="T2"/>.
            </summary>
            <typeparam name="T1">The first type this struct is designed to contain.</typeparam>
            <typeparam name="T2">The second type this struct is designed to contain.</typeparam>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/> struct containing a <typeparamref name="T1"/>.
            </summary>
            <param name="val">The value to store in the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/>.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.#ctor(`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/> struct containing a <typeparamref name="T2"/>.
            </summary>
            <param name="val">The value to store in the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/>.</param>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`2.Value">
            <inheritdoc/>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`2.First">
            <summary>
            Gets the value as the first specified type.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`2.Second">
            <summary>
            Gets the value as the second specified type.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.op_Implicit(`0)~Roslyn.LanguageServer.Protocol.SumType{`0,`1}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T1"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/>.
            </summary>
            <param name="val">Value to be wrapped.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.op_Implicit(`0)~System.Nullable{Roslyn.LanguageServer.Protocol.SumType{`0,`1}}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T1??"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/>.
            </summary>
            <param name="val">Value to be wrapped.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.op_Implicit(`1)~Roslyn.LanguageServer.Protocol.SumType{`0,`1}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T2"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/>.
            </summary>
            <param name="val">Value to be wrapped.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.op_Implicit(`1)~System.Nullable{Roslyn.LanguageServer.Protocol.SumType{`0,`1}}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T2??"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/>.
            </summary>
            <param name="val">Value to be wrapped.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1})~`0">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/> to an instance of <typeparamref name="T1"/>.
            </summary>
            <exception cref="T:System.InvalidCastException">Thrown if this instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/> does not contain an instance of <typeparamref name="T1"/>.</exception>
            <param name="sum">Instance to unwrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1})~`1">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/> to an instance of <typeparamref name="T2"/>.
            </summary>
            <exception cref="T:System.InvalidCastException">Thrown if this instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/> does not contain an instance of <typeparamref name="T2"/>.</exception>
            <param name="sum">Instance to unwrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.TryGetFirst(`0@)">
            <summary>
            Tries to get the value as the first specified type.
            </summary>
            <param name="value">the value in the specified type.</param>
            <returns><see langword="true"/> if the type matches.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.TryGetSecond(`1@)">
            <summary>
            Tries to get the value as the second specified type.
            </summary>
            <param name="value">the value in the specified type/>.</param>
            <returns><see langword="true"/> if the type matches.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.Match``1(System.Func{`0,``0},System.Func{`1,``0},System.Func{``0})">
            <summary>
            Runs a delegate corresponding to which type is contained inside this instance.
            </summary>
            <typeparam name="TResult">The type that all the delegates will return.</typeparam>
            <param name="firstMatch">Delegate to handle the case where this instance contains a <typeparamref name="T1"/>.</param>
            <param name="secondMatch">Delegate to handle the case where this instance contains a <typeparamref name="T2"/>.</param>
            <param name="defaultMatch">
            Delegate to handle the case where this instance is uninhabited. If this delegate isn't provided the default
            <typeparamref name="TResult"/> will be returned instead.
            </param>
            <returns>The <typeparamref name="TResult"/> instance created by the delegate corresponding to the current type stored in this instance.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.Equals(Roslyn.LanguageServer.Protocol.SumType{`0,`1})">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`2.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SumType`3">
            <summary>
            Struct that may contain a <typeparamref name="T1"/>, a <typeparamref name="T2"/>, or a <typeparamref name="T3"/>.
            </summary>
            <typeparam name="T1">The first type this struct is designed to contain.</typeparam>
            <typeparam name="T2">The second type this struct is designed to contain.</typeparam>
            <typeparam name="T3">The third type this struct is designed to contain.</typeparam>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/> struct containing a <typeparamref name="T1"/>.
            </summary>
            <param name="val">The value to store in the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/>.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.#ctor(`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/> struct containing a <typeparamref name="T2"/>.
            </summary>
            <param name="val">The value to store in the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/>.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.#ctor(`2)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/> struct containing a <typeparamref name="T3"/>.
            </summary>
            <param name="val">The value to store in the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/>.</param>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`3.Value">
            <inheritdoc/>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`3.First">
            <summary>
            Gets the value as the first specified type.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`3.Second">
            <summary>
            Gets the value as the second specified type.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`3.Third">
            <summary>
            Gets the value as the third specified type.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.op_Implicit(`0)~Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T1"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/>.
            </summary>
            <param name="val">Value to be wrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.op_Implicit(`0)~System.Nullable{Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2}}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T1??"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/>.
            </summary>
            <param name="val">Value to be wrapped.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.op_Implicit(`1)~Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T2"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/>.
            </summary>
            <param name="val">Value to be wrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.op_Implicit(`1)~System.Nullable{Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2}}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T2??"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/>.
            </summary>
            <param name="val">Value to be wrapped.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.op_Implicit(`2)~Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T3"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/>.
            </summary>
            <param name="val">Value to be wrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.op_Implicit(`2)~System.Nullable{Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2}}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T3??"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/>.
            </summary>
            <param name="val">Value to be wrapped.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.op_Implicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1})~Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2}">
            <summary>
            Implicitly wraps an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/>.
            </summary>
            <param name="sum">Sum instance to wrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2})~Roslyn.LanguageServer.Protocol.SumType{`0,`1}">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/> into a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/>.
            </summary>
            <param name="sum">Sum instance to downcast.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2})~`0">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/> to an instance of <typeparamref name="T1"/>.
            </summary>
            <exception cref="T:System.InvalidCastException">Thrown if this instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/> does not contain an instance of <typeparamref name="T1"/>.</exception>
            <param name="sum">Instance to unwrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2})~`1">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/> to an instance of <typeparamref name="T2"/>.
            </summary>
            <exception cref="T:System.InvalidCastException">Thrown if this instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/> does not contain an instance of <typeparamref name="T2"/>.</exception>
            <param name="sum">Instance to unwrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2})~`2">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/> to an instance of <typeparamref name="T3"/>.
            </summary>
            <exception cref="T:System.InvalidCastException">Thrown if this instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/> does not contain an instance of <typeparamref name="T3"/>.</exception>
            <param name="sum">Instance to unwrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.TryGetFirst(`0@)">
            <summary>
            Tries to get the value as the first specified type.
            </summary>
            <param name="value">the value in the specified type/>.</param>
            <returns><see langword="true"/> if the type matches.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.TryGetSecond(`1@)">
            <summary>
            Tries to get the value as the second specified type.
            </summary>
            <param name="value">the value in the specified type/>.</param>
            <returns><see langword="true"/> if the type matches.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.TryGetThird(`2@)">
            <summary>
            Tries to get the value as the third specified type.
            </summary>
            <param name="value">the value in the specified type/>.</param>
            <returns><see langword="true"/> if the type matches.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.Match``1(System.Func{`0,``0},System.Func{`1,``0},System.Func{`2,``0},System.Func{``0})">
            <summary>
            Runs a delegate corresponding to which type is contained inside this instance.
            </summary>
            <typeparam name="TResult">The type that all the delegates will return.</typeparam>
            <param name="firstMatch">Delegate to handle the case where this instance contains a <typeparamref name="T1"/>.</param>
            <param name="secondMatch">Delegate to handle the case where this instance contains a <typeparamref name="T2"/>.</param>
            <param name="thirdMatch">Delegate to handle the case where this instance contains a <typeparamref name="T3"/>.</param>
            <param name="defaultMatch">
            Delegate to handle the case where this instance is uninhabited. If this delegate isn't provided the default
            <typeparamref name="TResult"/> will be returned instead.
            </param>
            <returns>The <typeparamref name="TResult"/> instance created by the delegate corresponding to the current type stored in this instance.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.Equals(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2})">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`3.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SumType`4">
            <summary>
            Struct that may contain a <typeparamref name="T1"/>, a <typeparamref name="T2"/>, a <typeparamref name="T3"/>, or a <typeparamref name="T4"/>.
            </summary>
            <typeparam name="T1">The first type this struct is designed to contain.</typeparam>
            <typeparam name="T2">The second type this struct is designed to contain.</typeparam>
            <typeparam name="T3">The third type this struct is designed to contain.</typeparam>
            <typeparam name="T4">The fourth type this struct is designed to contain.</typeparam>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> struct containing a <typeparamref name="T1"/>.
            </summary>
            <param name="val">The value to store in the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.#ctor(`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> struct containing a <typeparamref name="T2"/>.
            </summary>
            <param name="val">The value to store in the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.#ctor(`2)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> struct containing a <typeparamref name="T3"/>.
            </summary>
            <param name="val">The value to store in the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.#ctor(`3)">
            <summary>
            Initializes a new instance of the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> struct containing a <typeparamref name="T4"/>.
            </summary>
            <param name="val">The value to store in the <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.</param>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`4.Value">
            <inheritdoc/>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`4.First">
            <summary>
            Gets the value as the first specified type.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`4.Second">
            <summary>
            Gets the value as the second specified type.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`4.Third">
            <summary>
            Gets the value as the third specified type.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SumType`4.Fourth">
            <summary>
            Gets the value as the fourth specified type.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Implicit(`0)~Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T1"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.
            </summary>
            <param name="val">Value to be wrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Implicit(`0)~System.Nullable{Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3}}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T1??"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.
            </summary>
            <param name="val">Value to be wrapped.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Implicit(`1)~Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T2"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.
            </summary>
            <param name="val">Value to be wrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Implicit(`1)~System.Nullable{Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3}}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T2??"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.
            </summary>
            <param name="val">Value to be wrapped.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Implicit(`2)~Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T3"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.
            </summary>
            <param name="val">Value to be wrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Implicit(`2)~System.Nullable{Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3}}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T3??"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.
            </summary>
            <param name="val">Value to be wrapped.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Implicit(`3)~Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T4"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.
            </summary>
            <param name="val">Value to be wrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Implicit(`3)~System.Nullable{Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3}}">
            <summary>
            Implicitly wraps a value of type <typeparamref name="T4??"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.
            </summary>
            <param name="val">Value to be wrapped.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Implicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1})~Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3}">
            <summary>
            Implicitly wraps an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.
            </summary>
            <param name="sum">Sum instance to wrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Implicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2})~Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3}">
            <summary>
            Implicitly wraps an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/> with a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/>.
            </summary>
            <param name="sum">Sum instance to wrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3})~Roslyn.LanguageServer.Protocol.SumType{`0,`1}">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> into a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`2"/>.
            </summary>
            <param name="sum">Sum instance to downcast.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3})~Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2}">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> into a <see cref="T:Roslyn.LanguageServer.Protocol.SumType`3"/>.
            </summary>
            <param name="sum">Sum instance to downcast.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3})~`0">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> to an instance of <typeparamref name="T1"/>.
            </summary>
            <exception cref="T:System.InvalidCastException">Thrown if this instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> does not contain an instance of <typeparamref name="T1"/>.</exception>
            <param name="sum">Instance to unwrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3})~`1">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> to an instance of <typeparamref name="T2"/>.
            </summary>
            <exception cref="T:System.InvalidCastException">Thrown if this instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> does not contain an instance of <typeparamref name="T2"/>.</exception>
            <param name="sum">Instance to unwrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3})~`2">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> to an instance of <typeparamref name="T3"/>.
            </summary>
            <exception cref="T:System.InvalidCastException">Thrown if this instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> does not contain an instance of <typeparamref name="T3"/>.</exception>
            <param name="sum">Instance to unwrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.op_Explicit(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3})~`3">
            <summary>
            Attempts to cast an instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> to an instance of <typeparamref name="T4"/>.
            </summary>
            <exception cref="T:System.InvalidCastException">Thrown if this instance of <see cref="T:Roslyn.LanguageServer.Protocol.SumType`4"/> does not contain an instance of <typeparamref name="T4"/>.</exception>
            <param name="sum">Instance to unwrap.</param>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.TryGetFirst(`0@)">
            <summary>
            Tries to get the value as the first specified type.
            </summary>
            <param name="value">the value in the specified type/>.</param>
            <returns><see langword="true"/> if the type matches.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.TryGetSecond(`1@)">
            <summary>
            Tries to get the value as the second specified type.
            </summary>
            <param name="value">the value in the specified type/>.</param>
            <returns><see langword="true"/> if the type matches.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.TryGetThird(`2@)">
            <summary>
            Tries to get the value as the third specified type.
            </summary>
            <param name="value">the value in the specified type/>.</param>
            <returns><see langword="true"/> if the type matches.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.TryGetFourth(`3@)">
            <summary>
            Tries to get the value as the fourth specified type.
            </summary>
            <param name="value">the value in the specified type/>.</param>
            <returns><see langword="true"/> if the type matches.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.Match``1(System.Func{`0,``0},System.Func{`1,``0},System.Func{`2,``0},System.Func{`3,``0},System.Func{``0})">
            <summary>
            Runs a delegate corresponding to which type is contained inside this instance.
            </summary>
            <typeparam name="TResult">The type that all the delegates will return.</typeparam>
            <param name="firstMatch">Delegate to handle the case where this instance contains a <typeparamref name="T1"/>.</param>
            <param name="secondMatch">Delegate to handle the case where this instance contains a <typeparamref name="T2"/>.</param>
            <param name="thirdMatch">Delegate to handle the case where this instance contains a <typeparamref name="T3"/>.</param>
            <param name="fourthMatch">Delegate to handle the case where this instance contains a <typeparamref name="T4"/>.</param>
            <param name="defaultMatch">
            Delegate to handle the case where this instance is uninhabited. If this delegate isn't provided the default
            <typeparamref name="TResult"/> will be returned instead.
            </param>
            <returns>The <typeparamref name="TResult"/> instance created by the delegate corresponding to the current type stored in this instance.</returns>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.Equals(Roslyn.LanguageServer.Protocol.SumType{`0,`1,`2,`3})">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumType`4.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SumTypeUtils">
            <summary>
            Utility methods for <see cref="T:Roslyn.LanguageServer.Protocol.ISumType"/> implementations.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SumTypeUtils.ValidateTypeParameter(System.Type)">
            <summary>
            Validates that <paramref name="type"/> is a valid type parameter for a SumType.
            </summary>
            <param name="type">The type to validate.</param>
            <exception cref="T:System.NotSupportedException">If <paramref name="type"/> is not supported as a type parameter for a
            SumType.</exception>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SymbolInformation">
             <summary>
             Class representing information about programming constructs like variables, classes, interfaces, etc.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#symbolInformation">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SymbolInformation.Name">
            <summary>
            Gets or sets the name of this symbol.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SymbolInformation.Kind">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.SymbolKind"/> of this symbol.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SymbolInformation.Location">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.Location"/> of this symbol.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SymbolInformation.ContainerName">
            <summary>
            Gets or sets the name of the symbol containing this symbol.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SymbolInformation.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SymbolInformation.Equals(Roslyn.LanguageServer.Protocol.SymbolInformation)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.SymbolInformation.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SymbolKind">
             <summary>
             Enum which represents the various kinds of symbols.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#symbolKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.File">
            <summary>
            Symbol is a file.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Module">
            <summary>
            Symbol is a module.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Namespace">
            <summary>
            Symbol is a namespace.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Package">
            <summary>
            Symbol is a package.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Class">
            <summary>
            Symbol is a class.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Method">
            <summary>
            Symbol is a method.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Property">
            <summary>
            Symbol is a property.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Field">
            <summary>
            Symbol is a field.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Constructor">
            <summary>
            Symbol is a constructor.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Enum">
            <summary>
            Symbol is an enum.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Interface">
            <summary>
            Symbol is an interface.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Function">
            <summary>
            Symbol is a function.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Variable">
            <summary>
            Symbol is a variable.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Constant">
            <summary>
            Symbol is a constant.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.String">
            <summary>
            Symbol is a string.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Number">
            <summary>
            Symbol is a number.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Boolean">
            <summary>
            Symbol is a boolean.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Array">
            <summary>
            Symbol is an array.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Object">
            <summary>
            Symbol is an object.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Key">
            <summary>
            Symbol is a key.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Null">
            <summary>
            Symbol is null.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.EnumMember">
            <summary>
            Symbol is an enum member.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Struct">
            <summary>
            Symbol is a struct.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Event">
            <summary>
            Symbol is an event.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.Operator">
            <summary>
            Symbol is an operator.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.SymbolKind.TypeParameter">
            <summary>
            Symbol is a type parameter.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SymbolKindSetting">
             <summary>
             Class representing the symbol kind setting in initialization.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#documentSymbolClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SymbolKindSetting.ValueSet">
            <summary>
            Gets or sets the types of symbol kind the client supports.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SymbolSetting">
             <summary>
             Class representing the symbol setting for initialization.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#workspace_symbol">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SymbolSetting.SymbolKind">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.SymbolKindSetting"/> information.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.SynchronizationSetting">
             <summary>
             Class which represents synchronization initialization setting.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocumentSyncClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SynchronizationSetting.WillSave">
            <summary>
            Gets or sets a value indicating whether WillSave event is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SynchronizationSetting.WillSaveWaitUntil">
            <summary>
            Gets or sets a value indicating whether WillSaveWaitUntil event is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.SynchronizationSetting.DidSave">
            <summary>
            Gets or sets a value indicating whether DidSave event is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TagSupport">
             <summary>
             Class representing the <see cref="T:Roslyn.LanguageServer.Protocol.TagSupport"/> capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#publishDiagnosticsClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TagSupport.ValueSet">
            <summary>
            Gets or sets a value indicating the tags supported by the client.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities">
             <summary>
             Class which represents text document capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocumentClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.Synchronization">
            <summary>
            Gets or sets the synchronization setting.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.Completion">
            <summary>
            Gets or sets the completion setting.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.Hover">
            <summary>
            Gets or sets the setting which determines if hover can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.SignatureHelp">
            <summary>
            Gets or sets the setting which determines if signature help can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.Definition">
            <summary>
            Gets or sets the setting which determines if definition can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.TypeDefinition">
            <summary>
            Gets or sets the settings which determines if type definition can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.Implementation">
            <summary>
            Gets or sets the settings which determines if implementation can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.References">
            <summary>
            Gets or sets the setting which determines if references can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.DocumentHighlight">
            <summary>
            Gets or sets the setting which determines if document highlight can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.DocumentSymbol">
            <summary>
            Gets or sets the setting which determines if document symbol can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.CodeAction">
            <summary>
            Gets or sets the setting which determines if code action can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.CodeLens">
            <summary>
            Gets or sets the setting which determines if code lens can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.DocumentLink">
            <summary>
            Gets or sets the setting which determines if document link can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.Formatting">
            <summary>
            Gets or sets the setting which determines if formatting can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.RangeFormatting">
            <summary>
            Gets or sets the setting which determines if range formatting can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.OnTypeFormatting">
            <summary>
            Gets or sets the setting which determines if on type formatting can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.Rename">
            <summary>
            Gets or sets the setting which determines if rename can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.PublishDiagnostics">
            <summary>
            Gets or sets the setting publish diagnostics setting.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.FoldingRange">
            <summary>
            Gets or sets the setting which determines how folding range is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.LinkedEditingRange">
            <summary>
            Gets or sets the setting which determines if linked editing range can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.SemanticTokens">
            <summary>
            Gets or sets a setting indicating whether semantic tokens is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.Diagnostic">
            <summary>
            Gets or sets the setting which determines what support the client has for pull diagnostics.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentClientCapabilities.InlayHint">
            <summary>
            Gets or sets the setting which determines what support the client has for pull diagnostics.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextDocumentContentChangeEvent">
             <summary>
             Class which encapsulates a text document changed event.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocumentContentChangeEvent">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentContentChangeEvent.Range">
            <summary>
            Gets or sets the range of the text that was changed.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentContentChangeEvent.RangeLength">
            <summary>
            Gets or sets the length of the range that got replaced.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentContentChangeEvent.Text">
            <summary>
            Gets or sets the new text of the range/document.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextDocumentEdit">
             <summary>
             Class representing a set of changes to a single text document.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocumentEdit">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentEdit.TextDocument">
            <summary>
            Gets or sets a document identifier indication which document to apply the edits to.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentEdit.Edits">
            <summary>
            Gets or sets the array of edits to be applied to the document.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier">
             <summary>
             Class which identifies a text document.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocumentIdentifier">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier.Uri">
            <summary>
            Gets or sets the URI of the text document.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier.Equals(Roslyn.LanguageServer.Protocol.TextDocumentIdentifier)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextDocumentItem">
             <summary>
             Class which represents a text document.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocumentItem">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentItem.Uri">
            <summary>
            Gets or sets the document URI.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentItem.LanguageId">
            <summary>
            Gets or sets the document language identifier.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentItem.Version">
            <summary>
            Gets or sets the document version.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentItem.Text">
            <summary>
            Gets or sets the content of the opened text document.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextDocumentPositionParams">
             <summary>
             Class which represents a position within a text document.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocumentPositionParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentPositionParams.TextDocument">
            <summary>
            Gets or sets the value which identifies the document.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentPositionParams.Position">
            <summary>
            Gets or sets the value which indicates the position within the document.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextDocumentRegistrationOptions">
             <summary>
             Class representing the registration options for many different text document functions.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocumentRegistrationOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentRegistrationOptions.DocumentSelector">
            <summary>
            Gets or sets the document filters for this registration option.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextDocumentSaveReason">
             <summary>
             Enum representing the reason a document was saved.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocumentSaveReason">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.TextDocumentSaveReason.Manual">
            <summary>
            Save was manually triggered.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.TextDocumentSaveReason.AfterDelay">
            <summary>
            Save was automatic after some delay.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.TextDocumentSaveReason.FocusOut">
            <summary>
            Save was automatic after the editor lost focus.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextDocumentSyncKind">
             <summary>
             Enum which represents the various ways to sync text documents.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocumentSyncKind">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.TextDocumentSyncKind.None">
            <summary>
            Documents should not be synced at all.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.TextDocumentSyncKind.Full">
            <summary>
            Documents are synced by always sending the full text.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.TextDocumentSyncKind.Incremental">
            <summary>
            Documents are synced by sending only incremental updates.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextDocumentSyncOptions">
             <summary>
             Class which represents configuration values indicating how text documents should be synced.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocumentSyncOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentSyncOptions.OpenClose">
            <summary>
            Gets or sets a value indicating whether open and close notifications are sent to the server.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentSyncOptions.Change">
            <summary>
            Gets or sets the value indicating how text documents are synced with the server.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentSyncOptions.WillSave">
            <summary>
            Gets or sets a value indicating whether 'will save' notifications are sent to the server.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentSyncOptions.WillSaveWaitUntil">
            <summary>
            Gets or sets a value indicating whether 'will save until' notifications are sent to the server.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextDocumentSyncOptions.Save">
            <summary>
            Gets or sets a value indicating whether save notifications are sent to the server.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TextEdit">
             <summary>
             Class which represents a text edit to a document.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textEdit">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextEdit.Range">
            <summary>
            Gets or sets the value which indicates the range of the text edit.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TextEdit.NewText">
            <summary>
            Gets or sets the value of the new text.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TraceSetting">
             <summary>
             Value representing the language server trace setting.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#traceValue">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.TraceSetting.#ctor(System.String)">
             <summary>
             Value representing the language server trace setting.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#traceValue">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.TraceSetting.Off">
            <summary>
            Setting for 'off'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.TraceSetting.Messages">
            <summary>
            Setting for 'messages'.
            </summary>
        </member>
        <member name="F:Roslyn.LanguageServer.Protocol.TraceSetting.Verbose">
            <summary>
            Setting for 'verbose'.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.TypeDefinitionOptions">
             <summary>
             Class which represents workspace symbols capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#typeDefinitionOption">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.TypeDefinitionOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.UnchangedDocumentDiagnosticReport">
             <summary>
             Class representing a diagnostic report indicating that the last returned report is still accurate.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#unchangedDocumentDiagnosticReport">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.UnchangedDocumentDiagnosticReport.Kind">
            <summary>
            Gets the kind of this report.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.UnchangedDocumentDiagnosticReport.ResultId">
            <summary>
            Gets or sets the optional result id.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.Unregistration">
             <summary>
             Class representing the information needed for unregistering a capability.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#unregistration">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Unregistration.Id">
            <summary>
            Gets or sets the id of the unregistration.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.Unregistration.Method">
            <summary>
            Gets or sets the method to unregister.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.UnregistrationParams">
             <summary>
             Class representing the parameter sent for the client/unregisterCapability request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#unregistrationParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.UnregistrationParams.Unregistrations">
            <summary>
            Gets or sets the capabilities to unregister.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.VersionedTextDocumentIdentifier">
             <summary>
             Class which represents a text document, but has a version identifier.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#versionedTextDocumentIdentifier">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.VersionedTextDocumentIdentifier.Version">
            <summary>
            Gets or sets the version of the document.
            </summary>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VersionedTextDocumentIdentifier.Equals(Roslyn.LanguageServer.Protocol.VersionedTextDocumentIdentifier)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VersionedTextDocumentIdentifier.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VersionedTextDocumentIdentifier.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Roslyn.LanguageServer.Protocol.VersionedTextDocumentIdentifier.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.WillSaveTextDocumentParams">
             <summary>
             Class representing the parameters sent for the textDocument/willSave request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#willSaveTextDocumentParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WillSaveTextDocumentParams.TextDocument">
            <summary>
            Gets or sets the <see cref="T:Roslyn.LanguageServer.Protocol.TextDocumentIdentifier"/> representing the document to be saved.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WillSaveTextDocumentParams.Reason">
            <summary>
            Gets or sets the reason that the text document was saved.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities">
             <summary>
             Class which represents workspace capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#clientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities.ApplyEdit">
            <summary>
            Gets or sets a value indicating whether apply edit is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities.WorkspaceEdit">
            <summary>
            Gets or sets the workspace edit setting.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities.DidChangeConfiguration">
            <summary>
            Gets or sets the setting which determines if did change configuration can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities.DidChangeWatchedFiles">
            <summary>
            Gets or sets the setting which determines if did change watched files can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities.Symbol">
            <summary>
            Gets or sets the setting which determines if symbols can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities.ExecuteCommand">
            <summary>
            Gets or sets the setting which determines if execute command can be dynamically registered.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities.SemanticTokens">
            <summary>
            Gets or sets capabilities specific to the semantic token requests scoped to the workspace.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities.Diagnostics">
            <summary>
            Gets or sets capabilities indicating what support the client has for workspace pull diagnostics.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities.Configuration">
            <summary>
            Gets or sets the capabilities if client support 'workspace/configuration' requests.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities.InlayHint">
            <summary>
            Gets of sets capabilities specific to the inlay hint requests scoped to the workspace.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceClientCapabilities.CodeLens">
            <summary>
            Gets of sets capabilities specific to the code lens requests scoped to the workspace.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticParams">
             <summary>
             Class representing the workspace diagnostic request parameters
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspaceDiagnosticParams">Language Server Protocol specification</see> for additional information.
             </summary>
             <remarks>
             Note that the first literal send needs to be a <see cref="T:Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticReport"/>
             followed by n <see cref="T:Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticReportPartialResult"/> literals.
             </remarks>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticParams.PartialResultToken">
            <summary>
            Gets or sets the value of the Progress instance.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticParams.Identifier">
            <summary>
            Gets or sets the identifier for which the client is requesting diagnostics for.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticParams.PreviousResultId">
            <summary>
            Gets or sets the result id of a previous diagnostics response if provided.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticReport">
             <summary>
             Class representing a workspace diagnostic report.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspaceDiagnosticReport">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticReport.Items">
            <summary>
            Gets or sets the items in this diagnostic report.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticReportPartialResult">
             <summary>
             Class representing a partial result for a workspace diagnostic report.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspaceDiagnosticReportPartialResult">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceDiagnosticReportPartialResult.Items">
            <summary>
            Gets or sets the items in this diagnostic report.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.WorkspaceEdit">
             <summary>
             Class representing a request sent from a language server to modify resources in the workspace.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#workspaceEdit">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceEdit.Changes">
            <summary>
            Gets or sets a dictionary holding changes to existing resources.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceEdit.DocumentChanges">
            <summary>
            Gets or sets an array representing versioned document changes.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.WorkspaceEditSetting">
             <summary>
             Class which represents initialization settings for workspace edit.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#workspaceEditClientCapabilities">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceEditSetting.DocumentChanges">
            <summary>
            Gets or sets a value indicating whether document changes event is supported.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceEditSetting.ResourceOperations">
            <summary>
            GEts or sets the resource operations the client supports.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.WorkspaceFullDocumentDiagnosticReport">
             <summary>
             Class representing a full document diagnostic report for workspace diagnostic result.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspaceFullDocumentDiagnosticReport">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceFullDocumentDiagnosticReport.Uri">
            <summary>
            Gets or sets the URI associated with this diagnostic report.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceFullDocumentDiagnosticReport.Version">
            <summary>
            Gets or sets the version number for which the diagnostics are reported.
            If the document is not marked as open 'null' can be provided.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.WorkspaceSymbolOptions">
             <summary>
             Class which represents workspace symbols capabilities.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#workspaceSymbolOptions">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceSymbolOptions.WorkDoneProgress">
            <summary>
            Gets or sets a value indicating whether work done progress is supported.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.WorkspaceSymbolParams">
             <summary>
             Class which represents the parameter that's sent with the 'workspace/symbol' request.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/specification-current/#workspaceSymbolParams">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceSymbolParams.Query">
            <summary>
            Gets or sets the query (a non-empty string).
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceSymbolParams.PartialResultToken">
            <summary>
            Gets or sets the value of the Progress instance.
            </summary>
        </member>
        <member name="T:Roslyn.LanguageServer.Protocol.WorkspaceUnchangedDocumentDiagnosticReport">
             <summary>
             Class representing a unchanged document diagnostic report for workspace diagnostic result.
            
             See the <see href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspaceUnchangedDocumentDiagnosticReport">Language Server Protocol specification</see> for additional information.
             </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceUnchangedDocumentDiagnosticReport.Uri">
            <summary>
            Gets or sets the URI associated with this diagnostic report.
            </summary>
        </member>
        <member name="P:Roslyn.LanguageServer.Protocol.WorkspaceUnchangedDocumentDiagnosticReport.Version">
            <summary>
            Gets or sets the version number for which the diagnostics are reported.
            If the document is not marked as open 'null' can be provided.
            </summary>
        </member>
    </members>
</doc>

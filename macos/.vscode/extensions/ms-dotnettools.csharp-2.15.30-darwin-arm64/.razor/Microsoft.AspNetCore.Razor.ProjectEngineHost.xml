<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.Razor.ProjectEngineHost</name>
    </assembly>
    <members>
        <member name="P:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.Could_not_read_value_JSON_token_was_0">
            <summary>Could not read value - JSON token was '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.FormatCould_not_read_value_JSON_token_was_0(System.Object)">
            <summary>Could not read value - JSON token was '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.Encountered_end_of_stream_before_end_of_object">
            <summary>Encountered end of stream before end of object.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.Encountered_unexpected_JSON_property_0">
            <summary>Encountered unexpected JSON property '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.FormatEncountered_unexpected_JSON_property_0(System.Object)">
            <summary>Encountered unexpected JSON property '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.Encountered_unexpected_JSON_token_0">
            <summary>Encountered unexpected JSON token '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.FormatEncountered_unexpected_JSON_token_0(System.Object)">
            <summary>Encountered unexpected JSON token '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.Expected_JSON_property_0_but_it_was_1">
            <summary>Expected JSON property '{0}', but it was '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.FormatExpected_JSON_property_0_but_it_was_1(System.Object,System.Object)">
            <summary>Expected JSON property '{0}', but it was '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.Expected_JSON_token_0_but_it_was_1">
            <summary>Expected JSON token '{0}', but it was '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.FormatExpected_JSON_token_0_but_it_was_1(System.Object,System.Object)">
            <summary>Expected JSON token '{0}', but it was '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.Unsupported_argument_kind">
            <summary>Unsupported argument kind: '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.FormatUnsupported_argument_kind(System.Object)">
            <summary>Unsupported argument kind: '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.Unsupported_argument_type">
            <summary>Unsupported argument type: '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.FormatUnsupported_argument_type(System.Object)">
            <summary>Unsupported argument type: '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Razor.ProjectEngineHost.Resources.SR.Unsupported_razor_project_info_version_encountered">
            <summary>Unsupported razor project info version encounted.</summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.Serialization.Json.JsonDataReader">
            <summary>
             This is an abstraction used to read JSON data. Currently, this
             wraps a <see cref="T:Newtonsoft.Json.JsonReader"/> from JSON.NET.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.Serialization.Json.JsonDataWriter">
            <summary>
             This is an abstraction used to write JSON data. Currently, this
             wraps a <see cref="T:Newtonsoft.Json.JsonWriter"/> from JSON.NET.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.Serialization.MessagePack.Formatters.TopLevelFormatter`1">
            <summary>
             A message pack formatter that can be serialized at the top-level.
             It will create a <see cref="T:Microsoft.AspNetCore.Razor.Serialization.MessagePack.Formatters.SerializerCachingOptions"/> instance if one isn't
             passed to <see cref="T:MessagePack.MessagePackSerializer"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.Serialization.MessagePack.Formatters.ValueFormatter`1">
            <summary>
             A message package formatter that cannot be serialized at the top-level. It expects a
             <see cref="T:Microsoft.AspNetCore.Razor.Serialization.MessagePack.Formatters.SerializerCachingOptions"/> instance to be passed to it.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.Serialization.MessagePack.Formatters.ValueFormatter`1.Skim(MessagePack.MessagePackReader@,Microsoft.AspNetCore.Razor.Serialization.MessagePack.Formatters.SerializerCachingOptions)">
            <summary>
             Partially deserializes an object and ensures that any cached references are handled. Descendents should override
             this method if they support skimming.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.Utilities.Delta.Compute``1(System.Collections.Immutable.ImmutableArray{``0},System.Collections.Immutable.ImmutableArray{``0})">
            <summary>
             Compares <paramref name="first"/> and <paramref name="second"/> and returns the items in
             <paramref name="second"/> that are not in <paramref name="first"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.Utilities.FilePathNormalizer.GetNormalizedDirectoryName(System.String)">
            <summary>
             Returns the directory portion of the given file path in normalized form.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.Utilities.FilePathNormalizer.NormalizeCore(System.ReadOnlySpan{System.Char},System.Span{System.Char})">
            <summary>
             Normalizes the given <paramref name="source"/> file path and writes the result in <paramref name="destination"/>.
            </summary>
            <param name="source">The span to normalize.</param>
            <param name="destination">The span to write to.</param>
            <returns>
             Returns a tuple containing the start index and length of the normalized path within <paramref name="destination"/>.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.Utilities.StringCache">
            <summary>
            This class helps de-duplicate dynamically created strings which might otherwise lead to memory bloat.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Razor.Utilities.StringCache.ExfiltratingEqualityComparer">
            <summary>
            This is a gross hack to do a sneaky and get the value inside the HashSet out given the lack of any Get operations in netstandard2.0.
            If we ever upgrade to 2.1 delete this and just use the built in TryGetValue method.
            </summary>
            <remarks>
            This is fragile on the ordering of the values passed to the EqualityComparer by HashSet.
            If that ever switches we have to react, if it becomes indeterminate we have to abandon this strategy.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Razor.Utilities.TagHelperCache.TryAddOrGet_NoLock(Microsoft.AspNetCore.Razor.Utilities.Checksum,Microsoft.AspNetCore.Razor.Language.TagHelperDescriptor)">
            <summary>
             Try to add the given tag helper to the cache. If it already exists, return the cached instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Razor.Utilities.UrlDecoder.CharToHexLookup">
            <summary>
             Map from an ASCII char to its hex value, e.g. arr['b'] == 11. 0xFF means it's not a hex digit.
            </summary>
        </member>
    </members>
</doc>

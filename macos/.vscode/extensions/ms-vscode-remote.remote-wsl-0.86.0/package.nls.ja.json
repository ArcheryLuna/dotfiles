{"command.connect":"WSL への接続","command.connectInNewWindow":"新しいウィンドウで WSL に接続する","command.connectUsingDistro":"ディストリビューションを使用して WSL に接続...","command.connectUsingDistroInNewWindow":"新しいウィンドウで Distro を使用して WSL に接続します...","command.explorer.addDistro":"ディストリビューションを追加する","command.explorer.connectInCurrentWindow":"現在のウィンドウで接続する","command.explorer.connectInNewWindow":"新しいウィンドウで接続する","command.explorer.deleteDistro":"Distro の削除","command.explorer.refresh":"最新の情報に更新","command.explorer.removeFolder":"最近使用したフォルダーを削除する","command.explorer.setDefaultDistro":"既定のディストリビューションとして設定","command.getHelp":"ヘルプ","command.getStarted":"WSL の使用を開始する","command.openFolder":"WSL でフォルダーを開く...","command.provideFeedback":"フィードバックの提供","command.reopenFromRecommendation":"WSL でフォルダーを開く","command.reopenInWSL":"WSL でフォルダーをもう一度開く...","command.reopenInWindows":"Windows でフォルダーをもう一度開く","command.reportIssue":"問題を英語で報告...","command.revealInExplorer":"エクスプローラーで表示する","command.showLog":"ログの表示","description":"Linux 用 Windows サブシステム (WSL) 内の任意のフォルダーを開き、Visual Studio Codeの完全な機能セットを利用します。","displayName":"WSL","indicator.workspaceSuffix":"WSL","remoteView.name":"WSL ターゲット","settings.remote.WSL.debug":"設定されている場合、WSL ログの出力にデバッグ情報が表示されます。","settings.remote.WSL.downloadInBackground":"設定すると、WSL 拡張機能はバックグラウンドで最新のサーバー ビルドをダウンロードします。これは、過去 2 週間に使用されたすべての WSL プラットフォームに対して行われます。","settings.remote.WSL.fileWatcher.polling":"設定されている場合、ポーリングは WSL1 内のファイル監視に使用されます。ポーリングは CPU を集中的に使用できますが、監視中にフォルダー名を変更できないという WSL1 の問題を修正します。このオプションを有効にするには再起動が必要です。","settings.remote.WSL.fileWatcher.pollingInterval":"`#remote.WSL.fileWatcher.polling#` が設定されている場合、WSL1 ディストリビューション内で使用されるファイル ウォッチャーのポーリング間隔 (ミリ秒単位)。\nこのオプションを有効にするには再起動が必要です。","settings.remote.WSL.useShellEnvironment":"設定されている場合、WSL ウィンドウは、開かれたシェルから環境を取得します。","settings.remote.WSL1.connectionMethod.deprecated":"使用されなくなりました。接続を WSL に転送するには、常に 'wsl.exe' が使用されるようになりました。","settings.remote.WSL2.connectionMethod.deprecated":"使用されなくなりました。接続を WSL に転送するために常に 'wsl.exe' が使用されるようになりました。","walkthrough.comeBack.description":"WSL ターミナルで ``code`` を実行すると、いつでも VS Code WSL セッションに簡単に戻ることができます。\n VS Code は、WSL に接続して自動的に起動します。","walkthrough.comeBack.imageAltText":"コード .command を実行している外部ターミナル","walkthrough.comeBack.title":"いつでも戻ってきてください","walkthrough.createProject.description":"WSL には独自のファイル システムがあり、[パフォーマンス](https://docs.microsoft.com/windows/wsl/compare-versions#performance-across-os-file-systems) ではプロジェクトを作成してアクセスする利点があります。\nVS Code では、WSL 拡張機能を使用してこのプロジェクトを開き、編集できます。WSL 内で最初のアプリを作成するための \n[方法を表示](https://code.visualstudio.com/docs/remote/wsl-tutorial) します。\n[WSL ファイル システムで新しいファイルを作成する](command:explorer.newFile)","walkthrough.createProject.title":"WSL は初めてですか? プロジェクト フォルダーを作成します。","walkthrough.exploreCommands.description":"WSLの機能は VS Codeに含まれており、いくつかのコマンドをに追加します。\n``F1`` を押してコマンド パレットを開き、 「WSL」\nと入力すると、それらを表示できます。VS Code の左下にある緑色のリモート インジケーターを使用して、コマンドのセットを開くこともできます。\n[リモート メニューを開く](command:workbench.action.remote.showMenu)","walkthrough.exploreCommands.imageAltText":"WSL コマンドのイメージ。","walkthrough.exploreCommands.title":"WSL の使用を開始する","walkthrough.installTools.description":"豊富な編集とデバッグ エクスペリエンスを入手するには、WSL でプロジェクトの言語、ツールセット、VS Code 拡張機能をインストールします。\n[WSL で拡張機能をインストールする](command:workbench.view.extensions)","walkthrough.installTools.title":"ツールのインストール","walkthrough.linuxEnv.description":"WSL 拡張機能は実際の Linux カーネルを使用してコマンドを実行します。\nWSL ターミナルでの ``uname`` の実行は、Linux 環境にいることを表します。\n[ターミナルを開いて Linux コマンドを試す](command:workbench.action.terminal.focus)","walkthrough.linuxEnv.imageAltText":"UNAME コマンドを表示する WSL ターミナル","walkthrough.linuxEnv.title":"実際の Linux 環境","walkthrough.openProject.description":"WSL ファイル システムにプロジェクトがあると、VS Code で直接開くことができます。\n[WSL でフォルダーを開く](command:remote-wsl.openFolder)","walkthrough.openProject.title":"プロジェクトがありますか? WSL で開きます。","walkthrough.openWindow.description":"WSL を活用するには、ローカル サーバー上で Linux コードを実行する WSL ウィンドウのディストリビューションに接続します。\n WSL の開始エクスペリエンスの次の手順を続行することもできます。\n[WSL ウィンドウに接続 (既定のディストリビューション)](command:remote-wsl.connectToWSLDefault)","walkthrough.openWindow.imageAltText":"WSL ウィンドウの画像","walkthrough.openWindow.title":"WSL ウィンドウを開く","walkthrough.runDebug.description":"WSL 拡張機能を使用すると、Linux アプリの実行とデバッグが簡単になります。\n実行およびデバッグ ビューを使用するか、``F5`` でアプリを実行します。ブレークポイントの設定、変数の検査、呼び出し履歴の移動を行うことができます。\n[デバッグ ビューを開いて実行する](command:workbench.view.debug)","walkthrough.runDebug.imageAltText":"WSL セッションでのデバッグ","walkthrough.runDebug.title":"実行とデバッグ","walkthrough.title":"WSL の使用を開始する","welcome.installDistro":"ディストリビューションを追加して WSL の使用を開始します。\n[ディストリビューションを追加する](command:remote-wsl.explorer.addDistro)","welcome.installWsl":"WSL の使用を開始するには、Linux 用 Windows サブシステムをインストールするか、[ヘルプ ビュー](command:~remote.helpPanel.focus) にアクセスします。"}

{"command.connect":"连接到 WSL","command.connectInNewWindow":"在新窗口中连接到 WSL","command.connectUsingDistro":"使用发行版连接到 WSL...","command.connectUsingDistroInNewWindow":"在新窗口中使用分行版连接到 WSL...","command.explorer.addDistro":"添加发行版","command.explorer.connectInCurrentWindow":"在当前窗口中连接","command.explorer.connectInNewWindow":"在新窗口中连接","command.explorer.deleteDistro":"删除发行版","command.explorer.refresh":"刷新","command.explorer.removeFolder":"删除最近使用的文件夹","command.explorer.setDefaultDistro":"设置为默认发行版","command.getHelp":"帮助","command.getStarted":"WSL 入门","command.openFolder":"在 WSL 中打开文件夹...","command.provideFeedback":"提供反馈","command.reopenFromRecommendation":"在 WSL 中打开文件夹","command.reopenInWSL":"在 WSL 中重新打开文件夹","command.reopenInWindows":"在 Windows 中重新打开文件夹","command.reportIssue":"报告问题...","command.revealInExplorer":"在文件资源管理器中显示","command.showLog":"显示日志","description":"打开适用于 Linux 的 Windows 子系统(WSL)中的任何文件夹，并利用 Visual Studio Code 的完整功能集。","displayName":"WSL","indicator.workspaceSuffix":"WSL","remoteView.name":"WSL 目标","settings.remote.WSL.debug":"如果已设置，WSL 日志中的输出将显示调试信息。","settings.remote.WSL.downloadInBackground":"如果设置，WSL 扩展将在后台下载最新的服务器内部版本。它会为过去 2 周内使用的所有 WSL 平台执行此操作。","settings.remote.WSL.fileWatcher.polling":"如果已设置，则轮询会用于在 WSL1 中监视文件。轮询可能占用大量 CPU，但可修复 WSL1 问题，即在监视时无法重命名文件夹。此选项需要重启才能生效。","settings.remote.WSL.fileWatcher.pollingInterval":"WSL1 发行版中使用的文件观察程序轮询间隔(以毫秒为单位)(如果已设置了 `#remote.WSL.fileWatcher.polling#`)。\n此选项需要重启才能生效。","settings.remote.WSL.useShellEnvironment":"如果已设置，WSL 窗口将从它打开的 shell 中获取环境。","settings.remote.WSL1.connectionMethod.deprecated":"不再使用，“wsl.exe”现在始终用于将连接转发到 WSL。","settings.remote.WSL2.connectionMethod.deprecated":"不再使用，“wsl.exe”现在始终用于将连接转发到 WSL。","walkthrough.comeBack.description":"在 WSL 终端中执行 ``code .`` 后，你可以随时轻松返回到 VS Code WSL 会话。\n VS Code 会自动启动并连接到 WSL。","walkthrough.comeBack.imageAltText":"运行代码 {0} 的外部终端。命令","walkthrough.comeBack.title":"随时返回","walkthrough.createProject.description":"WSL 有自己的文件系统，具有创建和访问项目的[性能](https://docs.microsoft.com/windows/wsl/compare-versions#performance-across-os-file-systems)优势。\n在 VS Code 中，可以使用 WSL 拓展打开和编辑此项目。\n[了解如何使用](https://code.visualstudio.com/docs/remote/wsl-tutorial)在 WSL 中创建第一个应用。\n[在 WSL 文件系统中创建新文件](command:explorer.newFile)","walkthrough.createProject.title":"不熟悉 WSL? 创建一个项目文件夹。","walkthrough.exploreCommands.description":"WSL 包含在 VS Code 中，并且可向 VS Code 添加多个命令。\n可以通过按 ``F1`` 打开命令面板并键入 “WSL”来显示它们。\n还可以通过 VS Code 左下角的绿色远程指示器打开命令集。\n[打开远程菜单](command:workbench.action.remote.showMenu)","walkthrough.exploreCommands.imageAltText":"WSL 命令的图像。","walkthrough.exploreCommands.title":"WSL 入门","walkthrough.installTools.description":"若要获得丰富的编辑和调试体验，请在 WSL 中安装项目的语言、工具集、VS Code 扩展。\n[在 WSL 中安装扩展](command:workbench.view.extensions)","walkthrough.installTools.title":"安装工具","walkthrough.linuxEnv.description":"WSL 拓展使用真实的 Linux 内核运行命令。\n在 WSL 终端中运行 ``uname`` 后，将显示你处于 Linux 环境中。\n[打开终端并试用 Linux 命令](command:workbench.action.terminal.focus)","walkthrough.linuxEnv.imageAltText":"显示 uname 命令的 WSL 终端","walkthrough.linuxEnv.title":"真正的 Linux 环境","walkthrough.openProject.description":"在 WSL 文件系统中有项目后，可以直接在 VS Code 中打开它。\n[在 WSL 中打开文件夹](command:remote-wsl.openFolder)","walkthrough.openProject.title":"已有项目? 在 WSL 中打开它。","walkthrough.openWindow.description":"若要利用 WSL 的优势，请连接到 WSL 窗口中的发行版，Linux 代码将在本地服务器上运行。\n你还可以继续执行 WSL 入门体验的后续步骤! \n[连接到 WSL (默认发行版)](command:remote-wsl.connectToWSLDefault)","walkthrough.openWindow.imageAltText":"WSL 窗口的图像。","walkthrough.openWindow.title":"打开 WSL 窗口","walkthrough.runDebug.description":"WSL 可让你轻松运行和调试 Linux 应用。\n使用运行和调试视图或 ``F5`` 运行应用。可以设置断点、检查变量并浏览调用堆栈。\n[打开运行和调试视图](command:workbench.view.debug)","walkthrough.runDebug.imageAltText":"WSL 会话中的调试","walkthrough.runDebug.title":"运行和调试","walkthrough.title":"WSL 入门","welcome.installDistro":"添加发行版以开始。\n[添加发行版](command:remote-wsl.explorer.addDistro)","welcome.installWsl":"安装适用于 Linux 的 Windows 子系统或访问[帮助视图](command:~remote.helpPanel.focus)以开始使用 WSL。"}

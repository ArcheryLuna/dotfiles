{"command.connect":"WSL에 연결","command.connectInNewWindow":"새 창에서 WSL에 연결","command.connectUsingDistro":"배포판을 사용하여 WSL에 연결...","command.connectUsingDistroInNewWindow":"새 창에서 Distro를 사용하여 WSL에 연결...","command.explorer.addDistro":"배포판 추가","command.explorer.connectInCurrentWindow":"현재 창에서 연결","command.explorer.connectInNewWindow":"새 창에서 연결","command.explorer.deleteDistro":"배포판 삭제","command.explorer.refresh":"새로 고침","command.explorer.removeFolder":"최근 폴더 제거","command.explorer.setDefaultDistro":"기본 배포판으로 설정","command.getHelp":"도움말","command.getStarted":"WSL 시작하기","command.openFolder":"WSL에서 폴더 열기...","command.provideFeedback":"피드백 제공","command.reopenFromRecommendation":"WSL에서 폴더 열기","command.reopenInWSL":"WSL에서 폴더 다시 열기","command.reopenInWindows":"Windows에서 폴더 다시 열기","command.reportIssue":"문제 보고...","command.revealInExplorer":"파일 탐색기에 표시","command.showLog":"로그 표시","description":"Linux용 Windows 하위 시스템(WSL)에서 폴더를 열고 Visual Studio Code의 전체 기능 집합을 활용하세요.","displayName":"WSL","indicator.workspaceSuffix":"WSL","remoteView.name":"WSL 대상","settings.remote.WSL.debug":"설정된 경우 WSL 로그의 출력에 디버그 정보가 표시됩니다.","settings.remote.WSL.downloadInBackground":"설정하면 WSL 확장이 백그라운드에서 최신 서버 빌드를 다운로드합니다. 지난 2주 동안 사용된 모든 WSL 플랫폼에서 이 작업을 수행합니다.","settings.remote.WSL.fileWatcher.polling":"설정된 경우 폴링이 WSL1 내에서 파일을 감시하는 데 사용됩니다. 폴링은 CPU를 많이 사용하지만 감시 중 폴더의 이름을 바꿀 수 없는 WSL1 문제를 해결합니다. 이 옵션을 적용하려면 다시 시작해야 합니다.","settings.remote.WSL.fileWatcher.pollingInterval":"`#remote.WSL.fileWatcher.polling#`이 설정된 경우 WSL1 배포판 내에서 사용되는 파일 감시자 폴링 간격(밀리초)입니다.\n이 옵션을 적용하려면 다시 시작해야 합니다.","settings.remote.WSL.useShellEnvironment":"설정된 경우 WSL 창이 창을 열었던 셸에서 환경을 가져옵니다.","settings.remote.WSL1.connectionMethod.deprecated":"더 이상 사용되지 않는 'wsl.exe'는 이제 항상 연결을 WSL로 전달하는 데 사용됩니다.","settings.remote.WSL2.connectionMethod.deprecated":"더 이상 사용되지 않는 'wsl.exe'는 이제 항상 연결을 WSL로 전달하는 데 사용됩니다.","walkthrough.comeBack.description":"WSL 터미널에서 ``code .``를 실행하면 언제든지 VS Code WSL 세션으로 쉽게 돌아갈 수 있습니다.\n VS Code는 WSL에 연결되어 자동으로 실행됩니다.","walkthrough.comeBack.imageAltText":"코드를 실행하는 외부 터미널. 명령","walkthrough.comeBack.title":"언제든지 다시 시도","walkthrough.createProject.description":"WSL에는 프로젝트 생성 및 액세스에 대한 [성능](https://docs.microsoft.com/windows/wsl/compare-versions#performance-across-os-file-systems) 이점이 있는 자체 파일 시스템이 있습니다. \nVS Code에서 WSL 확장을 사용하여 이 프로젝트를 열고 편집할 수 있습니다. \n[자세히 알아보기](https://code.visualstudio.com/docs/remote/wsl-tutorial) WSL 내에서 첫 번째 앱을 생성합니다. \n[WSL 파일 시스템에서 새 파일 만들기](command:explorer.newFile)","walkthrough.createProject.title":"WSL이 처음이신가요? 프로젝트 폴더를 만드세요.","walkthrough.exploreCommands.description":"WSL 기능은 VS Code에 포함되어 있으며 여러 명령을 추가합니다.\n``F1``을 눌러 명령 팔레트를 열고  \"WSL\"을 입력하여 명령을 불러올 수 있습니다. \nVS Code의 왼쪽 하단에 있는 녹색 원격 표시기를 통해 명령 세트를 열 수도 있습니다. \n[메뉴 열기](command:workbench.action.remote.showMenu)","walkthrough.exploreCommands.imageAltText":"WSL 명령의 이미지입니다.","walkthrough.exploreCommands.title":"WSL 시작하기","walkthrough.installTools.description":"풍부한 편집 및 디버깅 경험을 얻으려면 WSL에서 프로젝트에 대한 언어, 도구 집합 및 VS Code 확장을 설치하세요. \n[WSL에 확장 프로그램 설치](command:workbench.view.extensions)","walkthrough.installTools.title":"도구 설치","walkthrough.linuxEnv.description":"WSL 확장은 실제 Linux 커널을 사용하여 명령을 실행합니다. \nWSL 터미널에서 ``uname``을 실행하면 Linux 환경에 있음을 알 수 있습니다. \n[터미널을 열고 Linux 명령 시도](command:workbench.action.terminal.focus)","walkthrough.linuxEnv.imageAltText":"uname 명령을 표시하는 WSL 터미널","walkthrough.linuxEnv.title":"실제 Linux 환경","walkthrough.openProject.description":"WSL 파일 시스템에 프로젝트가 있으면 VS Code에서 직접 열 수 있습니다. \n[WSL에서 폴더 열기](command:remote-wsl.openFolder)","walkthrough.openProject.title":"프로젝트가 있습니까? WSL에서 여세요.","walkthrough.openWindow.description":"WSL을 활용하려면 Linux 코드가 로컬 서버에서 실행되는 WSL 창에서 배포판에 연결합니다. \n WSL 시작하기 환경의 다음 단계를 계속할 수도 있습니다. \n[WSL에 연결(default distro)](command:remote-wsl.connectToWSLDefault)","walkthrough.openWindow.imageAltText":"WSL 창의 이미지입니다.","walkthrough.openWindow.title":"WSL 창 열기","walkthrough.runDebug.description":"WSL 확장을 사용하면 Linux 앱을 쉽게 실행하고 디버그할 수 있습니다. \n실행 및 디버그 보기 또는 ``F5``를 사용하여 앱을 실행합니다. 중단점을 설정하고, 변수를 검사하고, 호출 스택을 탐색할 수 있습니다. \n[실행 및 디버그 보기 열기](command:workbench.view.debug)","walkthrough.runDebug.imageAltText":"WSL 세션에서 디버깅","walkthrough.runDebug.title":"실행 및 디버그","walkthrough.title":"WSL 시작하기","welcome.installDistro":"배포판을 추가하여 WSL을 시작하세요.\n[ 배포판 추가](command:remote-wsl.explorer.addDistro)","welcome.installWsl":"Linux용 Windows 하위 시스템을 설치하거나 [도움말 보기](command:~remote.helpPanel.focus)를 방문하여 WSL을 시작하세요."}

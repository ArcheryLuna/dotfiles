{"command.connect":"連線至 WSL","command.connectInNewWindow":"連線到新視窗中的 WSL","command.connectUsingDistro":"使用 Distro 連線至 WSL...","command.connectUsingDistroInNewWindow":"使用新視窗中的 Distro 連線到 WSL...","command.explorer.addDistro":"新增發行版","command.explorer.connectInCurrentWindow":"在目前的視窗中連線","command.explorer.connectInNewWindow":"在新視窗中連線","command.explorer.deleteDistro":"刪除發行版本","command.explorer.refresh":"重新整理","command.explorer.removeFolder":"移除最近使用的資料夾","command.explorer.setDefaultDistro":"設為預設發行版","command.getHelp":"說明","command.getStarted":"開始使用 WSL","command.openFolder":"在 WSL 中開啟資料夾...","command.provideFeedback":"提供意見反應","command.reopenFromRecommendation":"在 WSL 中開啟資料夾","command.reopenInWSL":"在 WSL 中重新開啟資料夾","command.reopenInWindows":"在 Windows 中重新開啟資料夾","command.reportIssue":"回報問題...","command.revealInExplorer":"在檔案總管中顯示","command.showLog":"顯示記錄","description":"開啟 Windows 子系統 Linux 版 (WSL) 中的任何資料夾，充分利用 Visual Studio Code 的完整功能集。","displayName":"WSL","indicator.workspaceSuffix":"WSL","remoteView.name":"WSL 目標","settings.remote.WSL.debug":"若設定，WSL 記錄檔中的輸出會顯示偵錯資訊。","settings.remote.WSL.downloadInBackground":"如果設定，WSL 延伸模組將在背景下載最新的伺服器組建。它會針對過去 2 週使用的所有 WSL 平台執行此動作。","settings.remote.WSL.fileWatcher.polling":"若設定，輪詢會用於在 WSL1 內監看檔案。輪詢可能會大量耗用 CPU 資源，但可以修正監看資料夾時無法重新命名的 WSL1 問題。此選項需要重新開機才能生效。","settings.remote.WSL.fileWatcher.pollingInterval":"若 `#remote.WSL.fileWatcher.polling#` 已設定，以毫秒為單位的檔案監看員輪詢間隔會用於 WSL1 發行版本內。\n此選項需要重新開機才能生效。","settings.remote.WSL.useShellEnvironment":"若設定，WSL 視窗會從其開啟來源的殼層取得環境。","settings.remote.WSL1.connectionMethod.deprecated":"已不再使用的 'wsl.exe'，現在一律會用來將連線轉送至 WSL。","settings.remote.WSL2.connectionMethod.deprecated":"已不再使用的 'wsl.exe'，現在一律會用來將連線轉送至 WSL。","walkthrough.comeBack.description":"您隨時都可以在 WSL 終端中執行 ``code .`` 以輕鬆回到 VS Code WSL 工作階段。\n VS Code 會在連線到 WSL 時自動啟動。","walkthrough.comeBack.imageAltText":"執行程式碼的外部終端 . 命令","walkthrough.comeBack.title":"隨時回來","walkthrough.createProject.description":"WSL 有自己的檔案系統，具有建立和存取專案的[效能](https://docs.microsoft.com/windows/wsl/compare-versions#performance-across-os-file-systems) 優勢。\n在 VS Code 中，您可以使用 WSL 延伸模組來開啟和編輯此專案。\n[了解作法](https://code.visualstudio.com/docs/remote/wsl-tutorial) 以建立 WSL 中的第一個應用程式。\n[在 WSL 檔案系統中建立新檔案](command:explorer.newFile)WSL","walkthrough.createProject.title":"初次使用 WSL? 建立專案資料夾。","walkthrough.exploreCommands.description":"WSL 功能包含在 VS 程式碼中並會新增數個命令到。\n您可以按 ``F1`` 開啟命令選擇區並輸入  「WSL」，以顯示它們。\n您也可以透過 VS Code 左下方的綠色遠端指示器開啟遠端命令集。\n[開啟功能表](command:workbench.action.remote.showMenu)","walkthrough.exploreCommands.imageAltText":"WSL 命令的影像。","walkthrough.exploreCommands.title":"開始使用 WSL","walkthrough.installTools.description":"若要取得豐富的編輯和偵錯體驗，請為 WSL 中的專案安裝語言、工具集和 VS Code 延伸模組。\n[在 WSL 中安裝延伸模組](command:workbench.view.extensions)","walkthrough.installTools.title":"安裝工具","walkthrough.linuxEnv.description":"WSL 延伸模組會使用真實 Linux 核心執行命令。\n在 WSL 終端執行 ``uname`` 會顯示您位於 Linux 環境中。\n[開啟終端並試用 Linux 命令](command:workbench.action.terminal.focus)","walkthrough.linuxEnv.imageAltText":"顯示未命名命令的 WSL 終端","walkthrough.linuxEnv.title":"真實 Linux 環境","walkthrough.openProject.description":"一旦在 WSL 檔案系統中擁有專案，即可以直接在 VS Code 中開啟它。 \n[在 WSL 中開啟資料夾](command:remote-wsl.openFolder)","walkthrough.openProject.title":"有專案嗎? 請在 WSL 中開啟它。","walkthrough.openWindow.description":"若要利用 WSL，請在 WSL 視窗中連線至 Distro，其中您的 Linux 程式碼會在本機伺服器上執行。\n您也可以繼續進行 WSL 入門體驗的下一個步驟! \n[連線至 WSL (預設 Distro)](command:remote-wsl.connectToWSLDefault)","walkthrough.openWindow.imageAltText":"WSL 視窗的影像。","walkthrough.openWindow.title":"開啟 WSL 視窗","walkthrough.runDebug.description":"WSL 延伸模組可輕鬆執行和偵錯您的 Linux 應用程式。\n使用執行和偵錯檢視或 ``F5`` 以執行您的應用程式。您可以設定中斷點、檢查變數，以及瀏覽呼叫堆疊。\n[開啟執行和偵錯檢視](command:workbench.view.debug)","walkthrough.runDebug.imageAltText":"在 WSL 工作階段中偵錯","walkthrough.runDebug.title":"執行與偵錯","walkthrough.title":"開始使用 WSL","welcome.installDistro":"新增發行版以開始使用 WSL。\n[新增發行版](command:remote-wsl.explorer.addDistro)","welcome.installWsl":"安裝 Windows 子系統 Linux 版或瀏覽 [說明檢視](command:~remote.helpPanel.focus) 以開始使用 WSL。"}

{
    "resource.AddFile": {
        "body": [
            "resource.AddFile(${1:path})$0"
        ],
        "description": "RESOURCE [Server] Adds the specified and all related files to the files the client should download. For convenience, this function will automatically add any other files that are related to the selected one, and throw an error if it can't find them. For example, a .vmt file will automatically add the .vtf with the same name, and a .mdl file will automatically add all .vvd, .ani, .dx80.vtx, .dx90.vtx, .sw.vtx, .phy and .jpg files with the same name, with a separate error for each missing file. If you do not want it to do this, use resource.AddSingleFile.\n\n[string] path\n  Path of the file to be added, relative to garrysmod/. Do not add .bz2 to the filepath.",
        "prefix": "resource.AddFile"
    },
    "resource.AddSingleFile": {
        "body": [
            "resource.AddSingleFile(${1:path})$0"
        ],
        "description": "RESOURCE [Server] \n\n[string] path\n  Path of the file to be added, relative to garrysmod/",
        "prefix": "resource.AddSingleFile"
    },
    "resource.AddWorkshop": {
        "body": [
            "resource.AddWorkshop(${1:workshopid})$0"
        ],
        "description": "RESOURCE [Server] Adds a workshop addon for the client to download before entering the server. Having the raw files from a workshop item does not count as having already downloaded it.\nSo players who previously downloaded a map through Fast Download will have to re-download it if you use the workshop. You should try to only add addons that have custom content ( models, sounds, etc ). Gamemodes that are workshop enabled are automatically added to this list - so there's no need to add them.\nThe server's current map is also automatically added, if it is loaded from a workshop addon.\n\n[string] workshopid\n  The workshop id of the file. This cannot be a collection.",
        "prefix": "resource.AddWorkshop"
    }
}
{
	"cam/ApplyShake": {
		"body": [
			"cam.ApplyShake(${1:pos}, ${2:angles}, ${3:factor})$0"
		],
		"description": "Shakes the screen at a certain position.",
		"prefix": "cam.ApplyShake"
	},
	"cam/End": {
		"body": [
			"cam.End()$0"
		],
		"description": "Switches the renderer back to the previous drawing mode from a 3D context.",
		"prefix": "cam.End"
	},
	"cam/End2D": {
		"body": [
			"cam.End2D()$0"
		],
		"description": "Switches the renderer back to the previous drawing mode from a 2D context.",
		"prefix": "cam.End2D"
	},
	"cam/End3D": {
		"body": [
			"cam.End3D()$0"
		],
		"description": "Switches the renderer back to the previous drawing mode from a 3D context.",
		"prefix": "cam.End3D"
	},
	"cam/End3D2D": {
		"body": [
			"cam.End3D2D()$0"
		],
		"description": "Switches the renderer back to the previous drawing mode from a 3D2D context.",
		"prefix": "cam.End3D2D"
	},
	"cam/EndOrthoView": {
		"body": [
			"cam.EndOrthoView()$0"
		],
		"description": "Switches the renderer back to the previous drawing mode from a 3D orthographic rendering context.",
		"prefix": "cam.EndOrthoView"
	},
	"cam/IgnoreZ": {
		"body": [
			"cam.IgnoreZ(${1:ignoreZ})$0"
		],
		"description": "Tells the renderer to ignore the depth buffer and draw any upcoming operation \u0026#34;ontop\u0026#34; of everything that was drawn yet.",
		"prefix": "cam.IgnoreZ"
	},
	"cam/PopModelMatrix": {
		"body": [
			"cam.PopModelMatrix()$0"
		],
		"description": "Pops the current active rendering matrix from the stack and reinstates the previous one.",
		"prefix": "cam.PopModelMatrix"
	},
	"cam/PushModelMatrix": {
		"body": [
			"cam.PushModelMatrix(${1:matrix})$0"
		],
		"description": "Pushes the specified matrix onto the render matrix stack. Unlike opengl, this will replace the current model matrix.",
		"prefix": "cam.PushModelMatrix"
	},
	"cam/Start": {
		"body": [
			"cam.Start(${1:dataTbl})$0"
		],
		"description": "Sets up a new rendering context. You can easily use this instead of",
		"prefix": "cam.Start"
	},
	"cam/Start2D": {
		"body": [
			"cam.Start2D()$0"
		],
		"description": "Sets up a new 2D rendering context. Must be finished by",
		"prefix": "cam.Start2D"
	},
	"cam/Start3D": {
		"body": [
			"cam.Start3D(${1:pos=EyePos()}, ${2:angles=EyeAngles()}, ${3:fov=nil}, ${4:x=0}, ${5:y=0}, ${6:w=ScrW()}, ${7:h=ScrH()}, ${8:zNear=nil}, ${9:zFar=nil})$0"
		],
		"description": "Sets up a new 3D rendering context. Must be finished by",
		"prefix": "cam.Start3D"
	},
	"cam/Start3D2D": {
		"body": [
			"cam.Start3D2D(${1:pos}, ${2:angles}, ${3:scale})$0"
		],
		"description": "Sets up a new 2D rendering context. Must be finished by",
		"prefix": "cam.Start3D2D"
	},
	"cam/StartOrthoView": {
		"body": [
			"cam.StartOrthoView(${1:leftOffset}, ${2:topOffset}, ${3:rightOffset}, ${4:bottomOffset})$0"
		],
		"description": "Sets up a new 3d context using orthographic projection.",
		"prefix": "cam.StartOrthoView"
	}
}
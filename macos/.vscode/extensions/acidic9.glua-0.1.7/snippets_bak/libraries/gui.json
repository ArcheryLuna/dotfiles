{
	"gui/ActivateGameUI": {
		"body": [
			"gui.ActivateGameUI()$0"
		],
		"description": "Opens the game menu overlay.",
		"prefix": "gui.ActivateGameUI"
	},
	"gui/EnableScreenClicker": {
		"body": [
			"gui.EnableScreenClicker(${1:enabled})$0"
		],
		"description": "Enables the mouse cursor without restricting player movement, like using Sandbox\u0026#39;s Context Menu",
		"prefix": "gui.EnableScreenClicker"
	},
	"gui/HideGameUI": {
		"body": [
			"gui.HideGameUI()$0"
		],
		"description": "Hides the game menu overlay.",
		"prefix": "gui.HideGameUI"
	},
	"gui/InternalCursorMoved": {
		"body": [
			"gui.InternalCursorMoved(${1:deltaX}, ${2:deltaY})$0"
		],
		"description": "Simulates a mouse move with the given deltas.",
		"prefix": "gui.InternalCursorMoved"
	},
	"gui/InternalKeyCodePressed": {
		"body": [
			"gui.InternalKeyCodePressed(${1:key})$0"
		],
		"description": "Simulates a key press for the given key.",
		"prefix": "gui.InternalKeyCodePressed"
	},
	"gui/InternalKeyCodeReleased": {
		"body": [
			"gui.InternalKeyCodeReleased(${1:key})$0"
		],
		"description": "Simulates a key release for the given key.",
		"prefix": "gui.InternalKeyCodeReleased"
	},
	"gui/InternalKeyCodeTyped": {
		"body": [
			"gui.InternalKeyCodeTyped(${1:key})$0"
		],
		"description": "Simulates a key type typing to the specified key.",
		"prefix": "gui.InternalKeyCodeTyped"
	},
	"gui/InternalKeyTyped": {
		"body": [
			"gui.InternalKeyTyped(${1:code})$0"
		],
		"description": "Simulates an ASCII symbol writing. Use to write text in the chat or in VGUI. Doesn\u0026#39;t work while the main menu is open!",
		"prefix": "gui.InternalKeyTyped"
	},
	"gui/InternalMouseDoublePressed": {
		"body": [
			"gui.InternalMouseDoublePressed(${1:key})$0"
		],
		"description": "Simulates a double mouse key press for the given mouse key.",
		"prefix": "gui.InternalMouseDoublePressed"
	},
	"gui/InternalMousePressed": {
		"body": [
			"gui.InternalMousePressed(${1:key})$0"
		],
		"description": "Simulates a mouse key press for the given mouse key.",
		"prefix": "gui.InternalMousePressed"
	},
	"gui/InternalMouseReleased": {
		"body": [
			"gui.InternalMouseReleased(${1:key})$0"
		],
		"description": "Simulates a mouse key release for the given mouse key.",
		"prefix": "gui.InternalMouseReleased"
	},
	"gui/InternalMouseWheeled": {
		"body": [
			"gui.InternalMouseWheeled(${1:delta})$0"
		],
		"description": "Simulates a mouse wheel scroll with the given delta.",
		"prefix": "gui.InternalMouseWheeled"
	},
	"gui/IsConsoleVisible": {
		"body": [
			"gui.IsConsoleVisible()$0"
		],
		"description": "Returns whether the console is visible or not.",
		"prefix": "gui.IsConsoleVisible"
	},
	"gui/IsGameUIVisible": {
		"body": [
			"gui.IsGameUIVisible()$0"
		],
		"description": "Returns whenever the game menu overlay ( main menu ) is open or not.",
		"prefix": "gui.IsGameUIVisible"
	},
	"gui/MousePos": {
		"body": [
			"gui.MousePos()$0"
		],
		"description": "Returns the cursor\u0026#39;s position on the screen",
		"prefix": "gui.MousePos"
	},
	"gui/MouseX": {
		"body": [
			"gui.MouseX()$0"
		],
		"description": "Returns x component of the mouse position.",
		"prefix": "gui.MouseX"
	},
	"gui/MouseY": {
		"body": [
			"gui.MouseY()$0"
		],
		"description": "Returns y component of the mouse position.",
		"prefix": "gui.MouseY"
	},
	"gui/OpenURL": {
		"body": [
			"gui.OpenURL(${1:url})$0"
		],
		"description": "Opens specified URL in the steam overlay browser. The URL has to start with either http:// or https://",
		"prefix": "gui.OpenURL"
	},
	"gui/ScreenToVector": {
		"body": [
			"gui.ScreenToVector(${1:x}, ${2:y})$0"
		],
		"description": "Converts the specified screen position to a direction vector local to the player\u0026#39;s view.",
		"prefix": "gui.ScreenToVector"
	},
	"gui/SetMousePos": {
		"body": [
			"gui.SetMousePos(${1:mouseX}, ${2:mouseY})$0"
		],
		"description": "No description available.",
		"prefix": "gui.SetMousePos"
	},
	"gui/ShowConsole": {
		"body": [
			"gui.ShowConsole()$0"
		],
		"description": "Shows console in the game UI.",
		"prefix": "gui.ShowConsole"
	}
}